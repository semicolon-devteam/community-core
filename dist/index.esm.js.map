{"version":3,"file":"index.esm.js","sources":["../lib/utils/numberUtil.ts","../lib/utils/dateUtil.ts","../lib/utils/authUtil.ts","../lib/utils/imageUtil.ts","../lib/utils/levelUtil.ts","../lib/utils/stringUtil.ts","../lib/utils/urlUtil.ts","../lib/utils/jwtUtil.ts","../lib/utils/uploadErrorHandler.ts","../lib/config/init.ts","../lib/components/atoms/Button/index.tsx","../lib/components/atoms/Badge/index.tsx","../lib/components/atoms/Avatar/index.tsx","../lib/components/atoms/Input.tsx","../lib/components/atoms/Select.tsx","../lib/components/atoms/Checkbox.tsx","../lib/components/atoms/Radio.tsx","../lib/components/atoms/Switch.tsx","../lib/components/atoms/TextArea.tsx","../lib/index.ts","../lib/config/Supabase/client.ts"],"sourcesContent":["/**\n * 숫자를 1000 단위로 콤마(,)를 찍어서 문자열로 변환\n * @param num 변환할 숫자 또는 숫자 형태의 문자열\n * @returns 1000단위로 콤마가 포함된 문자열\n */\nexport const formatNumberWithComma = (num: number | string): string => {\n\n    if (num === null || num === undefined || num === '') {\n        return '';\n    }\n    \n    // 숫자나 문자열을 문자열로 변환\n    const numStr: string = typeof num === 'number' ? num.toString() : num;\n    \n    // 소수점이 있는 경우 처리\n    const parts = numStr.split('.');\n    \n    // 정수 부분에 3자리마다 콤마 추가\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    \n    // 소수점이 있으면 다시 합치고, 없으면 정수 부분만 반환\n    return parts.length > 1 ? parts.join('.') : parts[0];\n};\n\n/**\n * 문자열에서 콤마를 제거하고 숫자로 변환\n * @param str 콤마가 포함된 문자열\n * @returns 콤마가 제거된 숫자\n */\nexport const removeCommaFromString = (str: string): number => {\n  if (!str) return 0;\n  return parseFloat(str.replace(/,/g, ''));\n};\n","// formatDate와 timeAgo 함수를 서버와 클라이언트 모두에서 사용할 수 있게 설정\n\nexport function formatDate(dateString: string, isSimple = false): string {\n  if (!dateString) return \"\";\n\n  const date = new Date(dateString);\n\n  // 날짜가 유효하지 않은 경우\n  if (isNaN(date.getTime())) {\n    return dateString;\n  }\n\n  // 날짜를 YYYY.MM.DD. HH:MM:SS 형식으로 포맷팅\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n  const seconds = String(date.getSeconds()).padStart(2, \"0\");\n\n  return isSimple\n    ? `${year}.${month}.${day}`\n    : `${year}.${month}.${day}. ${hours}:${minutes}:${seconds}`;\n}\n\nexport function timeAgo(dateString: string, isSimple: boolean = true): string {\n  if (!dateString) return \"\";\n\n  const date = new Date(dateString);\n\n  // 날짜가 유효하지 않은 경우\n  if (isNaN(date.getTime())) {\n    return dateString;\n  }\n\n  // 서버 측 렌더링 시 포맷된 날짜 반환\n  // if (typeof window === \"undefined\") {\n  //   // 서버에서는 정적인 포맷으로 반환\n  //   return formatDate(dateString);\n  // }\n\n  const now = new Date();\n  const seconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n\n  // 1분 미만\n  if (seconds < 60) {\n    return \"방금 전\";\n  }\n\n  // 1시간 미만\n  const minutes = Math.floor(seconds / 60);\n  if (minutes < 60) {\n    return `${minutes}분 전`;\n  }\n\n  // 24시간 미만\n  const hours = Math.floor(minutes / 60);\n  if (hours < 24) {\n    return `${hours}시간 전`;\n  }\n\n  return isSimple ? DateUtil.toChar(dateString, \"MM.dd\") : DateUtil.toChar(dateString, \"yyyy.MM.dd. HH:mm:ss\");\n\n  // // 30일 미만\n  // const days = Math.floor(hours / 24);\n  // if (days < 30) {\n  //   return `${days}일 전`;\n  // }\n\n  // // 12개월 미만\n  // const months = Math.floor(days / 30);\n  // if (months < 12) {\n  //   return `${months}개월 전`;\n  // }\n\n  // // 1년 이상\n  // const years = Math.floor(months / 12);\n  // return `${years}년 전`;\n}\n\nexport const DateUtil = {\n  toChar(\n    input: string | Date,\n    format: string = \"YYYY.MM.DD. HH:MM:SS\"\n  ): string {\n    const date = typeof input === \"string\" ? new Date(input) : input;\n\n    if (!date || isNaN(date.getTime())) return \"\";\n\n    const map: Record<string, string> = {\n      yyyy: String(date.getFullYear()),\n      MM: String(date.getMonth() + 1).padStart(2, \"0\"),\n      dd: String(date.getDate()).padStart(2, \"0\"),\n      HH: String(date.getHours()).padStart(2, \"0\"),\n      mm: String(date.getMinutes()).padStart(2, \"0\"),\n      ss: String(date.getSeconds()).padStart(2, \"0\"),\n    };\n\n    return Object.entries(map).reduce(\n      (result, [key, value]) => result.replace(key, value),\n      format\n    );\n  },\n};\n","/**\n * 통합 인증 및 권한 관리 유틸리티\n */\n\nimport type { User } from '../types/User';\n\n// 임시 타입 정의 (Phase 2에서 적절한 위치로 이동 예정)\nexport type permissionType = 'super_admin' | 'admin' | 'user' | 'anonymous';\n\ninterface JWTUserPayload {\n  sub: string;\n  user_metadata: any;\n  is_admin?: boolean;\n  level?: number;\n}\n\nexport interface AuthUser {\n  id: string;\n  nickname: string;\n  level: number;\n  permissionType: permissionType;\n  is_admin?: boolean;\n}\n\n/**\n * 사용자가 JWT 페이로드인지 확인하는 타입 가드\n */\nexport function isJWTPayload(user: any): user is JWTUserPayload {\n  return user && typeof user.sub === 'string' && user.user_metadata;\n}\n\n/**\n * 사용자가 User 객체인지 확인하는 타입 가드 (Redux store에서 온 데이터)\n */\nexport function isUserObject(user: any): user is User {\n  return (\n    user &&\n    typeof user.id === 'string' &&\n    user.nickname &&\n    user.permissionType\n  );\n}\n\nexport const isValidUser = (user: User | null): user is User => {\n  return (\n    !!user &&\n    typeof user.id === 'string' &&\n    !!user.nickname &&\n    !!user.permissionType\n  );\n};\n\n// checkIsAdmin 함수의 타입을 User와 완벽하게 호환되도록 수정\nexport const checkIsAdmin = (user: {\n  level: number;\n  permissionType: permissionType;\n}): boolean => {\n  return (\n    user.level >= 99 ||\n    user.permissionType === 'admin' ||\n    user.permissionType === 'super_admin'\n  );\n};\n\nexport const isAdmin = (user: AuthUser | User | null): boolean => {\n  if (!user) return false;\n  return checkIsAdmin(user);\n};\n\nexport const isSuperAdmin = (user: AuthUser | User | null): boolean => {\n  if (!user) return false;\n  return checkIsAdmin(user);\n};\n\nexport const isAdminOrSuperAdmin = (user: AuthUser | User | null): boolean => {\n  if (!user) return false;\n  return checkIsAdmin(user);\n};\n\n/**\n * 특정 레벨 이상 권한 체크\n * @param user 사용자 정보 (Redux store의 User 객체 권장)\n * @param requiredLevel 필요한 최소 레벨\n * @returns 권한 여부\n */\nexport const hasLevelPermission = (\n  user?: AuthUser | null,\n  requiredLevel: number = 0\n): boolean => {\n  // 사용자가 없거나 빈 객체인 경우\n  if (!user || (typeof user === 'object' && Object.keys(user).length === 0)) {\n    return requiredLevel === 0;\n  }\n\n  // 관리자는 모든 권한 보유\n  if (isAdmin(user)) return true;\n\n  // Redux store의 User 객체인 경우 (권장)\n  if (isUserObject(user)) {\n    return user.level >= requiredLevel;\n  }\n\n  // JWT 페이로드인 경우 (레거시 호환성 - 권장하지 않음)\n  if (isJWTPayload(user)) {\n    console.warn(\n      '[DEPRECATED] JWT 기반 권한 체크는 권장하지 않습니다. useAppSelector(selectUserInfo)를 사용하여 Redux store의 사용자 정보를 활용하세요.'\n    );\n    // 레거시 호환성을 위한 기본 권한 매핑\n    const userLevel = user.is_admin ? 99 : (user.level || 1);\n    return userLevel >= requiredLevel;\n  }\n\n  // 기존 UserPermission 형태인 경우 (레거시)\n  return user.level >= requiredLevel;\n};\n\n/**\n * 게시판 권한 체크 (읽기, 쓰기, 댓글 등)\n * @param user 사용자 정보 (Redux store의 User 객체 권장)\n * @param requiredLevel 필요한 권한 레벨\n * @param isLoggedIn 로그인 여부\n * @returns 권한 여부\n */\nexport const hasBoardPermission = (\n  user?: AuthUser | null,\n  requiredLevel: number | 'free' = 0,\n  isLoggedIn: boolean = false\n): boolean => {\n  // 'free' 또는 0인 경우 모든 사용자 접근 가능\n  if (requiredLevel === 'free' || requiredLevel === 0) {\n    return true;\n  }\n\n  // 로그인이 필요한 경우\n  if (!isLoggedIn || !user) {\n    return false;\n  }\n\n  return hasLevelPermission(user, requiredLevel);\n};\n\n/**\n * 사용자 권한 레벨 반환\n * @param user 사용자 정보 (Redux store의 User 객체 권장)\n * @returns 사용자 레벨\n */\nexport const getUserLevel = (user?: AuthUser | null): number => {\n  if (!user) return 0;\n\n  // Redux store의 User 객체인 경우 (권장)\n  if (isUserObject(user)) {\n    return user.level || 0;\n  }\n\n  // JWT 페이로드인 경우 (레거시 호환성 - 권장하지 않음)\n  if (isJWTPayload(user)) {\n    console.warn(\n      '[DEPRECATED] JWT 기반 레벨 조회는 권장하지 않습니다. useAppSelector(selectUserInfo)를 사용하여 Redux store의 사용자 정보를 활용하세요.'\n    );\n    // 레거시 호환성을 위한 기본 레벨 매핑\n    return user.is_admin ? 99 : (user.level || 1);\n  }\n\n  // 기존 UserPermission 형태인 경우 (레거시)\n  return user.level || 0;\n};\n\nexport const getUserPermissionType = (user: AuthUser | User | null): permissionType => {\n  if (!user) {\n    return 'anonymous';\n  }\n\n  return user.permissionType || 'user';\n};\n\nexport const getUserPermissionTypeFromJWT = (user: AuthUser | User | null): permissionType => {\n  if (!user) {\n    return 'anonymous';\n  }\n\n  return user.permissionType || 'user';\n};\n\nexport const getUserPermissionTypeFromDB = (user: AuthUser | User | null): permissionType => {\n  if (!user) {\n    return 'anonymous';\n  }\n\n  return user.permissionType || 'user';\n};\n","// 이미지 캐싱을 위한 사이즈 상수\nexport const IMAGE_SIZE = {\n  sm: 120,\n  md: 240,\n  lg: 480,\n  xl: 720,\n  xxl: 960,\n} as const;\n\nexport type ImageSizeKey = keyof typeof IMAGE_SIZE;\n\n/**\n * Supabase Storage URL을 Image Transformation URL로 변환\n * @param url - 원본 Supabase Storage URL\n * @param size - 이미지 사이즈 (IMAGE_SIZE의 키 또는 숫자)\n * @param quality - 이미지 품질 (20-100, 기본값: 70)\n * @returns 변환된 Image Transformation URL\n */\nexport function transformSupabaseImageUrl(\n  url: string,\n  size: ImageSizeKey | number = 'md',\n  quality: number = 70\n): string {\n  if (!url || !url.includes('/storage/v1/object/')) {\n    return url;\n  }\n\n  try {\n    // object를 render/image로 변경\n    const transformedUrl = url.replace(\n      '/storage/v1/object/',\n      '/storage/v1/render/image/'\n    );\n\n    // 사이즈 값 결정\n    const width = typeof size === 'number' ? size : IMAGE_SIZE[size];\n\n    // 품질 값 검증 (20-100 범위)\n    const validQuality = Math.max(20, Math.min(100, quality));\n\n    // 쿼리 파라미터 추가\n    const separator = transformedUrl.includes('?') ? '&' : '?';\n    const params = `width=${width}&quality=${validQuality}`;\n\n    return `${transformedUrl}${separator}${params}`;\n  } catch (error) {\n    console.error('Failed to transform Supabase image URL:', error);\n    return url; // 변환 실패 시 원본 URL 반환\n  }\n}\n\n/**\n * 여러 사이즈의 이미지 URL을 생성 (srcSet용)\n * @param url - 원본 Supabase Storage URL\n * @param sizes - 생성할 사이즈 배열\n * @param quality - 이미지 품질 (기본값: 70)\n * @returns 사이즈별 URL 객체\n */\nexport function generateImageSrcSet(\n  url: string,\n  sizes: ImageSizeKey[] = ['sm', 'md', 'lg'],\n  quality: number = 70\n): Record<ImageSizeKey, string> {\n  const result = {} as Record<ImageSizeKey, string>;\n\n  sizes.forEach(size => {\n    result[size] = transformSupabaseImageUrl(url, size, quality);\n  });\n\n  return result;\n}\n\n/**\n * Next.js Image 컴포넌트용 로더 함수\n * @param src - 이미지 소스 (버킷 경로)\n * @param width - 요청된 너비\n * @param quality - 이미지 품질\n * @returns 변환된 URL\n */\nexport function supabaseImageLoader({\n  src,\n  width,\n  quality,\n}: {\n  src: string;\n  width: number;\n  quality?: number;\n}): string {\n  const baseUrl = 'https://community.semi-colon.space';\n  const validQuality = quality || 75;\n\n  return `${baseUrl}/storage/v1/render/image/public/${src}?width=${width}&quality=${validQuality}`;\n}\n\n/**\n * 이미지 src의 절대경로를 상대경로로 변환\n * NEXT_PUBLIC_STORAGE_URL 또는 NEXT_PUBLIC_SUPABASE_URL이 포함된 URL을 상대경로로 변환합니다.\n * @param src - 변환할 이미지 소스 URL\n * @returns 상대경로로 변환된 URL 또는 원본 URL\n */\nexport function normalizeImageSrc(src: string): string {\n  if (!src || typeof src !== 'string') {\n    return src;\n  }\n\n  try {\n    const resourceUrl = process.env.NEXT_PUBLIC_STORAGE_URL;\n    \n    // NEXT_PUBLIC_STORAGE_URL이 설정되어 있고, src가 해당 URL로 시작하는 경우\n    if (resourceUrl && src.startsWith(resourceUrl)) {\n      // NEXT_PUBLIC_STORAGE_URL 부분을 제거하여 상대경로로 변환\n      const relativePath = src.replace(resourceUrl, '');\n      \n      // relativePath가 '/'로 시작하지 않는 경우 '/'를 붙이도록 처리\n      if (!relativePath.startsWith('/')) {\n        return `/${relativePath}`;\n      }\n      return relativePath;\n    }\n\n    // NEXT_PUBLIC_RESOURCE_URL이 없거나 해당 URL로 시작하지 않는 경우 원본 반환\n    return src;\n  } catch (error) {\n    console.error('Failed to normalize image src:', error);\n    return src; // 에러 발생 시 원본 URL 반환\n  }\n}\n\n/**\n * Next.js Image 컴포넌트용 src 변환 헬퍼\n * 절대경로를 상대경로로 변환하고 Supabase 이미지 최적화도 적용합니다.\n * @param src - 원본 이미지 소스\n * @param size - 이미지 사이즈 (선택사항)\n * @param quality - 이미지 품질 (선택사항)\n * @returns 최적화된 이미지 URL\n */\nexport function optimizeImageSrc(\n  src: string,\n  size?: ImageSizeKey | number,\n  quality?: number\n): string {\n  // 먼저 상대경로로 변환\n  const normalizedSrc = normalizeImageSrc(src);\n  \n  // Supabase 이미지인 경우 최적화 적용\n  if (size !== undefined && normalizedSrc.includes('/storage/v1/object/')) {\n    return transformSupabaseImageUrl(normalizedSrc, size, quality);\n  }\n  \n  return normalizedSrc;\n}\n\n/**\n * 이미지가 GIF 파일인지 확인\n * @param src - 이미지 소스 URL\n * @returns GIF 파일 여부\n */\nexport function isGifImage(src: string): boolean {\n  if (!src || typeof src !== 'string') {\n    return false;\n  }\n  \n  // URL에서 확장자 확인 (.gif로 끝나는지)\n  const lowerSrc = src.toLowerCase();\n  return lowerSrc.endsWith('.gif') || lowerSrc.includes('.gif?');\n}\n\n/**\n * 이미지가 애니메이션 포맷인지 확인 (GIF, WEBP 애니메이션 등)\n * @param src - 이미지 소스 URL\n * @returns 애니메이션 이미지 여부\n */\nexport function isAnimatedImage(src: string): boolean {\n  if (!src || typeof src !== 'string') {\n    return false;\n  }\n  \n  const lowerSrc = src.toLowerCase();\n  // GIF는 항상 애니메이션일 가능성이 있음\n  // WEBP는 애니메이션을 지원하지만 URL만으로는 판단 불가\n  return isGifImage(src);\n}\n\n/**\n * Next.js Image 컴포넌트에 필요한 props를 자동으로 결정\n * GIF 파일의 경우 unoptimized 속성을 추가\n * @param src - 이미지 소스 URL\n * @returns Image 컴포넌트용 추가 props\n */\nexport function getImageProps(src: string): { unoptimized?: boolean } {\n  // GIF 파일인 경우 unoptimized 설정\n  if (isGifImage(src)) {\n    return { unoptimized: true };\n  }\n  \n  return {};\n}\n","// 임시 타입 정의 (Phase 2에서 적절한 위치로 이동 예정)\ninterface LevelInfo {\n  level: number;\n  required_points: number;\n}\n\n/**\n * 레벨 관련 유틸리티 함수들\n */\nexport class LevelUtil {\n  /**\n   * 현재 포인트를 기반으로 사용자의 실제 레벨을 계산\n   */\n  static calculateUserLevel(currentPoints: number, levelTable: LevelInfo[]): number {\n    if (!levelTable.length) return 0;\n    \n    // 레벨표를 오름차순으로 정렬\n    const sortedLevels = [...levelTable].sort((a, b) => a.level - b.level);\n    \n    let userLevel = 0;\n    for (const level of sortedLevels) {\n      if (currentPoints >= level.required_points) {\n        userLevel = level.level;\n      } else {\n        break;\n      }\n    }\n    \n    return userLevel;\n  }\n\n  /**\n   * 현재 레벨과 다음 레벨 정보를 반환\n   */\n  static getLevelProgress(currentPoints: number, levelTable: LevelInfo[]) {\n    \n    if (!levelTable.length) {\n      return {\n        currentLevel: 0,\n        currentLevelPoints: 0,\n        nextLevel: 1,\n        nextLevelPoints: 0,\n        progressPercentage: 0,\n        pointsToNext: 0,\n      };\n    }\n\n    const sortedLevels = [...levelTable].sort((a, b) => a.level - b.level);\n    const userLevel = this.calculateUserLevel(currentPoints, levelTable);\n    \n    // 현재 레벨 정보 찾기\n    const currentLevelInfo = sortedLevels.find(level => level.level === userLevel);\n    const currentLevelPoints = currentLevelInfo?.required_points || 0;\n    \n    // 다음 레벨 정보 찾기\n    const nextLevelInfo = sortedLevels.find(level => level.level === userLevel + 1);\n    const nextLevel = nextLevelInfo?.level || userLevel;\n    const nextLevelPoints = nextLevelInfo?.required_points || currentLevelPoints;\n    \n    // 진행률 계산\n    let progressPercentage = 0;\n    let pointsToNext = 0;\n    \n    if (nextLevelInfo) {\n      // 현재 레벨에서 다음 레벨까지 필요한 포인트\n      const pointsNeededForNext = nextLevelPoints - currentLevelPoints;\n      // 현재 레벨을 넘어선 포인트\n      const pointsEarnedInCurrentLevel = currentPoints - currentLevelPoints;\n      \n      progressPercentage = pointsNeededForNext > 0 \n        ? Math.min(100, (pointsEarnedInCurrentLevel / pointsNeededForNext) * 100)\n        : 100;\n      \n      pointsToNext = Math.max(0, nextLevelPoints - currentPoints);\n    } else {\n      // 최고 레벨에 도달한 경우\n      progressPercentage = 100;\n      pointsToNext = 0;\n    }\n\n    return {\n      currentLevel: userLevel,\n      currentLevelPoints,\n      nextLevel,\n      nextLevelPoints,\n      progressPercentage: Math.round(progressPercentage),\n      pointsToNext,\n    };\n  }\n  /**\n   * 다음 레벨 정보를 반환 (간단한 형태)\n   */\n  static getNextLevelInfo(currentPoints: number, levelTable: LevelInfo[]) {\n    if (!levelTable.length) {\n      return {\n        nextLevel: 1,\n        requiredPoint: 0,\n        levelUpPercentage: 0,\n        isMaxLevel: true,\n      };\n    }\n    \n\n    const sortedLevels = [...levelTable].sort((a, b) => a.level - b.level);\n    const userLevel = this.calculateUserLevel(currentPoints, levelTable);\n    \n    // 현재 레벨 정보 찾기\n    const currentLevelInfo = sortedLevels.find(level => level.level === userLevel);\n    const currentLevelPoints = currentLevelInfo?.required_points || 0;\n    \n    // 다음 레벨 정보 찾기\n    const nextLevelInfo = sortedLevels.find(level => level.level === userLevel + 1);\n    \n    if (!nextLevelInfo) {\n      // 최고 레벨에 도달한 경우\n      return {\n        nextLevel: userLevel,\n        requiredPoint: 0,\n        levelUpPercent: 100,\n        isMaxLevel: true,\n      };\n    }\n    \n    const nextLevel = nextLevelInfo.level;\n    const nextLevelPoints = nextLevelInfo.required_points;\n    \n    // 다음 레벨까지 필요한 포인트\n    const requiredPoint = Math.max(0, nextLevelPoints - currentPoints);\n    \n    // 현재 레벨에서 다음 레벨까지의 진행률 계산\n    const pointsNeededForNext = nextLevelPoints - currentLevelPoints;\n    const pointsEarnedInCurrentLevel = currentPoints - currentLevelPoints;\n    \n    const levelUpPercent = pointsNeededForNext > 0 \n      ? Math.min(100, Math.round((pointsEarnedInCurrentLevel / pointsNeededForNext) * 100))\n      : 100;\n\n    return {\n      nextLevel,\n      requiredPoint,\n      levelUpPercent,\n      isMaxLevel: false,\n    };\n  }\n\n}","/**\n * 문자열 변환 관련 유틸리티 함수들\n */\n\n/**\n * snake_case 문자열을 camelCase로 변환\n * @param str snake_case 문자열\n * @returns camelCase 문자열\n */\nexport const toCamelCase = (str: string): string => {\n  return str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\n};\n\n/**\n * camelCase 문자열을 snake_case로 변환\n * @param str camelCase 문자열\n * @returns snake_case 문자열\n */\nexport const toSnakeCase = (str: string): string => {\n  return str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n};\n\n/**\n * 객체의 키를 snake_case에서 camelCase로 변환\n * @param obj snake_case 키를 가진 객체\n * @returns camelCase 키를 가진 객체\n */\nexport const keysToCamelCase = <T extends Record<string, any>>(\n  obj: T\n): { [K in keyof T as K extends string ? CamelCase<K> : K]: T[K] } => {\n  if (obj === null || obj === undefined) {\n    return obj as any;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(item => \n      typeof item === 'object' && item !== null ? keysToCamelCase(item) : item\n    ) as any;\n  }\n\n  if (typeof obj === 'object') {\n    const result: Record<string, any> = {};\n    \n    for (const [key, value] of Object.entries(obj)) {\n      const camelKey = toCamelCase(key);\n      \n      if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n        result[camelKey] = keysToCamelCase(value);\n      } else if (Array.isArray(value)) {\n        result[camelKey] = value.map(item =>\n          typeof item === 'object' && item !== null ? keysToCamelCase(item) : item\n        );\n      } else {\n        result[camelKey] = value;\n      }\n    }\n    \n    return result as any;\n  }\n\n  return obj as any;\n};\n\n/**\n * 객체의 키를 camelCase에서 snake_case로 변환\n * @param obj camelCase 키를 가진 객체\n * @returns snake_case 키를 가진 객체\n */\nexport const keysToSnakeCase = <T extends Record<string, any>>(\n  obj: T\n): { [K in keyof T as K extends string ? SnakeCase<K> : K]: T[K] } => {\n  if (obj === null || obj === undefined) {\n    return obj as any;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(item => \n      typeof item === 'object' && item !== null ? keysToSnakeCase(item) : item\n    ) as any;\n  }\n\n  if (typeof obj === 'object') {\n    const result: Record<string, any> = {};\n    \n    for (const [key, value] of Object.entries(obj)) {\n      const snakeKey = toSnakeCase(key);\n      \n      if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n        result[snakeKey] = keysToSnakeCase(value);\n      } else if (Array.isArray(value)) {\n        result[snakeKey] = value.map(item =>\n          typeof item === 'object' && item !== null ? keysToSnakeCase(item) : item\n        );\n      } else {\n        result[snakeKey] = value;\n      }\n    }\n    \n    return result as any;\n  }\n\n  return obj as any;\n};\n\n// 타입 헬퍼들\ntype CamelCase<S extends string> = S extends `${infer P1}_${infer P2}${infer P3}`\n  ? `${P1}${Uppercase<P2>}${CamelCase<P3>}`\n  : S;\n\ntype SnakeCase<S extends string> = S extends `${infer C}${infer T}`\n  ? C extends Uppercase<C>\n    ? `_${Lowercase<C>}${SnakeCase<T>}`\n    : `${C}${SnakeCase<T>}`\n  : S; ","/**\n * URL 파라미터를 안전하게 추가/수정하는 유틸리티 함수\n */\nexport const addUrlParams = (\n  baseUrl: string, \n  params: Record<string, string>\n): string => {\n  try {\n    // 절대 URL인지 상대 URL인지 확인\n    const url = baseUrl.startsWith('http') \n      ? new URL(baseUrl)\n      : new URL(baseUrl, window.location.origin);\n    \n    const searchParams = new URLSearchParams(url.search);\n    \n    // 새로운 파라미터들을 추가/업데이트\n    Object.entries(params).forEach(([key, value]) => {\n      searchParams.set(key, value);\n    });\n    \n    // pathname과 새로운 search params를 결합\n    return `${url.pathname}?${searchParams.toString()}`;\n  } catch (error) {\n    console.error('URL 파싱 오류:', error);\n    throw new Error('유효하지 않은 URL입니다.');\n  }\n};\n\n/**\n * sessionStorage에서 이전 페이지 URL을 가져와서 파라미터를 추가한 후 반환\n */\nexport const getPreviousUrlWithParams = (\n  storageKey: string,\n  params: Record<string, string>,\n  fallbackUrl: string = '/'\n): string => {\n  const previousUrl = sessionStorage.getItem(storageKey);\n  \n  if (!previousUrl) {\n    return fallbackUrl;\n  }\n  \n  try {\n    return addUrlParams(previousUrl, params);\n  } catch (error) {\n    console.error('이전 URL 처리 오류:', error);\n    return fallbackUrl;\n  }\n}; ","/**\n * JWT 토큰 디코딩 및 사용자 정보 추출 유틸리티\n */\n\nexport interface JWTUserPayload {\n  aal: string;\n  amr: Array<{ method: string; timestamp: number }>;\n  app_metadata: {\n    provider: string;\n    providers: string[];\n    [key: string]: any; // 추가 앱 메타데이터\n  };\n  aud: string;\n  created_at: string;\n  email: string;\n  exp: number;\n  iat: number;\n  is_anonymous: boolean;\n  phone: string;\n  role: string;\n  session_id: string;\n  sub: string; // auth_user_id (UUID)\n  user_metadata: {\n    email?: string;\n    email_verified?: boolean;\n    login_id?: string;\n    nickname?: string;\n    phone_verified?: boolean;\n    role?: string;\n    sub?: string;\n    [key: string]: any; // 추가 사용자 메타데이터\n  };\n  \n  // 애플리케이션별 확장 필드 (실제로 JWT에 없을 수 있음)\n  user_id?: number; // users 테이블의 실제 ID\n  permission_type?: string;\n  is_admin?: boolean;\n}\n\n/**\n * Base64 URL 디코딩\n */\nfunction base64UrlDecode(str: string): string {\n  // Base64 URL을 일반 Base64로 변환\n  str = str.replace(/-/g, '+').replace(/_/g, '/');\n  \n  // 패딩 추가\n  while (str.length % 4) {\n    str += '=';\n  }\n  \n  // Base64 디코딩 후 UTF-8 문자열로 변환\n  return decodeURIComponent(\n    atob(str)\n      .split('')\n      .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n      .join('')\n  );\n}\n\n/**\n * JWT 토큰에서 페이로드 추출\n * @param token JWT 액세스 토큰\n * @returns 디코딩된 사용자 정보 또는 null\n */\nexport function decodeJWTPayload(token: string): JWTUserPayload | null {\n  try {\n    // JWT는 header.payload.signature 형태\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n      console.error('Invalid JWT format');\n      return null;\n    }\n    \n    // 페이로드 부분 디코딩\n    const payload = base64UrlDecode(parts[1]);\n    return JSON.parse(payload) as JWTUserPayload;\n  } catch (error) {\n    console.error('JWT 디코딩 실패:', error);\n    return null;\n  }\n}\n\n/**\n * 현재 세션에서 사용자 정보 추출\n * @returns 사용자 정보 또는 null\n */\nexport async function getCurrentUserFromToken(): Promise<JWTUserPayload | null> {\n  try {\n    const { clientSupabase } = await import(\"@config/Supabase/client\");\n    const { data: { session } } = await clientSupabase.auth.getSession();\n    \n    if (!session?.access_token) {\n      return null;\n    }\n    \n    return decodeJWTPayload(session.access_token);\n  } catch (error) {\n    console.error('토큰에서 사용자 정보 추출 실패:', error);\n    return null;\n  }\n}\n\n/**\n * JWT 토큰이 만료되었는지 확인\n * @param payload JWT 페이로드\n * @returns 만료 여부\n */\nexport function isTokenExpired(payload: JWTUserPayload): boolean {\n  const now = Math.floor(Date.now() / 1000);\n  return payload.exp <= now;\n}\n\n/**\n * 토큰 만료까지 남은 시간 (초)\n * @param payload JWT 페이로드\n * @returns 남은 시간 (초), 음수면 이미 만료\n */\nexport function getTokenTimeToExpiry(payload: JWTUserPayload): number {\n  const now = Math.floor(Date.now() / 1000);\n  return payload.exp - now;\n}\n\n/**\n * 만료된 토큰을 쿠키에서 자동으로 제거\n * @param cookieName 쿠키 이름 (기본값: 'sb-access-token')\n */\nexport function removeExpiredTokenFromCookie(cookieName: string = 'sb-access-token'): void {\n  if (typeof window === 'undefined') return;\n\n  try {\n    // 쿠키에서 토큰 읽기\n    const cookieString = document.cookie\n      .split('; ')\n      .find(row => row.startsWith(`${cookieName}=`))\n      ?.split('=')[1];\n\n    if (!cookieString) return;\n\n    // 토큰 파싱 및 검증\n    const decodedCookie = decodeURIComponent(cookieString);\n    const sessionData = JSON.parse(decodedCookie);\n    const accessToken = sessionData?.access_token;\n\n    if (!accessToken) return;\n\n    // JWT 토큰 디코딩 및 만료 확인\n    const payload = decodeJWTPayload(accessToken);\n    if (payload && isTokenExpired(payload)) {\n      console.log('🗑️ 만료된 토큰 감지, 쿠키에서 제거 중...');\n      \n      // 만료된 토큰 제거\n      document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=Lax`;\n      \n      // 추가 토큰 관련 쿠키들도 정리\n      const relatedCookies = ['supabase-auth-token', 'sb-auth-token', 'auth-token'];\n      relatedCookies.forEach(name => {\n        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=Lax`;\n      });\n\n      console.log('✅ 만료된 토큰 쿠키 제거 완료');\n    }\n  } catch (error) {\n    console.error('❌ 만료된 토큰 제거 중 오류:', error);\n  }\n}\n\n/**\n * 토큰 유효성을 검증하고 만료된 경우 자동으로 정리\n * @returns 유효한 토큰이 있으면 페이로드 반환, 없으면 null\n */\nexport async function validateAndCleanToken(): Promise<JWTUserPayload | null> {\n  try {\n    const { clientSupabase } = await import(\"@config/Supabase/client\");\n    const { data: { session } } = await clientSupabase.auth.getSession();\n    \n    if (!session?.access_token) {\n      // 세션이 없는 경우 쿠키 정리\n      removeExpiredTokenFromCookie();\n      return null;\n    }\n    \n    const payload = decodeJWTPayload(session.access_token);\n    if (!payload) {\n      // 토큰 디코딩 실패 시 쿠키 정리\n      removeExpiredTokenFromCookie();\n      return null;\n    }\n    \n    if (isTokenExpired(payload)) {\n      // 만료된 토큰 정리\n      removeExpiredTokenFromCookie();\n      \n      // Supabase 세션도 정리\n      await clientSupabase.auth.signOut();\n      return null;\n    }\n    \n    return payload;\n  } catch (error) {\n    console.error('토큰 검증 및 정리 실패:', error);\n    removeExpiredTokenFromCookie(); // 오류 시에도 쿠키 정리\n    return null;\n  }\n}\n\n/**\n * 토큰 만료 5분 전 여부 확인 (갱신 시점 판단용)\n * @param payload JWT 페이로드\n * @returns true면 갱신이 필요한 시점\n */\nexport function shouldRefreshToken(payload: JWTUserPayload): boolean {\n  const timeToExpiry = getTokenTimeToExpiry(payload);\n  return timeToExpiry <= 300; // 5분 이하 남으면 갱신\n} ","// 업로드 에러 타입 정의\nexport enum UploadErrorType {\n  NETWORK_ERROR = 'network_error',\n  FILE_TOO_LARGE = 'file_too_large',\n  UNSUPPORTED_FORMAT = 'unsupported_format',\n  PERMISSION_DENIED = 'permission_denied',\n  SERVER_ERROR = 'server_error',\n  UPLOAD_TIMEOUT = 'upload_timeout',\n  QUOTA_EXCEEDED = 'quota_exceeded',\n  INVALID_POST = 'invalid_post',\n}\n\n// 에러 메시지 매핑\nconst ERROR_MESSAGES: Record<UploadErrorType, string> = {\n  [UploadErrorType.FILE_TOO_LARGE]: '파일 크기가 너무 큽니다. 이미지는 10MB, 비디오는 100MB 이하로 업로드해주세요.',\n  [UploadErrorType.UNSUPPORTED_FORMAT]: '지원하지 않는 파일 형식입니다. JPG, PNG, GIF, WebP, MP4, AVI, MOV 파일만 업로드 가능합니다.',\n  [UploadErrorType.PERMISSION_DENIED]: '파일 업로드 권한이 없습니다. 로그인 상태를 확인해주세요.',\n  [UploadErrorType.NETWORK_ERROR]: '네트워크 오류가 발생했습니다. 인터넷 연결을 확인하고 다시 시도해주세요.',\n  [UploadErrorType.SERVER_ERROR]: '서버 오류가 발생했습니다. 잠시 후 다시 시도해주세요.',\n  [UploadErrorType.UPLOAD_TIMEOUT]: '업로드 시간이 초과되었습니다. 파일 크기를 확인하거나 다시 시도해주세요.',\n  [UploadErrorType.QUOTA_EXCEEDED]: '업로드 할당량을 초과했습니다. 불필요한 파일을 삭제하거나 관리자에게 문의하세요.',\n  [UploadErrorType.INVALID_POST]: '유효하지 않은 게시글입니다. 게시글을 다시 생성해주세요.',\n};\n\n// 에러 분석 및 사용자 친화적 메시지 생성\nexport function getUploadErrorMessage(error: any): string {\n  const errorMessage = error?.message?.toLowerCase() || '';\n  const errorResponse = error?.response?.data;\n\n  // API 에러 응답에서 구체적인 에러 코드 확인\n  if (errorResponse?.error?.code) {\n    const errorCode = errorResponse.error.code as UploadErrorType;\n    if (ERROR_MESSAGES[errorCode]) {\n      return ERROR_MESSAGES[errorCode];\n    }\n  }\n\n  // 에러 메시지 키워드 기반 분석\n  if (errorMessage.includes('file too large') || errorMessage.includes('413')) {\n    return ERROR_MESSAGES[UploadErrorType.FILE_TOO_LARGE];\n  }\n\n  if (errorMessage.includes('unsupported') || \n      errorMessage.includes('invalid format') || \n      errorMessage.includes('415')) {\n    return ERROR_MESSAGES[UploadErrorType.UNSUPPORTED_FORMAT];\n  }\n\n  if (errorMessage.includes('permission') || \n      errorMessage.includes('unauthorized') || \n      errorMessage.includes('401') || \n      errorMessage.includes('403')) {\n    return ERROR_MESSAGES[UploadErrorType.PERMISSION_DENIED];\n  }\n\n  if (errorMessage.includes('network') || \n      errorMessage.includes('fetch') || \n      errorMessage.includes('timeout') ||\n      error?.code === 'NETWORK_ERROR') {\n    return ERROR_MESSAGES[UploadErrorType.NETWORK_ERROR];\n  }\n\n  if (errorMessage.includes('quota') || \n      errorMessage.includes('storage full') ||\n      errorMessage.includes('429')) {\n    return ERROR_MESSAGES[UploadErrorType.QUOTA_EXCEEDED];\n  }\n\n  if (errorMessage.includes('post not found') || \n      errorMessage.includes('invalid post') ||\n      errorMessage.includes('404')) {\n    return ERROR_MESSAGES[UploadErrorType.INVALID_POST];\n  }\n\n  // 기본 에러 메시지\n  return '파일 업로드 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.';\n}\n\n// 재시도 가능한 에러인지 확인\nexport function isRetryableError(error: any): boolean {\n  const errorMessage = error?.message?.toLowerCase() || '';\n  const errorCode = error?.response?.data?.error?.code;\n\n  // 재시도 불가능한 에러들\n  const nonRetryableErrors = [\n    UploadErrorType.FILE_TOO_LARGE,\n    UploadErrorType.UNSUPPORTED_FORMAT,\n    UploadErrorType.PERMISSION_DENIED,\n    UploadErrorType.QUOTA_EXCEEDED,\n    UploadErrorType.INVALID_POST,\n  ];\n\n  if (nonRetryableErrors.includes(errorCode)) {\n    return false;\n  }\n\n  // 키워드 기반 재시도 불가능 에러 체크\n  if (errorMessage.includes('file too large') ||\n      errorMessage.includes('unsupported') ||\n      errorMessage.includes('invalid format') ||\n      errorMessage.includes('permission') ||\n      errorMessage.includes('unauthorized') ||\n      errorMessage.includes('quota')) {\n    return false;\n  }\n\n  // 그 외는 모두 재시도 가능\n  return true;\n}\n\n// 업로드 에러 로깅\nexport function logUploadError(\n  error: any, \n  context: {\n    postId?: number;\n    fileName?: string;\n    fileSize?: number;\n    fileType?: string;\n    action?: 'upload' | 'retry' | 'progress' | 'cancel';\n  }\n): void {\n  const errorInfo = {\n    message: error?.message || 'Unknown error',\n    stack: error?.stack,\n    response: error?.response?.data,\n    context,\n    timestamp: new Date().toISOString(),\n    userAgent: navigator.userAgent,\n  };\n\n  // 개발 환경에서는 콘솔에 상세 출력\n  if (process.env.NODE_ENV === 'development') {\n    console.group('🚨 Upload Error');\n    console.error('Error Details:', errorInfo);\n    console.groupEnd();\n  }\n\n  // 프로덕션에서는 모니터링 서비스로 전송\n  if (process.env.NODE_ENV === 'production') {\n    // 예: Sentry, LogRocket 등으로 전송\n    // window.Sentry?.captureException(error, { extra: errorInfo });\n    console.error('Upload Error:', errorInfo);\n  }\n}\n\n// 업로드 진행 상황 추적을 위한 인터페이스\nexport interface UploadMetrics {\n  startTime: number;\n  totalFiles: number;\n  completedFiles: number;\n  failedFiles: number;\n  totalBytes: number;\n  uploadedBytes: number;\n  retryCount: number;\n}\n\n// 업로드 메트릭스 계산\nexport function calculateUploadMetrics(files: any[], startTime: number): UploadMetrics {\n  const totalFiles = files.length;\n  const completedFiles = files.filter(f => f.status === 'completed').length;\n  const failedFiles = files.filter(f => f.status === 'failed').length;\n  const totalBytes = files.reduce((sum, f) => sum + (f.fileSize || 0), 0);\n  const uploadedBytes = files.reduce((sum, f) => {\n    return sum + (f.fileSize || 0) * ((f.progress || 0) / 100);\n  }, 0);\n\n  return {\n    startTime,\n    totalFiles,\n    completedFiles,\n    failedFiles,\n    totalBytes,\n    uploadedBytes,\n    retryCount: 0, // 별도 관리 필요\n  };\n}\n\n// 예상 완료 시간 계산\nexport function estimateCompletionTime(metrics: UploadMetrics): number | null {\n  const elapsed = Date.now() - metrics.startTime;\n  const progress = metrics.uploadedBytes / metrics.totalBytes;\n  \n  if (progress === 0) return null;\n  \n  const totalEstimated = elapsed / progress;\n  const remaining = totalEstimated - elapsed;\n  \n  return Math.max(0, remaining);\n}\n\n// 업로드 속도 계산 (MB/s)\nexport function calculateUploadSpeed(metrics: UploadMetrics): number {\n  const elapsed = (Date.now() - metrics.startTime) / 1000; // 초 단위\n  const uploadedMB = metrics.uploadedBytes / (1024 * 1024);\n  \n  return elapsed > 0 ? uploadedMB / elapsed : 0;\n}","/**\n * @semicolon/community-core initialization\n * \n * This module provides package initialization functionality\n * to configure the core package for optimal usage.\n */\n\nexport interface CommunityPackageConfig {\n  /** API base URL for backend services */\n  apiUrl?: string;\n  \n  /** Supabase configuration */\n  supabase?: {\n    url?: string;\n    anonKey?: string;\n  };\n  \n  /** Default locale for formatting */\n  locale?: string;\n  \n  /** Enable development mode features */\n  development?: boolean;\n}\n\nlet globalConfig: CommunityPackageConfig = {};\n\n/**\n * Initialize @semicolon/community-core package with configuration\n * \n * @example\n * ```typescript\n * import { initializeCommunityCore } from '@semicolon/community-core';\n * \n * initializeCommunityCore({\n *   apiUrl: process.env.REACT_APP_API_URL,\n *   supabase: {\n *     url: process.env.REACT_APP_SUPABASE_URL,\n *     anonKey: process.env.REACT_APP_SUPABASE_ANON_KEY,\n *   },\n *   locale: 'ko-KR',\n *   development: process.env.NODE_ENV === 'development'\n * });\n * ```\n */\nexport function initializeCommunityCore(config: CommunityPackageConfig): void {\n  globalConfig = { ...globalConfig, ...config };\n  \n  if (config.development) {\n    console.log('🚀 @semicolon/community-core initialized with config:', globalConfig);\n  }\n}\n\n/**\n * Get current package configuration\n */\nexport function getPackageConfig(): Readonly<CommunityPackageConfig> {\n  return Object.freeze({ ...globalConfig });\n}\n\n/**\n * Get specific config value with fallback\n */\nexport function getConfigValue<T>(key: keyof CommunityPackageConfig, fallback?: T): T {\n  return (globalConfig[key] as T) ?? fallback;\n}","/**\n * Button Component\n * \n * A flexible, accessible button component with multiple variants and sizes.\n * Designed for community platform usage with built-in loading states and accessibility.\n */\n\nimport React, { forwardRef } from 'react';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Button visual style variant */\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger';\n  \n  /** Button size */\n  size?: 'sm' | 'md' | 'lg';\n  \n  /** Show loading state */\n  loading?: boolean;\n  \n  /** Make button full width */\n  fullWidth?: boolean;\n  \n  /** Icon to show before text */\n  startIcon?: React.ReactNode;\n  \n  /** Icon to show after text */\n  endIcon?: React.ReactNode;\n}\n\n/**\n * Button component with multiple variants and accessibility features\n * \n * @example\n * ```tsx\n * import { Button } from '@semicolon/community-core';\n * \n * // Basic usage\n * <Button>Click me</Button>\n * \n * // With variant and size\n * <Button variant=\"primary\" size=\"lg\">Submit</Button>\n * \n * // Loading state\n * <Button loading onClick={handleSubmit}>Save Changes</Button>\n * \n * // With icons\n * <Button startIcon={<PlusIcon />}>Add New</Button>\n * ```\n */\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(({\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  fullWidth = false,\n  startIcon,\n  endIcon,\n  disabled,\n  className = '',\n  children,\n  ...props\n}, ref) => {\n  // Base classes\n  const baseClasses = [\n    'inline-flex items-center justify-center font-medium transition-colors',\n    'focus:outline-none focus:ring-2 focus:ring-offset-2',\n    'disabled:opacity-50 disabled:cursor-not-allowed'\n  ];\n\n  // Variant classes\n  const variantClasses = {\n    primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',\n    secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',\n    outline: 'border-2 border-gray-300 text-gray-700 hover:bg-gray-50 focus:ring-gray-500',\n    ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-gray-500',\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500'\n  };\n\n  // Size classes\n  const sizeClasses = {\n    sm: 'px-3 py-1.5 text-sm rounded-md',\n    md: 'px-4 py-2 text-base rounded-lg', \n    lg: 'px-6 py-3 text-lg rounded-lg'\n  };\n\n  // Width classes\n  const widthClass = fullWidth ? 'w-full' : '';\n\n  // Combine all classes\n  const buttonClasses = [\n    ...baseClasses,\n    variantClasses[variant],\n    sizeClasses[size],\n    widthClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  // Loading spinner component\n  const LoadingSpinner = () => (\n    <svg \n      className=\"animate-spin -ml-1 mr-2 h-4 w-4\" \n      fill=\"none\" \n      viewBox=\"0 0 24 24\"\n      aria-hidden=\"true\"\n    >\n      <circle \n        className=\"opacity-25\" \n        cx=\"12\" \n        cy=\"12\" \n        r=\"10\" \n        stroke=\"currentColor\" \n        strokeWidth=\"4\"\n      />\n      <path \n        className=\"opacity-75\" \n        fill=\"currentColor\" \n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n  );\n\n  return (\n    <button\n      ref={ref}\n      className={buttonClasses}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && <LoadingSpinner />}\n      {!loading && startIcon && (\n        <span className=\"mr-2\">{startIcon}</span>\n      )}\n      {children}\n      {!loading && endIcon && (\n        <span className=\"ml-2\">{endIcon}</span>\n      )}\n    </button>\n  );\n});\n\nButton.displayName = 'Button';\n\nexport default Button;","/**\n * Badge Component\n * \n * A versatile badge component for displaying status, labels, and notifications.\n * Perfect for user levels, post tags, notification counts, etc.\n */\n\nimport React from 'react';\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {\n  /** Badge visual variant */\n  variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'info';\n  \n  /** Badge size */\n  size?: 'sm' | 'md' | 'lg';\n  \n  /** Make badge rounded/pill-shaped */\n  rounded?: boolean;\n  \n  /** Show a dot indicator */\n  dot?: boolean;\n}\n\n/**\n * Badge component for status indicators and labels\n * \n * @example\n * ```tsx\n * import { Badge } from '@semicolon/community-core';\n * \n * // Basic usage\n * <Badge>New</Badge>\n * \n * // User level badge\n * <Badge variant=\"primary\" rounded>Level 5</Badge>\n * \n * // Notification count\n * <Badge variant=\"danger\" size=\"sm\">3</Badge>\n * \n * // Status indicator with dot\n * <Badge variant=\"success\" dot>Online</Badge>\n * ```\n */\nexport const Badge: React.FC<BadgeProps> = ({\n  variant = 'primary',\n  size = 'md',\n  rounded = false,\n  dot = false,\n  className = '',\n  children,\n  ...props\n}) => {\n  // Base classes\n  const baseClasses = [\n    'inline-flex items-center font-medium',\n    rounded ? 'rounded-full' : 'rounded-md'\n  ];\n\n  // Variant classes\n  const variantClasses = {\n    primary: 'bg-blue-100 text-blue-800',\n    secondary: 'bg-gray-100 text-gray-800',\n    success: 'bg-green-100 text-green-800',\n    warning: 'bg-yellow-100 text-yellow-800',\n    danger: 'bg-red-100 text-red-800',\n    info: 'bg-indigo-100 text-indigo-800'\n  };\n\n  // Size classes\n  const sizeClasses = {\n    sm: 'px-2 py-1 text-xs',\n    md: 'px-2.5 py-1.5 text-sm',\n    lg: 'px-3 py-2 text-base'\n  };\n\n  // Dot classes\n  const dotClasses = {\n    primary: 'bg-blue-400',\n    secondary: 'bg-gray-400',\n    success: 'bg-green-400',\n    warning: 'bg-yellow-400',\n    danger: 'bg-red-400',\n    info: 'bg-indigo-400'\n  };\n\n  // Combine all classes\n  const badgeClasses = [\n    ...baseClasses,\n    variantClasses[variant],\n    sizeClasses[size],\n    className\n  ].filter(Boolean).join(' ');\n\n  // Dot component\n  const DotIndicator = () => (\n    <span \n      className={`w-2 h-2 rounded-full mr-1.5 ${dotClasses[variant]}`}\n      aria-hidden=\"true\"\n    />\n  );\n\n  return (\n    <span className={badgeClasses} {...props}>\n      {dot && <DotIndicator />}\n      {children}\n    </span>\n  );\n};\n\nexport default Badge;","/**\n * Avatar Component\n * \n * User avatar component with fallback support and multiple sizes.\n * Integrates with community platform user system and image optimization.\n */\n\nimport React, { useState } from 'react';\nimport { normalizeImageSrc } from '../../../utils/imageUtil';\n\nexport interface AvatarProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  /** User's display name for fallback text */\n  name?: string;\n  \n  /** Avatar size */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n  \n  /** Show online status indicator */\n  status?: 'online' | 'offline' | 'away' | 'busy';\n  \n  /** Make avatar square instead of circular */\n  square?: boolean;\n}\n\n/**\n * Avatar component for user profile pictures\n * \n * @example\n * ```tsx\n * import { Avatar } from '@semicolon/community-core';\n * \n * // Basic usage\n * <Avatar src=\"/avatar.jpg\" name=\"김철수\" />\n * \n * // With status indicator\n * <Avatar \n *   src=\"/avatar.jpg\" \n *   name=\"김철수\" \n *   status=\"online\"\n *   size=\"lg\" \n * />\n * \n * // Square avatar for brand logos\n * <Avatar src=\"/logo.jpg\" name=\"Company\" square />\n * ```\n */\nexport const Avatar: React.FC<AvatarProps> = ({\n  src,\n  name = '',\n  size = 'md',\n  status,\n  square = false,\n  className = '',\n  alt,\n  ...props\n}) => {\n  const [imageError, setImageError] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  // Size classes\n  const sizeClasses = {\n    xs: 'w-6 h-6 text-xs',\n    sm: 'w-8 h-8 text-sm',\n    md: 'w-10 h-10 text-base',\n    lg: 'w-12 h-12 text-lg',\n    xl: 'w-14 h-14 text-xl',\n    '2xl': 'w-16 h-16 text-2xl'\n  };\n\n  // Status indicator classes\n  const statusClasses = {\n    online: 'bg-green-400',\n    offline: 'bg-gray-400',\n    away: 'bg-yellow-400',\n    busy: 'bg-red-400'\n  };\n\n  // Status indicator size based on avatar size\n  const statusSizeClasses = {\n    xs: 'w-1.5 h-1.5',\n    sm: 'w-2 h-2',\n    md: 'w-2.5 h-2.5',\n    lg: 'w-3 h-3',\n    xl: 'w-3.5 h-3.5',\n    '2xl': 'w-4 h-4'\n  };\n\n  // Base classes\n  const baseClasses = [\n    'inline-block relative',\n    square ? 'rounded-lg' : 'rounded-full',\n    'bg-gray-100 overflow-hidden',\n    'ring-2 ring-white',\n    sizeClasses[size]\n  ];\n\n  // Generate fallback initials from name\n  const getInitials = (name: string): string => {\n    return name\n      .split(' ')\n      .map(part => part.charAt(0).toUpperCase())\n      .join('')\n      .slice(0, 2);\n  };\n\n  // Handle image load error\n  const handleImageError = () => {\n    setImageError(true);\n  };\n\n  const handleImageLoad = () => {\n    setImageLoaded(true);\n  };\n\n  // Optimize image src\n  const optimizedSrc = src ? normalizeImageSrc(src) : undefined;\n\n  // Combine classes\n  const avatarClasses = [...baseClasses, className].filter(Boolean).join(' ');\n\n  return (\n    <div className={avatarClasses}>\n      {optimizedSrc && !imageError ? (\n        <img\n          src={optimizedSrc}\n          alt={alt || name}\n          className=\"w-full h-full object-cover\"\n          onError={handleImageError}\n          onLoad={handleImageLoad}\n          {...props}\n        />\n      ) : (\n        // Fallback with initials\n        <div className=\"w-full h-full flex items-center justify-center bg-gray-300 text-gray-600 font-medium\">\n          {getInitials(name) || '?'}\n        </div>\n      )}\n      \n      {/* Status indicator */}\n      {status && (\n        <span \n          className={`absolute bottom-0 right-0 block ${statusSizeClasses[size]} ${statusClasses[status]} rounded-full ring-2 ring-white`}\n          title={`Status: ${status}`}\n          aria-label={`User status: ${status}`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Avatar;","import React, { forwardRef } from 'react';\n\nexport interface InputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  /** Input 라벨 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 입력 타입 */\n  type?: 'text' | 'email' | 'password' | 'number' | 'tel' | 'url' | 'search';\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 전체 너비 사용 여부 */\n  fullWidth?: boolean;\n  /** 입력 앞쪽 아이콘 또는 텍스트 */\n  startAdornment?: React.ReactNode;\n  /** 입력 뒤쪽 아이콘 또는 텍스트 */\n  endAdornment?: React.ReactNode;\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(({\n  label,\n  error,\n  helper,\n  type = 'text',\n  size = 'md',\n  fullWidth = false,\n  startAdornment,\n  endAdornment,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  disabled = false,\n  required = false,\n  id,\n  ...props\n}, ref) => {\n  const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'h-8 px-2 text-sm',\n    md: 'h-10 px-3 text-sm',\n    lg: 'h-12 px-4 text-base'\n  };\n\n  // 기본 input 클래스\n  const baseInputClasses = `\n    w-full\n    font-sans\n    text-gray-900\n    bg-white\n    border\n    rounded-lg\n    transition-all\n    duration-200\n    focus:outline-none\n    focus:ring-2\n    focus:ring-blue-500/20\n    disabled:opacity-50\n    disabled:cursor-not-allowed\n    disabled:bg-gray-50\n  `;\n\n  // 상태별 테두리 색상\n  const borderClasses = error\n    ? 'border-red-500 focus:border-red-500'\n    : 'border-gray-300 focus:border-blue-500 hover:border-gray-400';\n\n  // input 클래스 조합\n  const inputClasses = `\n    ${baseInputClasses}\n    ${sizeClasses[size]}\n    ${borderClasses}\n    ${startAdornment ? 'pl-8' : ''}\n    ${endAdornment ? 'pr-8' : ''}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div className={`${fullWidth ? 'w-full' : 'w-auto'} ${containerClassName}`}>\n      {/* 라벨 */}\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={`\n            block\n            text-sm\n            font-medium\n            text-gray-700\n            mb-2\n            font-sans\n            ${required ? \"after:content-['*'] after:text-red-500 after:ml-1\" : ''}\n            ${disabled ? 'opacity-50' : ''}\n            ${labelClassName}\n          `.trim().replace(/\\s+/g, ' ')}\n        >\n          {label}\n        </label>\n      )}\n\n      {/* Input 컨테이너 */}\n      <div className=\"relative\">\n        {/* 시작 아이콘/텍스트 */}\n        {startAdornment && (\n          <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500 pointer-events-none\">\n            {startAdornment}\n          </div>\n        )}\n\n        {/* Input 요소 */}\n        <input\n          ref={ref}\n          id={inputId}\n          type={type}\n          disabled={disabled}\n          required={required}\n          className={inputClasses}\n          {...props}\n        />\n\n        {/* 끝 아이콘/텍스트 */}\n        {endAdornment && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500\">\n            {endAdornment}\n          </div>\n        )}\n      </div>\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nInput.displayName = 'Input';\n\nexport { Input };","// Select Component for @semicolon/community-core\n\nimport React, { forwardRef, useEffect, useRef, useState, useMemo } from 'react';\n\nexport interface SelectOption<T = any> {\n  id: string | number;\n  label: string;\n  value: T;\n  icon?: string;\n  description?: string;\n  disabled?: boolean;\n}\n\nexport interface SelectProps<T = any> {\n  /** 옵션 목록 */\n  options: SelectOption<T>[];\n  /** 선택된 값 */\n  value?: T;\n  /** 값 변경 시 호출되는 함수 */\n  onChange: (option: SelectOption<T>) => void;\n  /** 플레이스홀더 텍스트 */\n  placeholder?: string;\n  /** 비활성화 여부 */\n  disabled?: boolean;\n  /** 라벨 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 전체 너비 사용 여부 */\n  fullWidth?: boolean;\n  /** 다중 선택 지원 여부 */\n  multiple?: boolean;\n  /** 검색 기능 활성화 여부 */\n  searchable?: boolean;\n  /** 검색 플레이스홀더 */\n  searchPlaceholder?: string;\n  /** 아이콘 표시 여부 */\n  showIcon?: boolean;\n  /** 설명 표시 여부 */\n  showDescription?: boolean;\n  /** 드롭다운 최대 높이 */\n  maxHeight?: string;\n  /** 빈 결과 메시지 */\n  noOptionsText?: string;\n  /** 컨테이너 클래스 이름 */\n  className?: string;\n  /** 드롭다운 클래스 이름 */\n  dropdownClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n}\n\nconst Select = forwardRef<HTMLDivElement, SelectProps>(({\n  options,\n  value,\n  onChange,\n  placeholder = '선택해주세요',\n  disabled = false,\n  label,\n  error,\n  helper,\n  size = 'md',\n  fullWidth = true,\n  multiple = false,\n  searchable = false,\n  searchPlaceholder = '검색...',\n  showIcon = false,\n  showDescription = false,\n  maxHeight = '240px',\n  noOptionsText = '옵션이 없습니다',\n  className = '',\n  dropdownClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n}, ref) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const selectId = `select-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 선택된 옵션 찾기\n  const selectedOption = useMemo(() => {\n    if (multiple) return null;\n    return options.find(option => option.value === value);\n  }, [options, value, multiple]);\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'h-8 px-2 text-sm',\n    md: 'h-10 px-3 text-sm',\n    lg: 'h-12 px-4 text-base'\n  };\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n        setSearchTerm('');\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const handleOptionClick = (option: SelectOption) => {\n    if (option.disabled) return;\n    onChange(option);\n    if (!multiple) {\n      setIsOpen(false);\n      setSearchTerm('');\n    }\n  };\n\n  const toggleDropdown = () => {\n    if (!disabled) {\n      setIsOpen(!isOpen);\n      setSearchTerm('');\n    }\n  };\n\n  // 기본 select 클래스\n  const baseSelectClasses = `\n    w-full\n    font-sans\n    bg-white\n    border\n    rounded-lg\n    transition-all\n    duration-200\n    focus:outline-none\n    focus:ring-2\n    focus:ring-blue-500/20\n    disabled:opacity-50\n    disabled:cursor-not-allowed\n    disabled:bg-gray-50\n    flex\n    items-center\n    justify-between\n    cursor-pointer\n  `;\n\n  // 상태별 테두리 색상\n  const borderClasses = error\n    ? 'border-red-500 focus:border-red-500'\n    : 'border-gray-300 focus:border-blue-500 hover:border-gray-400';\n\n  // select 클래스 조합\n  const selectClasses = `\n    ${baseSelectClasses}\n    ${sizeClasses[size]}\n    ${borderClasses}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div\n      ref={ref}\n      className={`${fullWidth ? 'w-full' : 'w-auto'} relative`}\n    >\n      {/* 라벨 */}\n      {label && (\n        <label\n          htmlFor={selectId}\n          className={`\n            block\n            text-sm\n            font-medium\n            text-gray-700\n            mb-2\n            font-sans\n            ${disabled ? 'opacity-50' : ''}\n            ${labelClassName}\n          `.trim().replace(/\\s+/g, ' ')}\n        >\n          {label}\n        </label>\n      )}\n\n      {/* Select 버튼 */}\n      <div\n        ref={dropdownRef}\n        id={selectId}\n        role=\"button\"\n        tabIndex={disabled ? -1 : 0}\n        aria-expanded={isOpen}\n        aria-haspopup=\"listbox\"\n        onClick={toggleDropdown}\n        className={selectClasses}\n      >\n        <div className=\"flex items-center gap-2 flex-1 overflow-hidden\">\n          {selectedOption ? (\n            <span className=\"truncate text-gray-900\">{selectedOption.label}</span>\n          ) : (\n            <span className=\"text-gray-500 truncate\">{placeholder}</span>\n          )}\n        </div>\n\n        {/* 화살표 아이콘 */}\n        <svg\n          className={`w-4 h-4 text-gray-400 transition-transform duration-200 flex-shrink-0 ${\n            isOpen ? 'rotate-180' : ''\n          }`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </div>\n\n      {/* 드롭다운 */}\n      {isOpen && (\n        <div\n          className={`absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-lg shadow-lg z-50 overflow-hidden ${dropdownClassName}`}\n        >\n          {/* 옵션 목록 */}\n          <div\n            className=\"overflow-y-auto\"\n            style={{ maxHeight }}\n            role=\"listbox\"\n          >\n            {options.length === 0 ? (\n              <div className=\"px-3 py-8 text-center text-gray-500 text-sm\">\n                {noOptionsText}\n              </div>\n            ) : (\n              options.map(option => {\n                const isSelected = option.value === value;\n\n                return (\n                  <button\n                    key={option.id}\n                    type=\"button\"\n                    role=\"option\"\n                    aria-selected={isSelected}\n                    onClick={() => handleOptionClick(option)}\n                    disabled={option.disabled}\n                    className={`\n                      w-full px-3 py-2 text-left flex items-center gap-2 text-sm cursor-pointer\n                      transition-colors duration-150\n                      ${option.disabled\n                        ? 'opacity-50 cursor-not-allowed bg-gray-50'\n                        : isSelected\n                          ? 'bg-blue-50 text-blue-600'\n                          : 'hover:bg-gray-100 text-gray-900'\n                      }\n                      border-b border-gray-100 last:border-b-0\n                    `.trim().replace(/\\s+/g, ' ')}\n                  >\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"truncate\">{option.label}</div>\n                      {showDescription && option.description && (\n                        <div className=\"text-xs text-gray-500 mt-1 truncate\">\n                          {option.description}\n                        </div>\n                      )}\n                    </div>\n                  </button>\n                );\n              })\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nSelect.displayName = 'Select';\n\nexport { Select };","import React, { forwardRef } from 'react';\n\nexport interface CheckboxProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size' | 'onChange'> {\n  /** 체크 상태 */\n  checked?: boolean;\n  /** 값 변경 시 호출되는 함수 */\n  onChange?: (checked: boolean, event: React.ChangeEvent<HTMLInputElement>) => void;\n  /** 라벨 텍스트 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 중간 상태 (indeterminate) */\n  indeterminate?: boolean;\n  /** 라벨 위치 */\n  labelPosition?: 'left' | 'right';\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n}\n\nconst Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(({\n  checked = false,\n  onChange,\n  label,\n  error,\n  helper,\n  size = 'md',\n  indeterminate = false,\n  labelPosition = 'right',\n  disabled = false,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  id,\n  ...props\n}, ref) => {\n  const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(event.target.checked, event);\n  };\n\n  // 기본 checkbox 클래스\n  const baseCheckboxClasses = `\n    text-blue-600\n    bg-white\n    border-2\n    rounded\n    transition-all\n    duration-200\n    focus:outline-none\n    focus:ring-2\n    focus:ring-blue-500/20\n    focus:border-blue-500\n    disabled:opacity-50\n    disabled:cursor-not-allowed\n    disabled:bg-gray-50\n  `;\n\n  // 상태별 테두리 색상\n  const borderClasses = error\n    ? 'border-red-500'\n    : 'border-gray-300 hover:border-blue-500';\n\n  // checkbox 클래스 조합\n  const checkboxClasses = `\n    ${baseCheckboxClasses}\n    ${sizeClasses[size]}\n    ${borderClasses}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  const checkboxElement = (\n    <input\n      ref={ref}\n      id={checkboxId}\n      type=\"checkbox\"\n      checked={checked}\n      onChange={handleChange}\n      disabled={disabled}\n      className={checkboxClasses}\n      {...props}\n    />\n  );\n\n  const labelElement = label && (\n    <label\n      htmlFor={checkboxId}\n      className={`\n        text-gray-700\n        text-xs sm:text-sm\n        font-normal\n        font-sans\n        select-none\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n        ${labelClassName}\n      `.trim().replace(/\\s+/g, ' ')}\n    >\n      {label}\n    </label>\n  );\n\n  return (\n    <div className={containerClassName}>\n      {/* Checkbox와 라벨 */}\n      <div className={`flex items-center gap-2 ${labelPosition === 'left' ? 'flex-row-reverse' : ''}`}>\n        {checkboxElement}\n        {labelElement}\n      </div>\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nCheckbox.displayName = 'Checkbox';\n\nexport { Checkbox };","import React, { forwardRef } from 'react';\n\nexport interface RadioProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size' | 'onChange'> {\n  /** 체크 상태 */\n  checked?: boolean;\n  /** 값 변경 시 호출되는 함수 */\n  onChange?: (value: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n  /** Radio 그룹명 */\n  name: string;\n  /** Radio 값 */\n  value: string;\n  /** 라벨 텍스트 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 라벨 위치 */\n  labelPosition?: 'left' | 'right';\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n  /** 자식 요소 (라벨 대신 사용) */\n  children?: React.ReactNode;\n}\n\nconst Radio = forwardRef<HTMLInputElement, RadioProps>(({\n  checked = false,\n  onChange,\n  name,\n  value,\n  label,\n  error,\n  helper,\n  size = 'md',\n  labelPosition = 'right',\n  disabled = false,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  children,\n  id,\n  ...props\n}, ref) => {\n  const radioId = id || `radio-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  const dotSizeClasses = {\n    sm: 'w-1.5 h-1.5',\n    md: 'w-2.5 h-2.5',\n    lg: 'w-3 h-3'\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(event.target.value, event);\n  };\n\n  // 라벨 텍스트 결정\n  const labelText = children || label;\n\n  const radioElement = (\n    <div className=\"relative inline-flex items-center\">\n      <input\n        ref={ref}\n        id={radioId}\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={handleChange}\n        disabled={disabled}\n        className=\"sr-only\"\n        {...props}\n      />\n      <span\n        className={`\n          flex-shrink-0 rounded-full flex items-center justify-center\n          border-2 transition-all duration-200\n          ${sizeClasses[size]}\n          ${checked\n            ? error\n              ? 'border-red-500 bg-red-500'\n              : 'border-blue-600 bg-blue-600'\n            : error\n              ? 'border-red-500'\n              : 'border-gray-300 hover:border-blue-600'\n          }\n          ${disabled\n            ? 'opacity-50 cursor-not-allowed'\n            : 'cursor-pointer'\n          }\n          ${className}\n        `.trim().replace(/\\s+/g, ' ')}\n      >\n        <span\n          className={`\n            rounded-full transition-all duration-200 bg-white\n            ${dotSizeClasses[size]}\n            ${checked ? 'opacity-100 scale-100' : 'opacity-0 scale-50'}\n          `.trim().replace(/\\s+/g, ' ')}\n        />\n      </span>\n    </div>\n  );\n\n  const labelElement = labelText && (\n    <label\n      htmlFor={radioId}\n      className={`\n        text-gray-700\n        text-xs sm:text-sm\n        font-normal\n        font-sans\n        whitespace-nowrap\n        select-none\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n        ${labelClassName}\n      `.trim().replace(/\\s+/g, ' ')}\n    >\n      {labelText}\n    </label>\n  );\n\n  return (\n    <div className={containerClassName}>\n      {/* Radio와 라벨 */}\n      <div className={`inline-flex items-center gap-2 ${labelPosition === 'left' ? 'flex-row-reverse' : ''}`}>\n        {radioElement}\n        {labelElement}\n      </div>\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nRadio.displayName = 'Radio';\n\nexport { Radio };","import React, { forwardRef } from 'react';\n\nexport interface SwitchProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size' | 'onChange'> {\n  /** 활성화 상태 */\n  checked?: boolean;\n  /** 값 변경 시 호출되는 함수 */\n  onChange?: (checked: boolean, event: React.ChangeEvent<HTMLInputElement>) => void;\n  /** 라벨 텍스트 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 라벨 위치 */\n  labelPosition?: 'left' | 'right';\n  /** 활성화 시 표시할 텍스트 */\n  onText?: string;\n  /** 비활성화 시 표시할 텍스트 */\n  offText?: string;\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n}\n\nconst Switch = forwardRef<HTMLInputElement, SwitchProps>(({\n  checked = false,\n  onChange,\n  label,\n  error,\n  helper,\n  size = 'md',\n  labelPosition = 'right',\n  onText,\n  offText,\n  disabled = false,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  id,\n  ...props\n}, ref) => {\n  const switchId = id || `switch-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: {\n      track: 'w-8 h-4',\n      thumb: 'w-3 h-3',\n      translate: 'translate-x-4',\n      text: 'text-xs px-1'\n    },\n    md: {\n      track: 'w-10 h-5',\n      thumb: 'w-4 h-4',\n      translate: 'translate-x-5',\n      text: 'text-xs px-1.5'\n    },\n    lg: {\n      track: 'w-12 h-6',\n      thumb: 'w-5 h-5',\n      translate: 'translate-x-6',\n      text: 'text-sm px-2'\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(event.target.checked, event);\n  };\n\n  const currentSize = sizeClasses[size];\n\n  // track 클래스\n  const trackClasses = `\n    relative inline-flex items-center\n    ${currentSize.track}\n    rounded-full\n    transition-colors duration-200 ease-in-out\n    focus-within:outline-none\n    focus-within:ring-2\n    focus-within:ring-blue-500/20\n    ${checked\n      ? error\n        ? 'bg-red-500'\n        : 'bg-blue-600'\n      : error\n        ? 'bg-red-200'\n        : 'bg-gray-300'\n    }\n    ${disabled\n      ? 'opacity-50 cursor-not-allowed'\n      : 'cursor-pointer'\n    }\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  // thumb 클래스\n  const thumbClasses = `\n    inline-block\n    ${currentSize.thumb}\n    bg-white\n    rounded-full\n    shadow\n    transform\n    transition-transform duration-200 ease-in-out\n    ${checked ? currentSize.translate : 'translate-x-0.5'}\n  `.trim().replace(/\\s+/g, ' ');\n\n  const switchElement = (\n    <div className=\"relative inline-flex\">\n      <input\n        ref={ref}\n        id={switchId}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={handleChange}\n        disabled={disabled}\n        className=\"sr-only\"\n        {...props}\n      />\n      <label\n        htmlFor={switchId}\n        className={trackClasses}\n      >\n        {/* 상태 텍스트 (선택사항) */}\n        {(onText || offText) && (\n          <span className={`\n            absolute inset-0 flex items-center justify-center\n            font-sans font-medium text-white\n            ${currentSize.text}\n            pointer-events-none\n          `}>\n            {checked ? onText : offText}\n          </span>\n        )}\n\n        {/* Thumb */}\n        <span className={thumbClasses} />\n      </label>\n    </div>\n  );\n\n  const labelElement = label && (\n    <label\n      htmlFor={switchId}\n      className={`\n        text-gray-700\n        text-xs sm:text-sm\n        font-normal\n        font-sans\n        select-none\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n        ${labelClassName}\n      `.trim().replace(/\\s+/g, ' ')}\n    >\n      {label}\n    </label>\n  );\n\n  return (\n    <div className={containerClassName}>\n      {/* Switch와 라벨 */}\n      <div className={`inline-flex items-center gap-3 ${labelPosition === 'left' ? 'flex-row-reverse' : ''}`}>\n        {switchElement}\n        {labelElement}\n      </div>\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nSwitch.displayName = 'Switch';\n\nexport { Switch };","import React, { forwardRef, useState, useCallback } from 'react';\n\nexport interface TextAreaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  /** TextArea 라벨 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 전체 너비 사용 여부 */\n  fullWidth?: boolean;\n  /** 자동 리사이징 활성화 */\n  autoResize?: boolean;\n  /** 최소 높이 */\n  minHeight?: number;\n  /** 최대 높이 */\n  maxHeight?: number;\n  /** 글자 수 제한 */\n  maxLength?: number;\n  /** 글자 수 표시 여부 */\n  showCount?: boolean;\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n  /** 글자 수 카운터 클래스 이름 */\n  countClassName?: string;\n}\n\nconst TextArea = forwardRef<HTMLTextAreaElement, TextAreaProps>(({\n  label,\n  error,\n  helper,\n  size = 'md',\n  fullWidth = false,\n  autoResize = false,\n  minHeight = 80,\n  maxHeight = 300,\n  maxLength,\n  showCount = false,\n  disabled = false,\n  required = false,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  countClassName = '',\n  value,\n  onChange,\n  id,\n  ...props\n}, ref) => {\n  const textareaId = id || `textarea-${Math.random().toString(36).substr(2, 9)}`;\n  const [textareaHeight, setTextareaHeight] = useState<number>(minHeight);\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'px-2 py-1.5 text-sm',\n    md: 'px-3 py-2 text-sm',\n    lg: 'px-4 py-3 text-base'\n  };\n\n  // 자동 리사이징 핸들러\n  const handleAutoResize = useCallback((element: HTMLTextAreaElement) => {\n    if (!autoResize) return;\n\n    // 높이 초기화\n    element.style.height = 'auto';\n\n    // 스크롤 높이 계산\n    const scrollHeight = element.scrollHeight;\n    const newHeight = Math.min(Math.max(scrollHeight, minHeight), maxHeight);\n\n    setTextareaHeight(newHeight);\n    element.style.height = `${newHeight}px`;\n  }, [autoResize, minHeight, maxHeight]);\n\n  // 값 변경 핸들러\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    // 최대 길이 체크\n    if (maxLength && event.target.value.length > maxLength) {\n      return;\n    }\n\n    onChange?.(event);\n\n    // 자동 리사이징\n    if (autoResize) {\n      handleAutoResize(event.target);\n    }\n  };\n\n  // 기본 textarea 클래스\n  const baseTextareaClasses = `\n    w-full\n    font-sans\n    text-gray-900\n    bg-white\n    border\n    rounded-lg\n    transition-all\n    duration-200\n    focus:outline-none\n    focus:ring-2\n    focus:ring-blue-500/20\n    disabled:opacity-50\n    disabled:cursor-not-allowed\n    disabled:bg-gray-50\n    resize-none\n  `;\n\n  // 상태별 테두리 색상\n  const borderClasses = error\n    ? 'border-red-500 focus:border-red-500'\n    : 'border-gray-300 focus:border-blue-500 hover:border-gray-400';\n\n  // textarea 클래스 조합\n  const textareaClasses = `\n    ${baseTextareaClasses}\n    ${sizeClasses[size]}\n    ${borderClasses}\n    ${autoResize ? 'resize-none' : 'resize-y'}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  // 현재 글자 수 계산\n  const currentLength = typeof value === 'string' ? value.length : 0;\n  const isOverLimit = maxLength ? currentLength > maxLength : false;\n\n  return (\n    <div className={`${fullWidth ? 'w-full' : 'w-auto'} ${containerClassName}`}>\n      {/* 라벨 및 글자 수 표시 */}\n      <div className=\"flex justify-between items-center mb-2\">\n        {/* 라벨 */}\n        {label && (\n          <label\n            htmlFor={textareaId}\n            className={`\n              block\n              text-sm\n              font-medium\n              text-gray-700\n              font-sans\n              ${required ? \"after:content-['*'] after:text-red-500 after:ml-1\" : ''}\n              ${disabled ? 'opacity-50' : ''}\n              ${labelClassName}\n            `.trim().replace(/\\s+/g, ' ')}\n          >\n            {label}\n          </label>\n        )}\n\n        {/* 글자 수 표시 */}\n        {showCount && (maxLength || currentLength > 0) && (\n          <span className={`\n            text-sm\n            font-sans\n            ${isOverLimit\n              ? 'text-red-500'\n              : currentLength / (maxLength || 100) > 0.8\n                ? 'text-orange-500'\n                : 'text-gray-500'\n            }\n            ${countClassName}\n          `.trim().replace(/\\s+/g, ' ')}>\n            {currentLength}{maxLength && `/${maxLength}`}\n          </span>\n        )}\n      </div>\n\n      {/* TextArea 요소 */}\n      <textarea\n        ref={ref}\n        id={textareaId}\n        value={value}\n        onChange={handleChange}\n        disabled={disabled}\n        required={required}\n        maxLength={maxLength}\n        className={textareaClasses}\n        style={autoResize ? { height: textareaHeight, minHeight, maxHeight } : { minHeight }}\n        {...props}\n      />\n\n      {/* 하단 메시지 영역 */}\n      <div className=\"flex justify-between items-start mt-2\">\n        {/* 에러 메시지 또는 도움말 텍스트 */}\n        <div className=\"flex-1\">\n          {error && (\n            <p className={`\n              text-sm\n              text-red-500\n              font-sans\n              ${errorClassName}\n            `.trim().replace(/\\s+/g, ' ')}>\n              {error}\n            </p>\n          )}\n\n          {helper && !error && (\n            <p className={`\n              text-sm\n              text-gray-500\n              font-sans\n              ${helperClassName}\n            `.trim().replace(/\\s+/g, ' ')}>\n              {helper}\n            </p>\n          )}\n        </div>\n\n        {/* 하단 글자 수 표시 (상단에 없을 때만) */}\n        {showCount && !label && (maxLength || currentLength > 0) && (\n          <span className={`\n            text-sm\n            font-sans\n            ml-2\n            flex-shrink-0\n            ${isOverLimit\n              ? 'text-red-500'\n              : currentLength / (maxLength || 100) > 0.8\n                ? 'text-orange-500'\n                : 'text-gray-500'\n            }\n            ${countClassName}\n          `.trim().replace(/\\s+/g, ' ')}>\n            {currentLength}{maxLength && `/${maxLength}`}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n});\n\nTextArea.displayName = 'TextArea';\n\nexport { TextArea };","// @semicolon/community-core v1.0.0\n// Community platform core components and utilities\n\n// =============================================================================\n// MAIN EXPORTS - Most commonly used items\n// =============================================================================\n\n// Essential Utilities (most frequently used)\nexport { formatNumberWithComma } from './utils/numberUtil';\nexport { formatDate, timeAgo } from './utils/dateUtil';\nexport { isAdmin } from './utils/authUtil';\n\n// Core Types (essential for TypeScript users)\nexport type { User } from './types/User';\nexport type { CommonResponse } from './types/common';\n\n// =============================================================================\n// CATEGORY EXPORTS - Organized by domain\n// =============================================================================\n\n// All utilities\nexport * as Utils from './utils';\n\n// All types (commented out due to build complexity)\n// export * as Types from './types';\n\n// Constants will be added in Phase 2\n// export * as Constants from './constants';\n\n// =============================================================================\n// INITIALIZATION\n// =============================================================================\n\n// Package initialization function\nexport { initializeCommunityCore } from './config/init';\n\n// Configuration utilities\nexport { getPackageConfig } from './config/init';\n\n// =============================================================================\n// COMPONENT EXPORTS - New design system components\n// =============================================================================\n\n// Essential components (Phase 1)\nexport { Button, Badge, Avatar } from './components/atoms';\nexport type { ButtonProps, BadgeProps, AvatarProps } from './components/atoms';\n\n// Phase 2.1 Form Components\nexport { \n  Input, \n  Select, \n  Checkbox, \n  Radio, \n  Switch, \n  TextArea \n} from './components/atoms';\nexport type { \n  InputProps, \n  SelectProps, \n  SelectOption,\n  CheckboxProps, \n  RadioProps, \n  SwitchProps, \n  TextAreaProps \n} from './components/atoms';\n\n// =============================================================================\n// DEVELOPMENT EXPORTS - Available but not prominently featured\n// =============================================================================\n\n// Full category exports (for advanced usage) - commented out to reduce build warnings\n// export * as Components from './components';  // All components (legacy + new)\n// export * as Hooks from './hooks';         // Phase 2\n// export * as Services from './services';   // Phase 2\n\n// =============================================================================\n// VERSION INFO\n// =============================================================================\nexport const VERSION = '1.0.2';\nexport const PACKAGE_NAME = '@team-semicolon/community-core';","import { AuthChangeEvent, createClient } from \"@supabase/supabase-js\";\n\nfunction createClientSupabase() {\n  const client = createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      auth: {\n        persistSession: true,\n        autoRefreshToken: true,\n        detectSessionInUrl: true,\n        storageKey: \"sb-access-token\",\n        storage: {\n          getItem: (key: string) => {\n            if (typeof window === \"undefined\") return null;\n\n            try {\n              const value = document.cookie\n                .split(\"; \")\n                .find((row) => row.startsWith(`${key}=`))\n                ?.split(\"=\")[1];\n\n              if (!value) {\n                return null;\n              }\n\n              const decodedValue = decodeURIComponent(value);\n              \n              // 토큰 유효성 검증 (만료된 토큰 자동 정리)\n              try {\n                const sessionData = JSON.parse(decodedValue);\n                if (sessionData?.access_token) {\n                  // 동적 import로 순환 참조 방지\n                  import('@util/jwtUtil').then(({ decodeJWTPayload, isTokenExpired, removeExpiredTokenFromCookie }) => {\n                    const payload = decodeJWTPayload(sessionData.access_token);\n                    if (payload && isTokenExpired(payload)) {\n                      console.log('🗑️ 클라이언트 Storage: 만료된 토큰 감지, 정리 중...');\n                      removeExpiredTokenFromCookie(key);\n                    }\n                  });\n                }\n              } catch (parseError) {\n                // JSON 파싱 실패 시 로그만 남기고 원본 반환\n                console.warn('클라이언트 Storage: 세션 데이터 파싱 실패:', parseError);\n              }\n              \n              return decodedValue;\n            } catch (error) {\n              console.error(\"❌ 클라이언트: 쿠키 읽기 실패:\", error);\n              return null;\n            }\n          },\n\n          setItem: (key: string, value: string) => {\n            if (typeof window === \"undefined\") return;\n\n            try {\n              // 세션 데이터 유효성 검사\n              const sessionData = JSON.parse(value);\n              if (!sessionData.access_token) {\n                // console.warn(\"⚠️  클라이언트: access_token이 없는 세션 데이터\");\n                return;\n              }\n\n              const encodedValue = encodeURIComponent(value);\n              \n              // 쿠키 설정 (30일 유효)\n              const expires = new Date();\n              expires.setDate(expires.getDate() + 30);\n              \n              document.cookie = `${key}=${encodedValue}; expires=${expires.toUTCString()}; path=/; SameSite=Lax; Secure`;\n              \n              // console.log(\"💾 클라이언트: 세션 정보 쿠키 저장 성공\");\n              // console.log(\"🔑 클라이언트: access_token 존재:\", !!sessionData.access_token);\n              // console.log(\"👤 클라이언트: 사용자 정보:\", sessionData.user?.email);\n            } catch (error) {\n              // console.error(\"❌ 클라이언트: 쿠키 저장 실패:\", error);\n            }\n          },\n\n          removeItem: (key: string) => {\n            if (typeof window === \"undefined\") return;\n\n            try {\n              document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n              // console.log(\"🗑️  클라이언트: 쿠키 삭제 완료\");\n            } catch (error) {\n              // console.error(\"❌ 클라이언트: 쿠키 삭제 실패:\", error);\n            }\n          },\n        },\n      },\n    }\n  );\n\n  // 세션 상태 변경 감지 및 처리\n  if (typeof window !== \"undefined\") {\n    let isHandlingSignOut = false;  // 로그아웃 처리 중복 방지 플래그\n\n    client.auth.onAuthStateChange((event: AuthChangeEvent, session) => {\n      // console.log(\"🔄 클라이언트: 인증 상태 변경:\", event);\n      \n      switch (event) {\n        case \"SIGNED_OUT\":\n          if (!isHandlingSignOut) {\n            isHandlingSignOut = true;\n            // 쿠키 및 로컬 상태 정리\n            client.auth.getSession().then(() => {\n              isHandlingSignOut = false;\n            });\n          }\n          break;\n          \n        case \"TOKEN_REFRESHED\":\n          if (session) {\n            // console.log(\"🔄 클라이언트: 토큰 갱신됨\");\n            // 필요한 경우 추가 처리\n          }\n          break;\n          \n        case \"USER_UPDATED\":\n          if (!session) {\n            // 세션이 없는 경우에만 로그아웃 처리\n            if (!isHandlingSignOut) {\n              isHandlingSignOut = true;\n              client.auth.signOut().then(() => {\n                isHandlingSignOut = false;\n              });\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  return client;\n}\n\nexport const clientSupabase = createClientSupabase();\n"],"names":["formatNumberWithComma","num","parts","toString","split","replace","length","join","str","parseFloat","formatDate","dateString","isSimple","date","Date","isNaN","getTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeAgo","now","Math","floor","DateUtil","toChar","input","format","map","yyyy","MM","dd","HH","mm","ss","Object","entries","reduce","result","key","value","isJWTPayload","user","sub","user_metadata","isUserObject","id","nickname","permissionType","checkIsAdmin","level","isAdmin","hasLevelPermission","requiredLevel","keys","console","warn","is_admin","isLoggedIn","IMAGE_SIZE","sm","md","lg","xl","xxl","transformSupabaseImageUrl","url","size","quality","includes","transformedUrl","width","validQuality","max","min","separator","error","generateImageSrcSet","sizes","forEach","supabaseImageLoader","src","normalizeImageSrc","resourceUrl","process","env","NEXT_PUBLIC_STORAGE_URL","startsWith","relativePath","optimizeImageSrc","normalizedSrc","undefined","isGifImage","lowerSrc","toLowerCase","endsWith","unoptimized","LevelUtil","calculateUserLevel","currentPoints","levelTable","sortedLevels","sort","a","b","userLevel","required_points","getLevelProgress","currentLevel","currentLevelPoints","nextLevel","nextLevelPoints","progressPercentage","pointsToNext","this","currentLevelInfo","find","nextLevelInfo","pointsNeededForNext","pointsEarnedInCurrentLevel","round","getNextLevelInfo","requiredPoint","levelUpPercentage","isMaxLevel","levelUpPercent","toCamelCase","_","letter","toUpperCase","toSnakeCase","keysToCamelCase","obj","Array","isArray","item","camelKey","keysToSnakeCase","snakeKey","addUrlParams","baseUrl","params","URL","window","location","origin","searchParams","URLSearchParams","search","set","pathname","Error","getPreviousUrlWithParams","storageKey","fallbackUrl","previousUrl","sessionStorage","getItem","decodeJWTPayload","token","payload","decodeURIComponent","atob","c","charCodeAt","slice","base64UrlDecode","JSON","parse","async","getCurrentUserFromToken","clientSupabase","Promise","resolve","then","client","data","session","auth","getSession","access_token","isTokenExpired","exp","getTokenTimeToExpiry","removeExpiredTokenFromCookie","cookieName","cookieString","document","cookie","row","decodedCookie","sessionData","accessToken","log","name","validateAndCleanToken","signOut","shouldRefreshToken","UploadErrorType","ERROR_MESSAGES","FILE_TOO_LARGE","UNSUPPORTED_FORMAT","PERMISSION_DENIED","NETWORK_ERROR","SERVER_ERROR","UPLOAD_TIMEOUT","QUOTA_EXCEEDED","INVALID_POST","files","startTime","totalFiles","completedFiles","filter","f","status","failedFiles","totalBytes","sum","fileSize","uploadedBytes","progress","retryCount","metrics","elapsed","uploadedMB","remaining","errorMessage","message","errorResponse","response","code","errorCode","context","errorInfo","stack","timestamp","toISOString","userAgent","navigator","NODE_ENV","group","groupEnd","globalConfig","initializeCommunityCore","config","development","getPackageConfig","freeze","Button","forwardRef","variant","loading","fullWidth","startIcon","endIcon","disabled","className","children","props","ref","buttonClasses","primary","secondary","outline","ghost","danger","Boolean","_jsxs","_jsx","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","displayName","Badge","rounded","dot","dotClasses","success","warning","info","badgeClasses","Avatar","square","alt","imageError","setImageError","useState","imageLoaded","setImageLoaded","baseClasses","xs","optimizedSrc","avatarClasses","onError","onLoad","part","charAt","getInitials","online","offline","away","busy","title","Input","label","helper","type","startAdornment","endAdornment","containerClassName","labelClassName","errorClassName","helperClassName","required","inputId","random","substr","inputClasses","trim","htmlFor","Select","options","onChange","placeholder","multiple","searchable","searchPlaceholder","showIcon","showDescription","maxHeight","noOptionsText","dropdownClassName","isOpen","setIsOpen","searchTerm","setSearchTerm","dropdownRef","useRef","selectId","selectedOption","useMemo","option","useEffect","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","selectClasses","role","tabIndex","onClick","strokeLinecap","strokeLinejoin","style","isSelected","handleOptionClick","description","Checkbox","checked","indeterminate","labelPosition","checkboxId","checkboxClasses","checkboxElement","labelElement","Radio","radioId","labelText","radioElement","Switch","onText","offText","switchId","currentSize","track","thumb","translate","text","trackClasses","thumbClasses","switchElement","TextArea","autoResize","minHeight","maxLength","showCount","countClassName","textareaId","textareaHeight","setTextareaHeight","handleAutoResize","useCallback","element","height","scrollHeight","newHeight","textareaClasses","currentLength","isOverLimit","VERSION","PACKAGE_NAME","createClient","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","persistSession","autoRefreshToken","detectSessionInUrl","storage","decodedValue","import","parseError","setItem","encodedValue","encodeURIComponent","expires","setDate","toUTCString","removeItem","isHandlingSignOut","onAuthStateChange","createClientSupabase"],"mappings":"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"}