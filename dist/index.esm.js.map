{"version":3,"file":"index.esm.js","sources":["../lib/utils/numberUtil.ts","../lib/utils/dateUtil.ts","../lib/utils/authUtil.ts","../lib/utils/imageUtil.ts","../lib/utils/levelUtil.ts","../lib/utils/stringUtil.ts","../lib/utils/urlUtil.ts","../lib/utils/jwtUtil.ts","../lib/utils/uploadErrorHandler.ts","../lib/config/init.ts","../lib/components/atoms/Button/index.tsx","../lib/components/atoms/Badge/index.tsx","../lib/components/atoms/Avatar/index.tsx","../lib/components/atoms/Input.tsx","../lib/components/atoms/Select.tsx","../lib/components/atoms/Checkbox.tsx","../lib/components/atoms/Radio.tsx","../lib/components/atoms/Switch.tsx","../lib/components/atoms/TextArea.tsx","../lib/components/atoms/Skeleton/index.tsx","../lib/config/axios.ts","../lib/types/common/index.ts","../lib/services/baseService.ts","../lib/services/userService.ts","../lib/services/postService.ts","../lib/services/boardService.ts","../lib/services/authService.ts","../lib/services/permissionService.ts","../node_modules/use-sync-external-store/with-selector.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.development.js","../node_modules/react-redux/dist/react-redux.mjs","../lib/hooks/common/useDeviceType.ts","../lib/hooks/common/useGlobalLoader.ts","../lib/hooks/common/usePermission.ts","../lib/hooks/common/useRouterWithLoader.ts","../lib/hooks/common/index.ts","../lib/hooks/User/useAuth.ts","../lib/hooks/common/useAuthGuard.ts","../lib/hooks/queries/useUserQuery.ts","../lib/hooks/queries/usePostQuery.ts","../lib/hooks/queries/useBoardQuery.ts","../lib/hooks/queries/useCommentQuery.ts","../lib/index.ts","../lib/config/Supabase/client.ts"],"sourcesContent":["/**\n * 숫자를 1000 단위로 콤마(,)를 찍어서 문자열로 변환\n * @param num 변환할 숫자 또는 숫자 형태의 문자열\n * @returns 1000단위로 콤마가 포함된 문자열\n */\nexport const formatNumberWithComma = (num: number | string): string => {\n\n    if (num === null || num === undefined || num === '') {\n        return '';\n    }\n    \n    // 숫자나 문자열을 문자열로 변환\n    const numStr: string = typeof num === 'number' ? num.toString() : num;\n    \n    // 소수점이 있는 경우 처리\n    const parts = numStr.split('.');\n    \n    // 정수 부분에 3자리마다 콤마 추가\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    \n    // 소수점이 있으면 다시 합치고, 없으면 정수 부분만 반환\n    return parts.length > 1 ? parts.join('.') : parts[0];\n};\n\n/**\n * 문자열에서 콤마를 제거하고 숫자로 변환\n * @param str 콤마가 포함된 문자열\n * @returns 콤마가 제거된 숫자\n */\nexport const removeCommaFromString = (str: string): number => {\n  if (!str) return 0;\n  return parseFloat(str.replace(/,/g, ''));\n};\n","// formatDate와 timeAgo 함수를 서버와 클라이언트 모두에서 사용할 수 있게 설정\n\nexport function formatDate(dateString: string, isSimple = false): string {\n  if (!dateString) return \"\";\n\n  const date = new Date(dateString);\n\n  // 날짜가 유효하지 않은 경우\n  if (isNaN(date.getTime())) {\n    return dateString;\n  }\n\n  // 날짜를 YYYY.MM.DD. HH:MM:SS 형식으로 포맷팅\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n  const seconds = String(date.getSeconds()).padStart(2, \"0\");\n\n  return isSimple\n    ? `${year}.${month}.${day}`\n    : `${year}.${month}.${day}. ${hours}:${minutes}:${seconds}`;\n}\n\nexport function timeAgo(dateString: string, isSimple: boolean = true): string {\n  if (!dateString) return \"\";\n\n  const date = new Date(dateString);\n\n  // 날짜가 유효하지 않은 경우\n  if (isNaN(date.getTime())) {\n    return dateString;\n  }\n\n  // 서버 측 렌더링 시 포맷된 날짜 반환\n  // if (typeof window === \"undefined\") {\n  //   // 서버에서는 정적인 포맷으로 반환\n  //   return formatDate(dateString);\n  // }\n\n  const now = new Date();\n  const seconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n\n  // 1분 미만\n  if (seconds < 60) {\n    return \"방금 전\";\n  }\n\n  // 1시간 미만\n  const minutes = Math.floor(seconds / 60);\n  if (minutes < 60) {\n    return `${minutes}분 전`;\n  }\n\n  // 24시간 미만\n  const hours = Math.floor(minutes / 60);\n  if (hours < 24) {\n    return `${hours}시간 전`;\n  }\n\n  return isSimple ? DateUtil.toChar(dateString, \"MM.dd\") : DateUtil.toChar(dateString, \"yyyy.MM.dd. HH:mm:ss\");\n\n  // // 30일 미만\n  // const days = Math.floor(hours / 24);\n  // if (days < 30) {\n  //   return `${days}일 전`;\n  // }\n\n  // // 12개월 미만\n  // const months = Math.floor(days / 30);\n  // if (months < 12) {\n  //   return `${months}개월 전`;\n  // }\n\n  // // 1년 이상\n  // const years = Math.floor(months / 12);\n  // return `${years}년 전`;\n}\n\nexport const DateUtil = {\n  toChar(\n    input: string | Date,\n    format: string = \"YYYY.MM.DD. HH:MM:SS\"\n  ): string {\n    const date = typeof input === \"string\" ? new Date(input) : input;\n\n    if (!date || isNaN(date.getTime())) return \"\";\n\n    const map: Record<string, string> = {\n      yyyy: String(date.getFullYear()),\n      MM: String(date.getMonth() + 1).padStart(2, \"0\"),\n      dd: String(date.getDate()).padStart(2, \"0\"),\n      HH: String(date.getHours()).padStart(2, \"0\"),\n      mm: String(date.getMinutes()).padStart(2, \"0\"),\n      ss: String(date.getSeconds()).padStart(2, \"0\"),\n    };\n\n    return Object.entries(map).reduce(\n      (result, [key, value]) => result.replace(key, value),\n      format\n    );\n  },\n};\n","/**\n * 통합 인증 및 권한 관리 유틸리티\n */\n\nimport type { User, permissionType } from '../types/User';\n\ninterface JWTUserPayload {\n  sub: string;\n  user_metadata: any;\n  is_admin?: boolean;\n  level?: number;\n}\n\nexport interface AuthUser {\n  id: string;\n  nickname: string;\n  level: number;\n  permissionType: permissionType;\n  is_admin?: boolean;\n}\n\n/**\n * 사용자가 JWT 페이로드인지 확인하는 타입 가드\n */\nexport function isJWTPayload(user: any): user is JWTUserPayload {\n  return user && typeof user.sub === 'string' && user.user_metadata;\n}\n\n/**\n * 사용자가 User 객체인지 확인하는 타입 가드 (Redux store에서 온 데이터)\n */\nexport function isUserObject(user: any): user is User {\n  return (\n    user &&\n    typeof user.id === 'string' &&\n    user.nickname &&\n    user.permissionType\n  );\n}\n\nexport const isValidUser = (user: User | null): user is User => {\n  return (\n    !!user &&\n    typeof user.id === 'string' &&\n    !!user.nickname &&\n    !!user.permissionType\n  );\n};\n\n// checkIsAdmin 함수의 타입을 User와 완벽하게 호환되도록 수정\nexport const checkIsAdmin = (user: {\n  level: number;\n  permissionType: permissionType;\n}): boolean => {\n  return (\n    user.level >= 99 ||\n    user.permissionType === 'admin' ||\n    user.permissionType === 'super_admin'\n  );\n};\n\nexport const isAdmin = (user: AuthUser | User | null): boolean => {\n  if (!user) return false;\n  return checkIsAdmin(user);\n};\n\nexport const isSuperAdmin = (user: AuthUser | User | null): boolean => {\n  if (!user) return false;\n  return checkIsAdmin(user);\n};\n\nexport const isAdminOrSuperAdmin = (user: AuthUser | User | null): boolean => {\n  if (!user) return false;\n  return checkIsAdmin(user);\n};\n\n/**\n * 특정 레벨 이상 권한 체크\n * @param user 사용자 정보 (Redux store의 User 객체 권장)\n * @param requiredLevel 필요한 최소 레벨\n * @returns 권한 여부\n */\nexport const hasLevelPermission = (\n  user?: AuthUser | null,\n  requiredLevel: number = 0\n): boolean => {\n  // 사용자가 없거나 빈 객체인 경우\n  if (!user || (typeof user === 'object' && Object.keys(user).length === 0)) {\n    return requiredLevel === 0;\n  }\n\n  // 관리자는 모든 권한 보유\n  if (isAdmin(user)) return true;\n\n  // Redux store의 User 객체인 경우 (권장)\n  if (isUserObject(user)) {\n    return user.level >= requiredLevel;\n  }\n\n  // JWT 페이로드인 경우 (레거시 호환성 - 권장하지 않음)\n  if (isJWTPayload(user)) {\n    console.warn(\n      '[DEPRECATED] JWT 기반 권한 체크는 권장하지 않습니다. useAppSelector(selectUserInfo)를 사용하여 Redux store의 사용자 정보를 활용하세요.'\n    );\n    // 레거시 호환성을 위한 기본 권한 매핑\n    const userLevel = user.is_admin ? 99 : (user.level || 1);\n    return userLevel >= requiredLevel;\n  }\n\n  // 기존 UserPermission 형태인 경우 (레거시)\n  return user.level >= requiredLevel;\n};\n\n/**\n * 게시판 권한 체크 (읽기, 쓰기, 댓글 등)\n * @param user 사용자 정보 (Redux store의 User 객체 권장)\n * @param requiredLevel 필요한 권한 레벨\n * @param isLoggedIn 로그인 여부\n * @returns 권한 여부\n */\nexport const hasBoardPermission = (\n  user?: AuthUser | null,\n  requiredLevel: number | 'free' = 0,\n  isLoggedIn: boolean = false\n): boolean => {\n  // 'free' 또는 0인 경우 모든 사용자 접근 가능\n  if (requiredLevel === 'free' || requiredLevel === 0) {\n    return true;\n  }\n\n  // 로그인이 필요한 경우\n  if (!isLoggedIn || !user) {\n    return false;\n  }\n\n  return hasLevelPermission(user, requiredLevel);\n};\n\n/**\n * 사용자 권한 레벨 반환\n * @param user 사용자 정보 (Redux store의 User 객체 권장)\n * @returns 사용자 레벨\n */\nexport const getUserLevel = (user?: AuthUser | null): number => {\n  if (!user) return 0;\n\n  // Redux store의 User 객체인 경우 (권장)\n  if (isUserObject(user)) {\n    return user.level || 0;\n  }\n\n  // JWT 페이로드인 경우 (레거시 호환성 - 권장하지 않음)\n  if (isJWTPayload(user)) {\n    console.warn(\n      '[DEPRECATED] JWT 기반 레벨 조회는 권장하지 않습니다. useAppSelector(selectUserInfo)를 사용하여 Redux store의 사용자 정보를 활용하세요.'\n    );\n    // 레거시 호환성을 위한 기본 레벨 매핑\n    return user.is_admin ? 99 : (user.level || 1);\n  }\n\n  // 기존 UserPermission 형태인 경우 (레거시)\n  return user.level || 0;\n};\n\nexport const getUserPermissionType = (user: AuthUser | User | null): permissionType => {\n  if (!user) {\n    return 'anonymous';\n  }\n\n  return user.permissionType || 'user';\n};\n\nexport const getUserPermissionTypeFromJWT = (user: AuthUser | User | null): permissionType => {\n  if (!user) {\n    return 'anonymous';\n  }\n\n  return user.permissionType || 'user';\n};\n\nexport const getUserPermissionTypeFromDB = (user: AuthUser | User | null): permissionType => {\n  if (!user) {\n    return 'anonymous';\n  }\n\n  return user.permissionType || 'user';\n};\n","// 이미지 캐싱을 위한 사이즈 상수\nexport const IMAGE_SIZE = {\n  sm: 120,\n  md: 240,\n  lg: 480,\n  xl: 720,\n  xxl: 960,\n} as const;\n\nexport type ImageSizeKey = keyof typeof IMAGE_SIZE;\n\n/**\n * Supabase Storage URL을 Image Transformation URL로 변환\n * @param url - 원본 Supabase Storage URL\n * @param size - 이미지 사이즈 (IMAGE_SIZE의 키 또는 숫자)\n * @param quality - 이미지 품질 (20-100, 기본값: 70)\n * @returns 변환된 Image Transformation URL\n */\nexport function transformSupabaseImageUrl(\n  url: string,\n  size: ImageSizeKey | number = 'md',\n  quality: number = 70\n): string {\n  if (!url || !url.includes('/storage/v1/object/')) {\n    return url;\n  }\n\n  try {\n    // object를 render/image로 변경\n    const transformedUrl = url.replace(\n      '/storage/v1/object/',\n      '/storage/v1/render/image/'\n    );\n\n    // 사이즈 값 결정\n    const width = typeof size === 'number' ? size : IMAGE_SIZE[size];\n\n    // 품질 값 검증 (20-100 범위)\n    const validQuality = Math.max(20, Math.min(100, quality));\n\n    // 쿼리 파라미터 추가\n    const separator = transformedUrl.includes('?') ? '&' : '?';\n    const params = `width=${width}&quality=${validQuality}`;\n\n    return `${transformedUrl}${separator}${params}`;\n  } catch (error) {\n    console.error('Failed to transform Supabase image URL:', error);\n    return url; // 변환 실패 시 원본 URL 반환\n  }\n}\n\n/**\n * 여러 사이즈의 이미지 URL을 생성 (srcSet용)\n * @param url - 원본 Supabase Storage URL\n * @param sizes - 생성할 사이즈 배열\n * @param quality - 이미지 품질 (기본값: 70)\n * @returns 사이즈별 URL 객체\n */\nexport function generateImageSrcSet(\n  url: string,\n  sizes: ImageSizeKey[] = ['sm', 'md', 'lg'],\n  quality: number = 70\n): Record<ImageSizeKey, string> {\n  const result = {} as Record<ImageSizeKey, string>;\n\n  sizes.forEach(size => {\n    result[size] = transformSupabaseImageUrl(url, size, quality);\n  });\n\n  return result;\n}\n\n/**\n * Next.js Image 컴포넌트용 로더 함수\n * @param src - 이미지 소스 (버킷 경로)\n * @param width - 요청된 너비\n * @param quality - 이미지 품질\n * @returns 변환된 URL\n */\nexport function supabaseImageLoader({\n  src,\n  width,\n  quality,\n}: {\n  src: string;\n  width: number;\n  quality?: number;\n}): string {\n  const baseUrl = 'https://community.semi-colon.space';\n  const validQuality = quality || 75;\n\n  return `${baseUrl}/storage/v1/render/image/public/${src}?width=${width}&quality=${validQuality}`;\n}\n\n/**\n * 이미지 src의 절대경로를 상대경로로 변환\n * NEXT_PUBLIC_STORAGE_URL 또는 NEXT_PUBLIC_SUPABASE_URL이 포함된 URL을 상대경로로 변환합니다.\n * @param src - 변환할 이미지 소스 URL\n * @returns 상대경로로 변환된 URL 또는 원본 URL\n */\nexport function normalizeImageSrc(src: string): string {\n  if (!src || typeof src !== 'string') {\n    return src;\n  }\n\n  try {\n    const resourceUrl = process.env.NEXT_PUBLIC_STORAGE_URL;\n    \n    // NEXT_PUBLIC_STORAGE_URL이 설정되어 있고, src가 해당 URL로 시작하는 경우\n    if (resourceUrl && src.startsWith(resourceUrl)) {\n      // NEXT_PUBLIC_STORAGE_URL 부분을 제거하여 상대경로로 변환\n      const relativePath = src.replace(resourceUrl, '');\n      \n      // relativePath가 '/'로 시작하지 않는 경우 '/'를 붙이도록 처리\n      if (!relativePath.startsWith('/')) {\n        return `/${relativePath}`;\n      }\n      return relativePath;\n    }\n\n    // NEXT_PUBLIC_RESOURCE_URL이 없거나 해당 URL로 시작하지 않는 경우 원본 반환\n    return src;\n  } catch (error) {\n    console.error('Failed to normalize image src:', error);\n    return src; // 에러 발생 시 원본 URL 반환\n  }\n}\n\n/**\n * Next.js Image 컴포넌트용 src 변환 헬퍼\n * 절대경로를 상대경로로 변환하고 Supabase 이미지 최적화도 적용합니다.\n * @param src - 원본 이미지 소스\n * @param size - 이미지 사이즈 (선택사항)\n * @param quality - 이미지 품질 (선택사항)\n * @returns 최적화된 이미지 URL\n */\nexport function optimizeImageSrc(\n  src: string,\n  size?: ImageSizeKey | number,\n  quality?: number\n): string {\n  // 먼저 상대경로로 변환\n  const normalizedSrc = normalizeImageSrc(src);\n  \n  // Supabase 이미지인 경우 최적화 적용\n  if (size !== undefined && normalizedSrc.includes('/storage/v1/object/')) {\n    return transformSupabaseImageUrl(normalizedSrc, size, quality);\n  }\n  \n  return normalizedSrc;\n}\n\n/**\n * 이미지가 GIF 파일인지 확인\n * @param src - 이미지 소스 URL\n * @returns GIF 파일 여부\n */\nexport function isGifImage(src: string): boolean {\n  if (!src || typeof src !== 'string') {\n    return false;\n  }\n  \n  // URL에서 확장자 확인 (.gif로 끝나는지)\n  const lowerSrc = src.toLowerCase();\n  return lowerSrc.endsWith('.gif') || lowerSrc.includes('.gif?');\n}\n\n/**\n * 이미지가 애니메이션 포맷인지 확인 (GIF, WEBP 애니메이션 등)\n * @param src - 이미지 소스 URL\n * @returns 애니메이션 이미지 여부\n */\nexport function isAnimatedImage(src: string): boolean {\n  if (!src || typeof src !== 'string') {\n    return false;\n  }\n  \n  const lowerSrc = src.toLowerCase();\n  // GIF는 항상 애니메이션일 가능성이 있음\n  // WEBP는 애니메이션을 지원하지만 URL만으로는 판단 불가\n  return isGifImage(src);\n}\n\n/**\n * Next.js Image 컴포넌트에 필요한 props를 자동으로 결정\n * GIF 파일의 경우 unoptimized 속성을 추가\n * @param src - 이미지 소스 URL\n * @returns Image 컴포넌트용 추가 props\n */\nexport function getImageProps(src: string): { unoptimized?: boolean } {\n  // GIF 파일인 경우 unoptimized 설정\n  if (isGifImage(src)) {\n    return { unoptimized: true };\n  }\n  \n  return {};\n}\n","// 임시 타입 정의 (Phase 2에서 적절한 위치로 이동 예정)\ninterface LevelInfo {\n  level: number;\n  required_points: number;\n}\n\n/**\n * 레벨 관련 유틸리티 함수들\n */\nexport class LevelUtil {\n  /**\n   * 현재 포인트를 기반으로 사용자의 실제 레벨을 계산\n   */\n  static calculateUserLevel(currentPoints: number, levelTable: LevelInfo[]): number {\n    if (!levelTable.length) return 0;\n    \n    // 레벨표를 오름차순으로 정렬\n    const sortedLevels = [...levelTable].sort((a, b) => a.level - b.level);\n    \n    let userLevel = 0;\n    for (const level of sortedLevels) {\n      if (currentPoints >= level.required_points) {\n        userLevel = level.level;\n      } else {\n        break;\n      }\n    }\n    \n    return userLevel;\n  }\n\n  /**\n   * 현재 레벨과 다음 레벨 정보를 반환\n   */\n  static getLevelProgress(currentPoints: number, levelTable: LevelInfo[]) {\n    \n    if (!levelTable.length) {\n      return {\n        currentLevel: 0,\n        currentLevelPoints: 0,\n        nextLevel: 1,\n        nextLevelPoints: 0,\n        progressPercentage: 0,\n        pointsToNext: 0,\n      };\n    }\n\n    const sortedLevels = [...levelTable].sort((a, b) => a.level - b.level);\n    const userLevel = this.calculateUserLevel(currentPoints, levelTable);\n    \n    // 현재 레벨 정보 찾기\n    const currentLevelInfo = sortedLevels.find(level => level.level === userLevel);\n    const currentLevelPoints = currentLevelInfo?.required_points || 0;\n    \n    // 다음 레벨 정보 찾기\n    const nextLevelInfo = sortedLevels.find(level => level.level === userLevel + 1);\n    const nextLevel = nextLevelInfo?.level || userLevel;\n    const nextLevelPoints = nextLevelInfo?.required_points || currentLevelPoints;\n    \n    // 진행률 계산\n    let progressPercentage = 0;\n    let pointsToNext = 0;\n    \n    if (nextLevelInfo) {\n      // 현재 레벨에서 다음 레벨까지 필요한 포인트\n      const pointsNeededForNext = nextLevelPoints - currentLevelPoints;\n      // 현재 레벨을 넘어선 포인트\n      const pointsEarnedInCurrentLevel = currentPoints - currentLevelPoints;\n      \n      progressPercentage = pointsNeededForNext > 0 \n        ? Math.min(100, (pointsEarnedInCurrentLevel / pointsNeededForNext) * 100)\n        : 100;\n      \n      pointsToNext = Math.max(0, nextLevelPoints - currentPoints);\n    } else {\n      // 최고 레벨에 도달한 경우\n      progressPercentage = 100;\n      pointsToNext = 0;\n    }\n\n    return {\n      currentLevel: userLevel,\n      currentLevelPoints,\n      nextLevel,\n      nextLevelPoints,\n      progressPercentage: Math.round(progressPercentage),\n      pointsToNext,\n    };\n  }\n  /**\n   * 다음 레벨 정보를 반환 (간단한 형태)\n   */\n  static getNextLevelInfo(currentPoints: number, levelTable: LevelInfo[]) {\n    if (!levelTable.length) {\n      return {\n        nextLevel: 1,\n        requiredPoint: 0,\n        levelUpPercentage: 0,\n        isMaxLevel: true,\n      };\n    }\n    \n\n    const sortedLevels = [...levelTable].sort((a, b) => a.level - b.level);\n    const userLevel = this.calculateUserLevel(currentPoints, levelTable);\n    \n    // 현재 레벨 정보 찾기\n    const currentLevelInfo = sortedLevels.find(level => level.level === userLevel);\n    const currentLevelPoints = currentLevelInfo?.required_points || 0;\n    \n    // 다음 레벨 정보 찾기\n    const nextLevelInfo = sortedLevels.find(level => level.level === userLevel + 1);\n    \n    if (!nextLevelInfo) {\n      // 최고 레벨에 도달한 경우\n      return {\n        nextLevel: userLevel,\n        requiredPoint: 0,\n        levelUpPercent: 100,\n        isMaxLevel: true,\n      };\n    }\n    \n    const nextLevel = nextLevelInfo.level;\n    const nextLevelPoints = nextLevelInfo.required_points;\n    \n    // 다음 레벨까지 필요한 포인트\n    const requiredPoint = Math.max(0, nextLevelPoints - currentPoints);\n    \n    // 현재 레벨에서 다음 레벨까지의 진행률 계산\n    const pointsNeededForNext = nextLevelPoints - currentLevelPoints;\n    const pointsEarnedInCurrentLevel = currentPoints - currentLevelPoints;\n    \n    const levelUpPercent = pointsNeededForNext > 0 \n      ? Math.min(100, Math.round((pointsEarnedInCurrentLevel / pointsNeededForNext) * 100))\n      : 100;\n\n    return {\n      nextLevel,\n      requiredPoint,\n      levelUpPercent,\n      isMaxLevel: false,\n    };\n  }\n\n}","/**\n * 문자열 변환 관련 유틸리티 함수들\n */\n\n/**\n * snake_case 문자열을 camelCase로 변환\n * @param str snake_case 문자열\n * @returns camelCase 문자열\n */\nexport const toCamelCase = (str: string): string => {\n  return str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\n};\n\n/**\n * camelCase 문자열을 snake_case로 변환\n * @param str camelCase 문자열\n * @returns snake_case 문자열\n */\nexport const toSnakeCase = (str: string): string => {\n  return str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n};\n\n/**\n * 객체의 키를 snake_case에서 camelCase로 변환\n * @param obj snake_case 키를 가진 객체\n * @returns camelCase 키를 가진 객체\n */\nexport const keysToCamelCase = <T extends Record<string, any>>(\n  obj: T\n): { [K in keyof T as K extends string ? CamelCase<K> : K]: T[K] } => {\n  if (obj === null || obj === undefined) {\n    return obj as any;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(item => \n      typeof item === 'object' && item !== null ? keysToCamelCase(item) : item\n    ) as any;\n  }\n\n  if (typeof obj === 'object') {\n    const result: Record<string, any> = {};\n    \n    for (const [key, value] of Object.entries(obj)) {\n      const camelKey = toCamelCase(key);\n      \n      if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n        result[camelKey] = keysToCamelCase(value);\n      } else if (Array.isArray(value)) {\n        result[camelKey] = value.map(item =>\n          typeof item === 'object' && item !== null ? keysToCamelCase(item) : item\n        );\n      } else {\n        result[camelKey] = value;\n      }\n    }\n    \n    return result as any;\n  }\n\n  return obj as any;\n};\n\n/**\n * 객체의 키를 camelCase에서 snake_case로 변환\n * @param obj camelCase 키를 가진 객체\n * @returns snake_case 키를 가진 객체\n */\nexport const keysToSnakeCase = <T extends Record<string, any>>(\n  obj: T\n): { [K in keyof T as K extends string ? SnakeCase<K> : K]: T[K] } => {\n  if (obj === null || obj === undefined) {\n    return obj as any;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(item => \n      typeof item === 'object' && item !== null ? keysToSnakeCase(item) : item\n    ) as any;\n  }\n\n  if (typeof obj === 'object') {\n    const result: Record<string, any> = {};\n    \n    for (const [key, value] of Object.entries(obj)) {\n      const snakeKey = toSnakeCase(key);\n      \n      if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n        result[snakeKey] = keysToSnakeCase(value);\n      } else if (Array.isArray(value)) {\n        result[snakeKey] = value.map(item =>\n          typeof item === 'object' && item !== null ? keysToSnakeCase(item) : item\n        );\n      } else {\n        result[snakeKey] = value;\n      }\n    }\n    \n    return result as any;\n  }\n\n  return obj as any;\n};\n\n// 타입 헬퍼들\ntype CamelCase<S extends string> = S extends `${infer P1}_${infer P2}${infer P3}`\n  ? `${P1}${Uppercase<P2>}${CamelCase<P3>}`\n  : S;\n\ntype SnakeCase<S extends string> = S extends `${infer C}${infer T}`\n  ? C extends Uppercase<C>\n    ? `_${Lowercase<C>}${SnakeCase<T>}`\n    : `${C}${SnakeCase<T>}`\n  : S; ","/**\n * URL 파라미터를 안전하게 추가/수정하는 유틸리티 함수\n */\nexport const addUrlParams = (\n  baseUrl: string, \n  params: Record<string, string>\n): string => {\n  try {\n    // 절대 URL인지 상대 URL인지 확인\n    const url = baseUrl.startsWith('http') \n      ? new URL(baseUrl)\n      : new URL(baseUrl, window.location.origin);\n    \n    const searchParams = new URLSearchParams(url.search);\n    \n    // 새로운 파라미터들을 추가/업데이트\n    Object.entries(params).forEach(([key, value]) => {\n      searchParams.set(key, value);\n    });\n    \n    // pathname과 새로운 search params를 결합\n    return `${url.pathname}?${searchParams.toString()}`;\n  } catch (error) {\n    console.error('URL 파싱 오류:', error);\n    throw new Error('유효하지 않은 URL입니다.');\n  }\n};\n\n/**\n * sessionStorage에서 이전 페이지 URL을 가져와서 파라미터를 추가한 후 반환\n */\nexport const getPreviousUrlWithParams = (\n  storageKey: string,\n  params: Record<string, string>,\n  fallbackUrl: string = '/'\n): string => {\n  const previousUrl = sessionStorage.getItem(storageKey);\n  \n  if (!previousUrl) {\n    return fallbackUrl;\n  }\n  \n  try {\n    return addUrlParams(previousUrl, params);\n  } catch (error) {\n    console.error('이전 URL 처리 오류:', error);\n    return fallbackUrl;\n  }\n}; ","/**\n * JWT 토큰 디코딩 및 사용자 정보 추출 유틸리티\n */\n\nexport interface JWTUserPayload {\n  aal: string;\n  amr: Array<{ method: string; timestamp: number }>;\n  app_metadata: {\n    provider: string;\n    providers: string[];\n    [key: string]: any; // 추가 앱 메타데이터\n  };\n  aud: string;\n  created_at: string;\n  email: string;\n  exp: number;\n  iat: number;\n  is_anonymous: boolean;\n  phone: string;\n  role: string;\n  session_id: string;\n  sub: string; // auth_user_id (UUID)\n  user_metadata: {\n    email?: string;\n    email_verified?: boolean;\n    login_id?: string;\n    nickname?: string;\n    phone_verified?: boolean;\n    role?: string;\n    sub?: string;\n    [key: string]: any; // 추가 사용자 메타데이터\n  };\n  \n  // 애플리케이션별 확장 필드 (실제로 JWT에 없을 수 있음)\n  user_id?: number; // users 테이블의 실제 ID\n  permission_type?: string;\n  is_admin?: boolean;\n}\n\n/**\n * Base64 URL 디코딩\n */\nfunction base64UrlDecode(str: string): string {\n  // Base64 URL을 일반 Base64로 변환\n  str = str.replace(/-/g, '+').replace(/_/g, '/');\n  \n  // 패딩 추가\n  while (str.length % 4) {\n    str += '=';\n  }\n  \n  // Base64 디코딩 후 UTF-8 문자열로 변환\n  return decodeURIComponent(\n    atob(str)\n      .split('')\n      .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n      .join('')\n  );\n}\n\n/**\n * JWT 토큰에서 페이로드 추출\n * @param token JWT 액세스 토큰\n * @returns 디코딩된 사용자 정보 또는 null\n */\nexport function decodeJWTPayload(token: string): JWTUserPayload | null {\n  try {\n    // JWT는 header.payload.signature 형태\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n      console.error('Invalid JWT format');\n      return null;\n    }\n    \n    // 페이로드 부분 디코딩\n    const payload = base64UrlDecode(parts[1]);\n    return JSON.parse(payload) as JWTUserPayload;\n  } catch (error) {\n    console.error('JWT 디코딩 실패:', error);\n    return null;\n  }\n}\n\n/**\n * 현재 세션에서 사용자 정보 추출\n * @returns 사용자 정보 또는 null\n */\nexport async function getCurrentUserFromToken(): Promise<JWTUserPayload | null> {\n  try {\n    const { clientSupabase } = await import(\"../config/Supabase/client\");\n    const { data: { session } } = await clientSupabase.auth.getSession();\n    \n    if (!session?.access_token) {\n      return null;\n    }\n    \n    return decodeJWTPayload(session.access_token);\n  } catch (error) {\n    console.error('토큰에서 사용자 정보 추출 실패:', error);\n    return null;\n  }\n}\n\n/**\n * JWT 토큰이 만료되었는지 확인\n * @param payload JWT 페이로드\n * @returns 만료 여부\n */\nexport function isTokenExpired(payload: JWTUserPayload): boolean {\n  const now = Math.floor(Date.now() / 1000);\n  return payload.exp <= now;\n}\n\n/**\n * 토큰 만료까지 남은 시간 (초)\n * @param payload JWT 페이로드\n * @returns 남은 시간 (초), 음수면 이미 만료\n */\nexport function getTokenTimeToExpiry(payload: JWTUserPayload): number {\n  const now = Math.floor(Date.now() / 1000);\n  return payload.exp - now;\n}\n\n/**\n * 만료된 토큰을 쿠키에서 자동으로 제거\n * @param cookieName 쿠키 이름 (기본값: 'sb-access-token')\n */\nexport function removeExpiredTokenFromCookie(cookieName: string = 'sb-access-token'): void {\n  if (typeof window === 'undefined') return;\n\n  try {\n    // 쿠키에서 토큰 읽기\n    const cookieString = document.cookie\n      .split('; ')\n      .find(row => row.startsWith(`${cookieName}=`))\n      ?.split('=')[1];\n\n    if (!cookieString) return;\n\n    // 토큰 파싱 및 검증\n    const decodedCookie = decodeURIComponent(cookieString);\n    const sessionData = JSON.parse(decodedCookie);\n    const accessToken = sessionData?.access_token;\n\n    if (!accessToken) return;\n\n    // JWT 토큰 디코딩 및 만료 확인\n    const payload = decodeJWTPayload(accessToken);\n    if (payload && isTokenExpired(payload)) {\n      console.log('🗑️ 만료된 토큰 감지, 쿠키에서 제거 중...');\n      \n      // 만료된 토큰 제거\n      document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=Lax`;\n      \n      // 추가 토큰 관련 쿠키들도 정리\n      const relatedCookies = ['supabase-auth-token', 'sb-auth-token', 'auth-token'];\n      relatedCookies.forEach(name => {\n        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=Lax`;\n      });\n\n      console.log('✅ 만료된 토큰 쿠키 제거 완료');\n    }\n  } catch (error) {\n    console.error('❌ 만료된 토큰 제거 중 오류:', error);\n  }\n}\n\n/**\n * 토큰 유효성을 검증하고 만료된 경우 자동으로 정리\n * @returns 유효한 토큰이 있으면 페이로드 반환, 없으면 null\n */\nexport async function validateAndCleanToken(): Promise<JWTUserPayload | null> {\n  try {\n    const { clientSupabase } = await import(\"../config/Supabase/client\");\n    const { data: { session } } = await clientSupabase.auth.getSession();\n    \n    if (!session?.access_token) {\n      // 세션이 없는 경우 쿠키 정리\n      removeExpiredTokenFromCookie();\n      return null;\n    }\n    \n    const payload = decodeJWTPayload(session.access_token);\n    if (!payload) {\n      // 토큰 디코딩 실패 시 쿠키 정리\n      removeExpiredTokenFromCookie();\n      return null;\n    }\n    \n    if (isTokenExpired(payload)) {\n      // 만료된 토큰 정리\n      removeExpiredTokenFromCookie();\n      \n      // Supabase 세션도 정리\n      await clientSupabase.auth.signOut();\n      return null;\n    }\n    \n    return payload;\n  } catch (error) {\n    console.error('토큰 검증 및 정리 실패:', error);\n    removeExpiredTokenFromCookie(); // 오류 시에도 쿠키 정리\n    return null;\n  }\n}\n\n/**\n * 토큰 만료 5분 전 여부 확인 (갱신 시점 판단용)\n * @param payload JWT 페이로드\n * @returns true면 갱신이 필요한 시점\n */\nexport function shouldRefreshToken(payload: JWTUserPayload): boolean {\n  const timeToExpiry = getTokenTimeToExpiry(payload);\n  return timeToExpiry <= 300; // 5분 이하 남으면 갱신\n} ","// 업로드 에러 타입 정의\nexport enum UploadErrorType {\n  NETWORK_ERROR = 'network_error',\n  FILE_TOO_LARGE = 'file_too_large',\n  UNSUPPORTED_FORMAT = 'unsupported_format',\n  PERMISSION_DENIED = 'permission_denied',\n  SERVER_ERROR = 'server_error',\n  UPLOAD_TIMEOUT = 'upload_timeout',\n  QUOTA_EXCEEDED = 'quota_exceeded',\n  INVALID_POST = 'invalid_post',\n}\n\n// 에러 메시지 매핑\nconst ERROR_MESSAGES: Record<UploadErrorType, string> = {\n  [UploadErrorType.FILE_TOO_LARGE]: '파일 크기가 너무 큽니다. 이미지는 10MB, 비디오는 100MB 이하로 업로드해주세요.',\n  [UploadErrorType.UNSUPPORTED_FORMAT]: '지원하지 않는 파일 형식입니다. JPG, PNG, GIF, WebP, MP4, AVI, MOV 파일만 업로드 가능합니다.',\n  [UploadErrorType.PERMISSION_DENIED]: '파일 업로드 권한이 없습니다. 로그인 상태를 확인해주세요.',\n  [UploadErrorType.NETWORK_ERROR]: '네트워크 오류가 발생했습니다. 인터넷 연결을 확인하고 다시 시도해주세요.',\n  [UploadErrorType.SERVER_ERROR]: '서버 오류가 발생했습니다. 잠시 후 다시 시도해주세요.',\n  [UploadErrorType.UPLOAD_TIMEOUT]: '업로드 시간이 초과되었습니다. 파일 크기를 확인하거나 다시 시도해주세요.',\n  [UploadErrorType.QUOTA_EXCEEDED]: '업로드 할당량을 초과했습니다. 불필요한 파일을 삭제하거나 관리자에게 문의하세요.',\n  [UploadErrorType.INVALID_POST]: '유효하지 않은 게시글입니다. 게시글을 다시 생성해주세요.',\n};\n\n// 에러 분석 및 사용자 친화적 메시지 생성\nexport function getUploadErrorMessage(error: any): string {\n  const errorMessage = error?.message?.toLowerCase() || '';\n  const errorResponse = error?.response?.data;\n\n  // API 에러 응답에서 구체적인 에러 코드 확인\n  if (errorResponse?.error?.code) {\n    const errorCode = errorResponse.error.code as UploadErrorType;\n    if (ERROR_MESSAGES[errorCode]) {\n      return ERROR_MESSAGES[errorCode];\n    }\n  }\n\n  // 에러 메시지 키워드 기반 분석\n  if (errorMessage.includes('file too large') || errorMessage.includes('413')) {\n    return ERROR_MESSAGES[UploadErrorType.FILE_TOO_LARGE];\n  }\n\n  if (errorMessage.includes('unsupported') || \n      errorMessage.includes('invalid format') || \n      errorMessage.includes('415')) {\n    return ERROR_MESSAGES[UploadErrorType.UNSUPPORTED_FORMAT];\n  }\n\n  if (errorMessage.includes('permission') || \n      errorMessage.includes('unauthorized') || \n      errorMessage.includes('401') || \n      errorMessage.includes('403')) {\n    return ERROR_MESSAGES[UploadErrorType.PERMISSION_DENIED];\n  }\n\n  if (errorMessage.includes('network') || \n      errorMessage.includes('fetch') || \n      errorMessage.includes('timeout') ||\n      error?.code === 'NETWORK_ERROR') {\n    return ERROR_MESSAGES[UploadErrorType.NETWORK_ERROR];\n  }\n\n  if (errorMessage.includes('quota') || \n      errorMessage.includes('storage full') ||\n      errorMessage.includes('429')) {\n    return ERROR_MESSAGES[UploadErrorType.QUOTA_EXCEEDED];\n  }\n\n  if (errorMessage.includes('post not found') || \n      errorMessage.includes('invalid post') ||\n      errorMessage.includes('404')) {\n    return ERROR_MESSAGES[UploadErrorType.INVALID_POST];\n  }\n\n  // 기본 에러 메시지\n  return '파일 업로드 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.';\n}\n\n// 재시도 가능한 에러인지 확인\nexport function isRetryableError(error: any): boolean {\n  const errorMessage = error?.message?.toLowerCase() || '';\n  const errorCode = error?.response?.data?.error?.code;\n\n  // 재시도 불가능한 에러들\n  const nonRetryableErrors = [\n    UploadErrorType.FILE_TOO_LARGE,\n    UploadErrorType.UNSUPPORTED_FORMAT,\n    UploadErrorType.PERMISSION_DENIED,\n    UploadErrorType.QUOTA_EXCEEDED,\n    UploadErrorType.INVALID_POST,\n  ];\n\n  if (nonRetryableErrors.includes(errorCode)) {\n    return false;\n  }\n\n  // 키워드 기반 재시도 불가능 에러 체크\n  if (errorMessage.includes('file too large') ||\n      errorMessage.includes('unsupported') ||\n      errorMessage.includes('invalid format') ||\n      errorMessage.includes('permission') ||\n      errorMessage.includes('unauthorized') ||\n      errorMessage.includes('quota')) {\n    return false;\n  }\n\n  // 그 외는 모두 재시도 가능\n  return true;\n}\n\n// 업로드 에러 로깅\nexport function logUploadError(\n  error: any, \n  context: {\n    postId?: number;\n    fileName?: string;\n    fileSize?: number;\n    fileType?: string;\n    action?: 'upload' | 'retry' | 'progress' | 'cancel';\n  }\n): void {\n  const errorInfo = {\n    message: error?.message || 'Unknown error',\n    stack: error?.stack,\n    response: error?.response?.data,\n    context,\n    timestamp: new Date().toISOString(),\n    userAgent: navigator.userAgent,\n  };\n\n  // 개발 환경에서는 콘솔에 상세 출력\n  if (process.env.NODE_ENV === 'development') {\n    console.group('🚨 Upload Error');\n    console.error('Error Details:', errorInfo);\n    console.groupEnd();\n  }\n\n  // 프로덕션에서는 모니터링 서비스로 전송\n  if (process.env.NODE_ENV === 'production') {\n    // 예: Sentry, LogRocket 등으로 전송\n    // window.Sentry?.captureException(error, { extra: errorInfo });\n    console.error('Upload Error:', errorInfo);\n  }\n}\n\n// 업로드 진행 상황 추적을 위한 인터페이스\nexport interface UploadMetrics {\n  startTime: number;\n  totalFiles: number;\n  completedFiles: number;\n  failedFiles: number;\n  totalBytes: number;\n  uploadedBytes: number;\n  retryCount: number;\n}\n\n// 업로드 메트릭스 계산\nexport function calculateUploadMetrics(files: any[], startTime: number): UploadMetrics {\n  const totalFiles = files.length;\n  const completedFiles = files.filter(f => f.status === 'completed').length;\n  const failedFiles = files.filter(f => f.status === 'failed').length;\n  const totalBytes = files.reduce((sum, f) => sum + (f.fileSize || 0), 0);\n  const uploadedBytes = files.reduce((sum, f) => {\n    return sum + (f.fileSize || 0) * ((f.progress || 0) / 100);\n  }, 0);\n\n  return {\n    startTime,\n    totalFiles,\n    completedFiles,\n    failedFiles,\n    totalBytes,\n    uploadedBytes,\n    retryCount: 0, // 별도 관리 필요\n  };\n}\n\n// 예상 완료 시간 계산\nexport function estimateCompletionTime(metrics: UploadMetrics): number | null {\n  const elapsed = Date.now() - metrics.startTime;\n  const progress = metrics.uploadedBytes / metrics.totalBytes;\n  \n  if (progress === 0) return null;\n  \n  const totalEstimated = elapsed / progress;\n  const remaining = totalEstimated - elapsed;\n  \n  return Math.max(0, remaining);\n}\n\n// 업로드 속도 계산 (MB/s)\nexport function calculateUploadSpeed(metrics: UploadMetrics): number {\n  const elapsed = (Date.now() - metrics.startTime) / 1000; // 초 단위\n  const uploadedMB = metrics.uploadedBytes / (1024 * 1024);\n  \n  return elapsed > 0 ? uploadedMB / elapsed : 0;\n}","/**\n * @semicolon/community-core initialization\n * \n * This module provides package initialization functionality\n * to configure the core package for optimal usage.\n */\n\nexport interface CommunityPackageConfig {\n  /** API base URL for backend services */\n  apiUrl?: string;\n  \n  /** Supabase configuration */\n  supabase?: {\n    url?: string;\n    anonKey?: string;\n  };\n  \n  /** Default locale for formatting */\n  locale?: string;\n  \n  /** Enable development mode features */\n  development?: boolean;\n}\n\nlet globalConfig: CommunityPackageConfig = {};\n\n/**\n * Initialize @semicolon/community-core package with configuration\n * \n * @example\n * ```typescript\n * import { initializeCommunityCore } from '@semicolon/community-core';\n * \n * initializeCommunityCore({\n *   apiUrl: process.env.REACT_APP_API_URL,\n *   supabase: {\n *     url: process.env.REACT_APP_SUPABASE_URL,\n *     anonKey: process.env.REACT_APP_SUPABASE_ANON_KEY,\n *   },\n *   locale: 'ko-KR',\n *   development: process.env.NODE_ENV === 'development'\n * });\n * ```\n */\nexport function initializeCommunityCore(config: CommunityPackageConfig): void {\n  globalConfig = { ...globalConfig, ...config };\n  \n  if (config.development) {\n    console.log('🚀 @semicolon/community-core initialized with config:', globalConfig);\n  }\n}\n\n/**\n * Get current package configuration\n */\nexport function getPackageConfig(): Readonly<CommunityPackageConfig> {\n  return Object.freeze({ ...globalConfig });\n}\n\n/**\n * Get specific config value with fallback\n */\nexport function getConfigValue<T>(key: keyof CommunityPackageConfig, fallback?: T): T {\n  return (globalConfig[key] as T) ?? fallback;\n}","/**\n * Button Component\n * \n * A flexible, accessible button component with multiple variants and sizes.\n * Designed for community platform usage with built-in loading states and accessibility.\n */\n\nimport React, { forwardRef } from 'react';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Button visual style variant */\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger';\n  \n  /** Button size */\n  size?: 'sm' | 'md' | 'lg';\n  \n  /** Show loading state */\n  loading?: boolean;\n  \n  /** Make button full width */\n  fullWidth?: boolean;\n  \n  /** Icon to show before text */\n  startIcon?: React.ReactNode;\n  \n  /** Icon to show after text */\n  endIcon?: React.ReactNode;\n}\n\n/**\n * Button component with multiple variants and accessibility features\n * \n * @example\n * ```tsx\n * import { Button } from '@semicolon/community-core';\n * \n * // Basic usage\n * <Button>Click me</Button>\n * \n * // With variant and size\n * <Button variant=\"primary\" size=\"lg\">Submit</Button>\n * \n * // Loading state\n * <Button loading onClick={handleSubmit}>Save Changes</Button>\n * \n * // With icons\n * <Button startIcon={<PlusIcon />}>Add New</Button>\n * ```\n */\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(({\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  fullWidth = false,\n  startIcon,\n  endIcon,\n  disabled,\n  className = '',\n  children,\n  ...props\n}, ref) => {\n  // Base classes\n  const baseClasses = [\n    'inline-flex items-center justify-center font-medium transition-colors',\n    'focus:outline-none focus:ring-2 focus:ring-offset-2',\n    'disabled:opacity-50 disabled:cursor-not-allowed'\n  ];\n\n  // Variant classes\n  const variantClasses = {\n    primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',\n    secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',\n    outline: 'border-2 border-gray-300 text-gray-700 hover:bg-gray-50 focus:ring-gray-500',\n    ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-gray-500',\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500'\n  };\n\n  // Size classes\n  const sizeClasses = {\n    sm: 'px-3 py-1.5 text-sm rounded-md',\n    md: 'px-4 py-2 text-base rounded-lg', \n    lg: 'px-6 py-3 text-lg rounded-lg'\n  };\n\n  // Width classes\n  const widthClass = fullWidth ? 'w-full' : '';\n\n  // Combine all classes\n  const buttonClasses = [\n    ...baseClasses,\n    variantClasses[variant],\n    sizeClasses[size],\n    widthClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  // Loading spinner component\n  const LoadingSpinner = () => (\n    <svg \n      className=\"animate-spin -ml-1 mr-2 h-4 w-4\" \n      fill=\"none\" \n      viewBox=\"0 0 24 24\"\n      aria-hidden=\"true\"\n    >\n      <circle \n        className=\"opacity-25\" \n        cx=\"12\" \n        cy=\"12\" \n        r=\"10\" \n        stroke=\"currentColor\" \n        strokeWidth=\"4\"\n      />\n      <path \n        className=\"opacity-75\" \n        fill=\"currentColor\" \n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n  );\n\n  return (\n    <button\n      ref={ref}\n      className={buttonClasses}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && <LoadingSpinner />}\n      {!loading && startIcon && (\n        <span className=\"mr-2\">{startIcon}</span>\n      )}\n      {children}\n      {!loading && endIcon && (\n        <span className=\"ml-2\">{endIcon}</span>\n      )}\n    </button>\n  );\n});\n\nButton.displayName = 'Button';\n\nexport default Button;","/**\n * Badge Component\n * \n * A versatile badge component for displaying status, labels, and notifications.\n * Perfect for user levels, post tags, notification counts, etc.\n */\n\nimport React from 'react';\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {\n  /** Badge visual variant */\n  variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'info';\n  \n  /** Badge size */\n  size?: 'sm' | 'md' | 'lg';\n  \n  /** Make badge rounded/pill-shaped */\n  rounded?: boolean;\n  \n  /** Show a dot indicator */\n  dot?: boolean;\n}\n\n/**\n * Badge component for status indicators and labels\n * \n * @example\n * ```tsx\n * import { Badge } from '@semicolon/community-core';\n * \n * // Basic usage\n * <Badge>New</Badge>\n * \n * // User level badge\n * <Badge variant=\"primary\" rounded>Level 5</Badge>\n * \n * // Notification count\n * <Badge variant=\"danger\" size=\"sm\">3</Badge>\n * \n * // Status indicator with dot\n * <Badge variant=\"success\" dot>Online</Badge>\n * ```\n */\nexport const Badge: React.FC<BadgeProps> = ({\n  variant = 'primary',\n  size = 'md',\n  rounded = false,\n  dot = false,\n  className = '',\n  children,\n  ...props\n}) => {\n  // Base classes\n  const baseClasses = [\n    'inline-flex items-center font-medium',\n    rounded ? 'rounded-full' : 'rounded-md'\n  ];\n\n  // Variant classes\n  const variantClasses = {\n    primary: 'bg-blue-100 text-blue-800',\n    secondary: 'bg-gray-100 text-gray-800',\n    success: 'bg-green-100 text-green-800',\n    warning: 'bg-yellow-100 text-yellow-800',\n    danger: 'bg-red-100 text-red-800',\n    info: 'bg-indigo-100 text-indigo-800'\n  };\n\n  // Size classes\n  const sizeClasses = {\n    sm: 'px-2 py-1 text-xs',\n    md: 'px-2.5 py-1.5 text-sm',\n    lg: 'px-3 py-2 text-base'\n  };\n\n  // Dot classes\n  const dotClasses = {\n    primary: 'bg-blue-400',\n    secondary: 'bg-gray-400',\n    success: 'bg-green-400',\n    warning: 'bg-yellow-400',\n    danger: 'bg-red-400',\n    info: 'bg-indigo-400'\n  };\n\n  // Combine all classes\n  const badgeClasses = [\n    ...baseClasses,\n    variantClasses[variant],\n    sizeClasses[size],\n    className\n  ].filter(Boolean).join(' ');\n\n  // Dot component\n  const DotIndicator = () => (\n    <span \n      className={`w-2 h-2 rounded-full mr-1.5 ${dotClasses[variant]}`}\n      aria-hidden=\"true\"\n    />\n  );\n\n  return (\n    <span className={badgeClasses} {...props}>\n      {dot && <DotIndicator />}\n      {children}\n    </span>\n  );\n};\n\nexport default Badge;","/**\n * Avatar Component\n * \n * User avatar component with fallback support and multiple sizes.\n * Integrates with community platform user system and image optimization.\n */\n\nimport React, { useState } from 'react';\nimport { normalizeImageSrc } from '../../../utils/imageUtil';\n\nexport interface AvatarProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  /** User's display name for fallback text */\n  name?: string;\n  \n  /** Avatar size */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n  \n  /** Show online status indicator */\n  status?: 'online' | 'offline' | 'away' | 'busy';\n  \n  /** Make avatar square instead of circular */\n  square?: boolean;\n}\n\n/**\n * Avatar component for user profile pictures\n * \n * @example\n * ```tsx\n * import { Avatar } from '@semicolon/community-core';\n * \n * // Basic usage\n * <Avatar src=\"/avatar.jpg\" name=\"김철수\" />\n * \n * // With status indicator\n * <Avatar \n *   src=\"/avatar.jpg\" \n *   name=\"김철수\" \n *   status=\"online\"\n *   size=\"lg\" \n * />\n * \n * // Square avatar for brand logos\n * <Avatar src=\"/logo.jpg\" name=\"Company\" square />\n * ```\n */\nexport const Avatar: React.FC<AvatarProps> = ({\n  src,\n  name = '',\n  size = 'md',\n  status,\n  square = false,\n  className = '',\n  alt,\n  ...props\n}) => {\n  const [imageError, setImageError] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  // Size classes\n  const sizeClasses = {\n    xs: 'w-6 h-6 text-xs',\n    sm: 'w-8 h-8 text-sm',\n    md: 'w-10 h-10 text-base',\n    lg: 'w-12 h-12 text-lg',\n    xl: 'w-14 h-14 text-xl',\n    '2xl': 'w-16 h-16 text-2xl'\n  };\n\n  // Status indicator classes\n  const statusClasses = {\n    online: 'bg-green-400',\n    offline: 'bg-gray-400',\n    away: 'bg-yellow-400',\n    busy: 'bg-red-400'\n  };\n\n  // Status indicator size based on avatar size\n  const statusSizeClasses = {\n    xs: 'w-1.5 h-1.5',\n    sm: 'w-2 h-2',\n    md: 'w-2.5 h-2.5',\n    lg: 'w-3 h-3',\n    xl: 'w-3.5 h-3.5',\n    '2xl': 'w-4 h-4'\n  };\n\n  // Base classes\n  const baseClasses = [\n    'inline-block relative',\n    square ? 'rounded-lg' : 'rounded-full',\n    'bg-gray-100 overflow-hidden',\n    'ring-2 ring-white',\n    sizeClasses[size]\n  ];\n\n  // Generate fallback initials from name\n  const getInitials = (name: string): string => {\n    return name\n      .split(' ')\n      .map(part => part.charAt(0).toUpperCase())\n      .join('')\n      .slice(0, 2);\n  };\n\n  // Handle image load error\n  const handleImageError = () => {\n    setImageError(true);\n  };\n\n  const handleImageLoad = () => {\n    setImageLoaded(true);\n  };\n\n  // Optimize image src\n  const optimizedSrc = src ? normalizeImageSrc(src) : undefined;\n\n  // Combine classes\n  const avatarClasses = [...baseClasses, className].filter(Boolean).join(' ');\n\n  return (\n    <div className={avatarClasses}>\n      {optimizedSrc && !imageError ? (\n        <img\n          src={optimizedSrc}\n          alt={alt || name}\n          className=\"w-full h-full object-cover\"\n          onError={handleImageError}\n          onLoad={handleImageLoad}\n          {...props}\n        />\n      ) : (\n        // Fallback with initials\n        <div className=\"w-full h-full flex items-center justify-center bg-gray-300 text-gray-600 font-medium\">\n          {getInitials(name) || '?'}\n        </div>\n      )}\n      \n      {/* Status indicator */}\n      {status && (\n        <span \n          className={`absolute bottom-0 right-0 block ${statusSizeClasses[size]} ${statusClasses[status]} rounded-full ring-2 ring-white`}\n          title={`Status: ${status}`}\n          aria-label={`User status: ${status}`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Avatar;","import React, { forwardRef } from 'react';\n\nexport interface InputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  /** Input 라벨 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 입력 타입 */\n  type?: 'text' | 'email' | 'password' | 'number' | 'tel' | 'url' | 'search';\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 전체 너비 사용 여부 */\n  fullWidth?: boolean;\n  /** 입력 앞쪽 아이콘 또는 텍스트 */\n  startAdornment?: React.ReactNode;\n  /** 입력 뒤쪽 아이콘 또는 텍스트 */\n  endAdornment?: React.ReactNode;\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(({\n  label,\n  error,\n  helper,\n  type = 'text',\n  size = 'md',\n  fullWidth = false,\n  startAdornment,\n  endAdornment,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  disabled = false,\n  required = false,\n  id,\n  ...props\n}, ref) => {\n  const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'h-8 px-2 text-sm',\n    md: 'h-10 px-3 text-sm',\n    lg: 'h-12 px-4 text-base'\n  };\n\n  // 기본 input 클래스\n  const baseInputClasses = `\n    w-full\n    font-sans\n    text-gray-900\n    bg-white\n    border\n    rounded-lg\n    transition-all\n    duration-200\n    focus:outline-none\n    focus:ring-2\n    focus:ring-blue-500/20\n    disabled:opacity-50\n    disabled:cursor-not-allowed\n    disabled:bg-gray-50\n  `;\n\n  // 상태별 테두리 색상\n  const borderClasses = error\n    ? 'border-red-500 focus:border-red-500'\n    : 'border-gray-300 focus:border-blue-500 hover:border-gray-400';\n\n  // input 클래스 조합\n  const inputClasses = `\n    ${baseInputClasses}\n    ${sizeClasses[size]}\n    ${borderClasses}\n    ${startAdornment ? 'pl-8' : ''}\n    ${endAdornment ? 'pr-8' : ''}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div className={`${fullWidth ? 'w-full' : 'w-auto'} ${containerClassName}`}>\n      {/* 라벨 */}\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={`\n            block\n            text-sm\n            font-medium\n            text-gray-700\n            mb-2\n            font-sans\n            ${required ? \"after:content-['*'] after:text-red-500 after:ml-1\" : ''}\n            ${disabled ? 'opacity-50' : ''}\n            ${labelClassName}\n          `.trim().replace(/\\s+/g, ' ')}\n        >\n          {label}\n        </label>\n      )}\n\n      {/* Input 컨테이너 */}\n      <div className=\"relative\">\n        {/* 시작 아이콘/텍스트 */}\n        {startAdornment && (\n          <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500 pointer-events-none\">\n            {startAdornment}\n          </div>\n        )}\n\n        {/* Input 요소 */}\n        <input\n          ref={ref}\n          id={inputId}\n          type={type}\n          disabled={disabled}\n          required={required}\n          className={inputClasses}\n          {...props}\n        />\n\n        {/* 끝 아이콘/텍스트 */}\n        {endAdornment && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500\">\n            {endAdornment}\n          </div>\n        )}\n      </div>\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nInput.displayName = 'Input';\n\nexport { Input };","// Select Component for @semicolon/community-core\n\nimport React, { forwardRef, useEffect, useRef, useState, useMemo } from 'react';\n\nexport interface SelectOption<T = any> {\n  id: string | number;\n  label: string;\n  value: T;\n  icon?: string;\n  description?: string;\n  disabled?: boolean;\n}\n\nexport interface SelectProps<T = any> {\n  /** 옵션 목록 */\n  options: SelectOption<T>[];\n  /** 선택된 값 */\n  value?: T;\n  /** 값 변경 시 호출되는 함수 */\n  onChange: (option: SelectOption<T>) => void;\n  /** 플레이스홀더 텍스트 */\n  placeholder?: string;\n  /** 비활성화 여부 */\n  disabled?: boolean;\n  /** 라벨 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 전체 너비 사용 여부 */\n  fullWidth?: boolean;\n  /** 다중 선택 지원 여부 */\n  multiple?: boolean;\n  /** 검색 기능 활성화 여부 */\n  searchable?: boolean;\n  /** 검색 플레이스홀더 */\n  searchPlaceholder?: string;\n  /** 아이콘 표시 여부 */\n  showIcon?: boolean;\n  /** 설명 표시 여부 */\n  showDescription?: boolean;\n  /** 드롭다운 최대 높이 */\n  maxHeight?: string;\n  /** 빈 결과 메시지 */\n  noOptionsText?: string;\n  /** 컨테이너 클래스 이름 */\n  className?: string;\n  /** 드롭다운 클래스 이름 */\n  dropdownClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n}\n\nconst Select = forwardRef<HTMLDivElement, SelectProps>(({\n  options,\n  value,\n  onChange,\n  placeholder = '선택해주세요',\n  disabled = false,\n  label,\n  error,\n  helper,\n  size = 'md',\n  fullWidth = true,\n  multiple = false,\n  searchable = false,\n  searchPlaceholder = '검색...',\n  showIcon = false,\n  showDescription = false,\n  maxHeight = '240px',\n  noOptionsText = '옵션이 없습니다',\n  className = '',\n  dropdownClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n}, ref) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const selectId = `select-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 선택된 옵션 찾기\n  const selectedOption = useMemo(() => {\n    if (multiple) return null;\n    return options.find(option => option.value === value);\n  }, [options, value, multiple]);\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'h-8 px-2 text-sm',\n    md: 'h-10 px-3 text-sm',\n    lg: 'h-12 px-4 text-base'\n  };\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n        setSearchTerm('');\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const handleOptionClick = (option: SelectOption) => {\n    if (option.disabled) return;\n    onChange(option);\n    if (!multiple) {\n      setIsOpen(false);\n      setSearchTerm('');\n    }\n  };\n\n  const toggleDropdown = () => {\n    if (!disabled) {\n      setIsOpen(!isOpen);\n      setSearchTerm('');\n    }\n  };\n\n  // 기본 select 클래스\n  const baseSelectClasses = `\n    w-full\n    font-sans\n    bg-white\n    border\n    rounded-lg\n    transition-all\n    duration-200\n    focus:outline-none\n    focus:ring-2\n    focus:ring-blue-500/20\n    disabled:opacity-50\n    disabled:cursor-not-allowed\n    disabled:bg-gray-50\n    flex\n    items-center\n    justify-between\n    cursor-pointer\n  `;\n\n  // 상태별 테두리 색상\n  const borderClasses = error\n    ? 'border-red-500 focus:border-red-500'\n    : 'border-gray-300 focus:border-blue-500 hover:border-gray-400';\n\n  // select 클래스 조합\n  const selectClasses = `\n    ${baseSelectClasses}\n    ${sizeClasses[size]}\n    ${borderClasses}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div\n      ref={ref}\n      className={`${fullWidth ? 'w-full' : 'w-auto'} relative`}\n    >\n      {/* 라벨 */}\n      {label && (\n        <label\n          htmlFor={selectId}\n          className={`\n            block\n            text-sm\n            font-medium\n            text-gray-700\n            mb-2\n            font-sans\n            ${disabled ? 'opacity-50' : ''}\n            ${labelClassName}\n          `.trim().replace(/\\s+/g, ' ')}\n        >\n          {label}\n        </label>\n      )}\n\n      {/* Select 버튼 */}\n      <div\n        ref={dropdownRef}\n        id={selectId}\n        role=\"button\"\n        tabIndex={disabled ? -1 : 0}\n        aria-expanded={isOpen}\n        aria-haspopup=\"listbox\"\n        onClick={toggleDropdown}\n        className={selectClasses}\n      >\n        <div className=\"flex items-center gap-2 flex-1 overflow-hidden\">\n          {selectedOption ? (\n            <span className=\"truncate text-gray-900\">{selectedOption.label}</span>\n          ) : (\n            <span className=\"text-gray-500 truncate\">{placeholder}</span>\n          )}\n        </div>\n\n        {/* 화살표 아이콘 */}\n        <svg\n          className={`w-4 h-4 text-gray-400 transition-transform duration-200 flex-shrink-0 ${\n            isOpen ? 'rotate-180' : ''\n          }`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </div>\n\n      {/* 드롭다운 */}\n      {isOpen && (\n        <div\n          className={`absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-lg shadow-lg z-50 overflow-hidden ${dropdownClassName}`}\n        >\n          {/* 옵션 목록 */}\n          <div\n            className=\"overflow-y-auto\"\n            style={{ maxHeight }}\n            role=\"listbox\"\n          >\n            {options.length === 0 ? (\n              <div className=\"px-3 py-8 text-center text-gray-500 text-sm\">\n                {noOptionsText}\n              </div>\n            ) : (\n              options.map(option => {\n                const isSelected = option.value === value;\n\n                return (\n                  <button\n                    key={option.id}\n                    type=\"button\"\n                    role=\"option\"\n                    aria-selected={isSelected}\n                    onClick={() => handleOptionClick(option)}\n                    disabled={option.disabled}\n                    className={`\n                      w-full px-3 py-2 text-left flex items-center gap-2 text-sm cursor-pointer\n                      transition-colors duration-150\n                      ${option.disabled\n                        ? 'opacity-50 cursor-not-allowed bg-gray-50'\n                        : isSelected\n                          ? 'bg-blue-50 text-blue-600'\n                          : 'hover:bg-gray-100 text-gray-900'\n                      }\n                      border-b border-gray-100 last:border-b-0\n                    `.trim().replace(/\\s+/g, ' ')}\n                  >\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"truncate\">{option.label}</div>\n                      {showDescription && option.description && (\n                        <div className=\"text-xs text-gray-500 mt-1 truncate\">\n                          {option.description}\n                        </div>\n                      )}\n                    </div>\n                  </button>\n                );\n              })\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nSelect.displayName = 'Select';\n\nexport { Select };","import React, { forwardRef } from 'react';\n\nexport interface CheckboxProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size' | 'onChange'> {\n  /** 체크 상태 */\n  checked?: boolean;\n  /** 값 변경 시 호출되는 함수 */\n  onChange?: (checked: boolean, event: React.ChangeEvent<HTMLInputElement>) => void;\n  /** 라벨 텍스트 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 중간 상태 (indeterminate) */\n  indeterminate?: boolean;\n  /** 라벨 위치 */\n  labelPosition?: 'left' | 'right';\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n}\n\nconst Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(({\n  checked = false,\n  onChange,\n  label,\n  error,\n  helper,\n  size = 'md',\n  indeterminate = false,\n  labelPosition = 'right',\n  disabled = false,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  id,\n  ...props\n}, ref) => {\n  const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(event.target.checked, event);\n  };\n\n  // 기본 checkbox 클래스\n  const baseCheckboxClasses = `\n    text-blue-600\n    bg-white\n    border-2\n    rounded\n    transition-all\n    duration-200\n    focus:outline-none\n    focus:ring-2\n    focus:ring-blue-500/20\n    focus:border-blue-500\n    disabled:opacity-50\n    disabled:cursor-not-allowed\n    disabled:bg-gray-50\n  `;\n\n  // 상태별 테두리 색상\n  const borderClasses = error\n    ? 'border-red-500'\n    : 'border-gray-300 hover:border-blue-500';\n\n  // checkbox 클래스 조합\n  const checkboxClasses = `\n    ${baseCheckboxClasses}\n    ${sizeClasses[size]}\n    ${borderClasses}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  const checkboxElement = (\n    <input\n      ref={ref}\n      id={checkboxId}\n      type=\"checkbox\"\n      checked={checked}\n      onChange={handleChange}\n      disabled={disabled}\n      className={checkboxClasses}\n      {...props}\n    />\n  );\n\n  const labelElement = label && (\n    <label\n      htmlFor={checkboxId}\n      className={`\n        text-gray-700\n        text-xs sm:text-sm\n        font-normal\n        font-sans\n        select-none\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n        ${labelClassName}\n      `.trim().replace(/\\s+/g, ' ')}\n    >\n      {label}\n    </label>\n  );\n\n  return (\n    <div className={containerClassName}>\n      {/* Checkbox와 라벨 */}\n      <div className={`flex items-center gap-2 ${labelPosition === 'left' ? 'flex-row-reverse' : ''}`}>\n        {checkboxElement}\n        {labelElement}\n      </div>\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nCheckbox.displayName = 'Checkbox';\n\nexport { Checkbox };","import React, { forwardRef } from 'react';\n\nexport interface RadioProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size' | 'onChange'> {\n  /** 체크 상태 */\n  checked?: boolean;\n  /** 값 변경 시 호출되는 함수 */\n  onChange?: (value: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n  /** Radio 그룹명 */\n  name: string;\n  /** Radio 값 */\n  value: string;\n  /** 라벨 텍스트 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 라벨 위치 */\n  labelPosition?: 'left' | 'right';\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n  /** 자식 요소 (라벨 대신 사용) */\n  children?: React.ReactNode;\n}\n\nconst Radio = forwardRef<HTMLInputElement, RadioProps>(({\n  checked = false,\n  onChange,\n  name,\n  value,\n  label,\n  error,\n  helper,\n  size = 'md',\n  labelPosition = 'right',\n  disabled = false,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  children,\n  id,\n  ...props\n}, ref) => {\n  const radioId = id || `radio-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  const dotSizeClasses = {\n    sm: 'w-1.5 h-1.5',\n    md: 'w-2.5 h-2.5',\n    lg: 'w-3 h-3'\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(event.target.value, event);\n  };\n\n  // 라벨 텍스트 결정\n  const labelText = children || label;\n\n  const radioElement = (\n    <div className=\"relative inline-flex items-center\">\n      <input\n        ref={ref}\n        id={radioId}\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={handleChange}\n        disabled={disabled}\n        className=\"sr-only\"\n        {...props}\n      />\n      <span\n        className={`\n          flex-shrink-0 rounded-full flex items-center justify-center\n          border-2 transition-all duration-200\n          ${sizeClasses[size]}\n          ${checked\n            ? error\n              ? 'border-red-500 bg-red-500'\n              : 'border-blue-600 bg-blue-600'\n            : error\n              ? 'border-red-500'\n              : 'border-gray-300 hover:border-blue-600'\n          }\n          ${disabled\n            ? 'opacity-50 cursor-not-allowed'\n            : 'cursor-pointer'\n          }\n          ${className}\n        `.trim().replace(/\\s+/g, ' ')}\n      >\n        <span\n          className={`\n            rounded-full transition-all duration-200 bg-white\n            ${dotSizeClasses[size]}\n            ${checked ? 'opacity-100 scale-100' : 'opacity-0 scale-50'}\n          `.trim().replace(/\\s+/g, ' ')}\n        />\n      </span>\n    </div>\n  );\n\n  const labelElement = labelText && (\n    <label\n      htmlFor={radioId}\n      className={`\n        text-gray-700\n        text-xs sm:text-sm\n        font-normal\n        font-sans\n        whitespace-nowrap\n        select-none\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n        ${labelClassName}\n      `.trim().replace(/\\s+/g, ' ')}\n    >\n      {labelText}\n    </label>\n  );\n\n  return (\n    <div className={containerClassName}>\n      {/* Radio와 라벨 */}\n      <div className={`inline-flex items-center gap-2 ${labelPosition === 'left' ? 'flex-row-reverse' : ''}`}>\n        {radioElement}\n        {labelElement}\n      </div>\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nRadio.displayName = 'Radio';\n\nexport { Radio };","import React, { forwardRef } from 'react';\n\nexport interface SwitchProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size' | 'onChange'> {\n  /** 활성화 상태 */\n  checked?: boolean;\n  /** 값 변경 시 호출되는 함수 */\n  onChange?: (checked: boolean, event: React.ChangeEvent<HTMLInputElement>) => void;\n  /** 라벨 텍스트 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 라벨 위치 */\n  labelPosition?: 'left' | 'right';\n  /** 활성화 시 표시할 텍스트 */\n  onText?: string;\n  /** 비활성화 시 표시할 텍스트 */\n  offText?: string;\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n}\n\nconst Switch = forwardRef<HTMLInputElement, SwitchProps>(({\n  checked = false,\n  onChange,\n  label,\n  error,\n  helper,\n  size = 'md',\n  labelPosition = 'right',\n  onText,\n  offText,\n  disabled = false,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  id,\n  ...props\n}, ref) => {\n  const switchId = id || `switch-${Math.random().toString(36).substr(2, 9)}`;\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: {\n      track: 'w-8 h-4',\n      thumb: 'w-3 h-3',\n      translate: 'translate-x-4',\n      text: 'text-xs px-1'\n    },\n    md: {\n      track: 'w-10 h-5',\n      thumb: 'w-4 h-4',\n      translate: 'translate-x-5',\n      text: 'text-xs px-1.5'\n    },\n    lg: {\n      track: 'w-12 h-6',\n      thumb: 'w-5 h-5',\n      translate: 'translate-x-6',\n      text: 'text-sm px-2'\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(event.target.checked, event);\n  };\n\n  const currentSize = sizeClasses[size];\n\n  // track 클래스\n  const trackClasses = `\n    relative inline-flex items-center\n    ${currentSize.track}\n    rounded-full\n    transition-colors duration-200 ease-in-out\n    focus-within:outline-none\n    focus-within:ring-2\n    focus-within:ring-blue-500/20\n    ${checked\n      ? error\n        ? 'bg-red-500'\n        : 'bg-blue-600'\n      : error\n        ? 'bg-red-200'\n        : 'bg-gray-300'\n    }\n    ${disabled\n      ? 'opacity-50 cursor-not-allowed'\n      : 'cursor-pointer'\n    }\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  // thumb 클래스\n  const thumbClasses = `\n    inline-block\n    ${currentSize.thumb}\n    bg-white\n    rounded-full\n    shadow\n    transform\n    transition-transform duration-200 ease-in-out\n    ${checked ? currentSize.translate : 'translate-x-0.5'}\n  `.trim().replace(/\\s+/g, ' ');\n\n  const switchElement = (\n    <div className=\"relative inline-flex\">\n      <input\n        ref={ref}\n        id={switchId}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={handleChange}\n        disabled={disabled}\n        className=\"sr-only\"\n        {...props}\n      />\n      <label\n        htmlFor={switchId}\n        className={trackClasses}\n      >\n        {/* 상태 텍스트 (선택사항) */}\n        {(onText || offText) && (\n          <span className={`\n            absolute inset-0 flex items-center justify-center\n            font-sans font-medium text-white\n            ${currentSize.text}\n            pointer-events-none\n          `}>\n            {checked ? onText : offText}\n          </span>\n        )}\n\n        {/* Thumb */}\n        <span className={thumbClasses} />\n      </label>\n    </div>\n  );\n\n  const labelElement = label && (\n    <label\n      htmlFor={switchId}\n      className={`\n        text-gray-700\n        text-xs sm:text-sm\n        font-normal\n        font-sans\n        select-none\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n        ${labelClassName}\n      `.trim().replace(/\\s+/g, ' ')}\n    >\n      {label}\n    </label>\n  );\n\n  return (\n    <div className={containerClassName}>\n      {/* Switch와 라벨 */}\n      <div className={`inline-flex items-center gap-3 ${labelPosition === 'left' ? 'flex-row-reverse' : ''}`}>\n        {switchElement}\n        {labelElement}\n      </div>\n\n      {/* 에러 메시지 */}\n      {error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-red-500\n          font-sans\n          ${errorClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {error}\n        </p>\n      )}\n\n      {/* 도움말 텍스트 */}\n      {helper && !error && (\n        <p className={`\n          mt-2\n          text-sm\n          text-gray-500\n          font-sans\n          ${helperClassName}\n        `.trim().replace(/\\s+/g, ' ')}>\n          {helper}\n        </p>\n      )}\n    </div>\n  );\n});\n\nSwitch.displayName = 'Switch';\n\nexport { Switch };","import React, { forwardRef, useState, useCallback } from 'react';\n\nexport interface TextAreaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  /** TextArea 라벨 */\n  label?: string;\n  /** 에러 메시지 */\n  error?: string;\n  /** 도움말 텍스트 */\n  helper?: string;\n  /** 크기 variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** 전체 너비 사용 여부 */\n  fullWidth?: boolean;\n  /** 자동 리사이징 활성화 */\n  autoResize?: boolean;\n  /** 최소 높이 */\n  minHeight?: number;\n  /** 최대 높이 */\n  maxHeight?: number;\n  /** 글자 수 제한 */\n  maxLength?: number;\n  /** 글자 수 표시 여부 */\n  showCount?: boolean;\n  /** 컨테이너 클래스 이름 */\n  containerClassName?: string;\n  /** 라벨 클래스 이름 */\n  labelClassName?: string;\n  /** 에러 텍스트 클래스 이름 */\n  errorClassName?: string;\n  /** 도움말 텍스트 클래스 이름 */\n  helperClassName?: string;\n  /** 글자 수 카운터 클래스 이름 */\n  countClassName?: string;\n}\n\nconst TextArea = forwardRef<HTMLTextAreaElement, TextAreaProps>(({\n  label,\n  error,\n  helper,\n  size = 'md',\n  fullWidth = false,\n  autoResize = false,\n  minHeight = 80,\n  maxHeight = 300,\n  maxLength,\n  showCount = false,\n  disabled = false,\n  required = false,\n  className = '',\n  containerClassName = '',\n  labelClassName = '',\n  errorClassName = '',\n  helperClassName = '',\n  countClassName = '',\n  value,\n  onChange,\n  id,\n  ...props\n}, ref) => {\n  const textareaId = id || `textarea-${Math.random().toString(36).substr(2, 9)}`;\n  const [textareaHeight, setTextareaHeight] = useState<number>(minHeight);\n\n  // 크기별 클래스 정의\n  const sizeClasses = {\n    sm: 'px-2 py-1.5 text-sm',\n    md: 'px-3 py-2 text-sm',\n    lg: 'px-4 py-3 text-base'\n  };\n\n  // 자동 리사이징 핸들러\n  const handleAutoResize = useCallback((element: HTMLTextAreaElement) => {\n    if (!autoResize) return;\n\n    // 높이 초기화\n    element.style.height = 'auto';\n\n    // 스크롤 높이 계산\n    const scrollHeight = element.scrollHeight;\n    const newHeight = Math.min(Math.max(scrollHeight, minHeight), maxHeight);\n\n    setTextareaHeight(newHeight);\n    element.style.height = `${newHeight}px`;\n  }, [autoResize, minHeight, maxHeight]);\n\n  // 값 변경 핸들러\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    // 최대 길이 체크\n    if (maxLength && event.target.value.length > maxLength) {\n      return;\n    }\n\n    onChange?.(event);\n\n    // 자동 리사이징\n    if (autoResize) {\n      handleAutoResize(event.target);\n    }\n  };\n\n  // 기본 textarea 클래스\n  const baseTextareaClasses = `\n    w-full\n    font-sans\n    text-gray-900\n    bg-white\n    border\n    rounded-lg\n    transition-all\n    duration-200\n    focus:outline-none\n    focus:ring-2\n    focus:ring-blue-500/20\n    disabled:opacity-50\n    disabled:cursor-not-allowed\n    disabled:bg-gray-50\n    resize-none\n  `;\n\n  // 상태별 테두리 색상\n  const borderClasses = error\n    ? 'border-red-500 focus:border-red-500'\n    : 'border-gray-300 focus:border-blue-500 hover:border-gray-400';\n\n  // textarea 클래스 조합\n  const textareaClasses = `\n    ${baseTextareaClasses}\n    ${sizeClasses[size]}\n    ${borderClasses}\n    ${autoResize ? 'resize-none' : 'resize-y'}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  // 현재 글자 수 계산\n  const currentLength = typeof value === 'string' ? value.length : 0;\n  const isOverLimit = maxLength ? currentLength > maxLength : false;\n\n  return (\n    <div className={`${fullWidth ? 'w-full' : 'w-auto'} ${containerClassName}`}>\n      {/* 라벨 및 글자 수 표시 */}\n      <div className=\"flex justify-between items-center mb-2\">\n        {/* 라벨 */}\n        {label && (\n          <label\n            htmlFor={textareaId}\n            className={`\n              block\n              text-sm\n              font-medium\n              text-gray-700\n              font-sans\n              ${required ? \"after:content-['*'] after:text-red-500 after:ml-1\" : ''}\n              ${disabled ? 'opacity-50' : ''}\n              ${labelClassName}\n            `.trim().replace(/\\s+/g, ' ')}\n          >\n            {label}\n          </label>\n        )}\n\n        {/* 글자 수 표시 */}\n        {showCount && (maxLength || currentLength > 0) && (\n          <span className={`\n            text-sm\n            font-sans\n            ${isOverLimit\n              ? 'text-red-500'\n              : currentLength / (maxLength || 100) > 0.8\n                ? 'text-orange-500'\n                : 'text-gray-500'\n            }\n            ${countClassName}\n          `.trim().replace(/\\s+/g, ' ')}>\n            {currentLength}{maxLength && `/${maxLength}`}\n          </span>\n        )}\n      </div>\n\n      {/* TextArea 요소 */}\n      <textarea\n        ref={ref}\n        id={textareaId}\n        value={value}\n        onChange={handleChange}\n        disabled={disabled}\n        required={required}\n        maxLength={maxLength}\n        className={textareaClasses}\n        style={autoResize ? { height: textareaHeight, minHeight, maxHeight } : { minHeight }}\n        {...props}\n      />\n\n      {/* 하단 메시지 영역 */}\n      <div className=\"flex justify-between items-start mt-2\">\n        {/* 에러 메시지 또는 도움말 텍스트 */}\n        <div className=\"flex-1\">\n          {error && (\n            <p className={`\n              text-sm\n              text-red-500\n              font-sans\n              ${errorClassName}\n            `.trim().replace(/\\s+/g, ' ')}>\n              {error}\n            </p>\n          )}\n\n          {helper && !error && (\n            <p className={`\n              text-sm\n              text-gray-500\n              font-sans\n              ${helperClassName}\n            `.trim().replace(/\\s+/g, ' ')}>\n              {helper}\n            </p>\n          )}\n        </div>\n\n        {/* 하단 글자 수 표시 (상단에 없을 때만) */}\n        {showCount && !label && (maxLength || currentLength > 0) && (\n          <span className={`\n            text-sm\n            font-sans\n            ml-2\n            flex-shrink-0\n            ${isOverLimit\n              ? 'text-red-500'\n              : currentLength / (maxLength || 100) > 0.8\n                ? 'text-orange-500'\n                : 'text-gray-500'\n            }\n            ${countClassName}\n          `.trim().replace(/\\s+/g, ' ')}>\n            {currentLength}{maxLength && `/${maxLength}`}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n});\n\nTextArea.displayName = 'TextArea';\n\nexport { TextArea };","'use client';\n\nimport React from 'react';\n\nexport interface SkeletonProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** 스켈레톤 종류 */\n  variant?: 'rectangular' | 'circular' | 'rounded' | 'text';\n  /** 너비 (CSS 단위) */\n  width?: string | number;\n  /** 높이 (CSS 단위) */\n  height?: string | number;\n  /** 애니메이션 사용 여부 */\n  animated?: boolean;\n  /** 밝은 테마 사용 여부 */\n  light?: boolean;\n}\n\nfunction Skeleton({\n  variant = 'rectangular',\n  width,\n  height,\n  animated = true,\n  light = false,\n  className = '',\n  style,\n  ...props\n}: SkeletonProps) {\n  // variant별 기본 스타일\n  const variantClasses = {\n    rectangular: 'rounded-md',\n    circular: 'rounded-full',\n    rounded: 'rounded-lg',\n    text: 'rounded-sm'\n  };\n\n  // 기본 크기 설정 (variant별)\n  const getDefaultStyles = (variant: string): React.CSSProperties => {\n    switch (variant) {\n      case 'rectangular':\n        return { width: width || '100%', height: height || '1.2rem' };\n      case 'circular':\n        return { width: width || '2.5rem', height: height || width || '2.5rem' };\n      case 'rounded':\n        return { width: width || '100%', height: height || '1.5rem' };\n      case 'text':\n        return { width: width || '100%', height: height || '1rem' };\n      default:\n        return { width: width || '100%', height: height || '1.2rem' };\n    }\n  };\n\n  // 배경색 (라이트/다크)\n  const backgroundClass = light \n    ? 'bg-gray-100'\n    : 'bg-gray-200 dark:bg-gray-700';\n\n  // 스타일 조합\n  const combinedStyle: React.CSSProperties = {\n    ...getDefaultStyles(variant),\n    ...style\n  };\n\n  return (\n    <div\n      className={`\n        ${backgroundClass}\n        ${variantClasses[variant]}\n        ${animated ? 'animate-pulse' : ''}\n        ${className}\n      `.trim().replace(/\\s+/g, ' ')}\n      style={combinedStyle}\n      {...props}\n    />\n  );\n}\n\n// 미리 정의된 스켈레톤 컴포넌트들\nconst SkeletonText = ({ lines = 3, className = '', ...props }: { lines?: number } & SkeletonProps) => (\n  <div className={`space-y-2 ${className}`} {...props}>\n    {Array.from({ length: lines }).map((_, index) => (\n      <Skeleton \n        key={index} \n        variant=\"text\" \n        width={index === lines - 1 ? '75%' : '100%'}\n        height=\"0.875rem\"\n      />\n    ))}\n  </div>\n);\n\nconst SkeletonAvatar = ({ size = 'md', ...props }: { size?: 'sm' | 'md' | 'lg' | 'xl' } & SkeletonProps) => {\n  const sizes = {\n    sm: '2rem',\n    md: '2.5rem',\n    lg: '3rem',\n    xl: '4rem'\n  };\n\n  return (\n    <Skeleton \n      variant=\"circular\" \n      width={sizes[size]} \n      height={sizes[size]}\n      {...props}\n    />\n  );\n};\n\nconst SkeletonButton = ({ variant: buttonVariant = 'md', ...props }: { variant?: 'sm' | 'md' | 'lg' } & SkeletonProps) => {\n  const getButtonSize = (size: string) => {\n    switch (size) {\n      case 'sm':\n        return { width: '4rem', height: '2rem' };\n      case 'lg':\n        return { width: '8rem', height: '3rem' };\n      default:\n        return { width: '6rem', height: '2.5rem' };\n    }\n  };\n\n  const buttonSize = getButtonSize(buttonVariant);\n\n  return (\n    <Skeleton \n      variant=\"rounded\"\n      width={buttonSize.width}\n      height={buttonSize.height}\n      {...props}\n    />\n  );\n};\n\nconst SkeletonCard = ({ ...props }: SkeletonProps) => (\n  <div className=\"p-4 border border-gray-200 rounded-lg space-y-4\" {...props}>\n    <div className=\"flex items-center space-x-3\">\n      <SkeletonAvatar size=\"md\" />\n      <div className=\"flex-1 space-y-2\">\n        <Skeleton variant=\"text\" width=\"60%\" />\n        <Skeleton variant=\"text\" width=\"40%\" />\n      </div>\n    </div>\n    <SkeletonText lines={3} />\n    <div className=\"flex space-x-2\">\n      <SkeletonButton variant=\"sm\" />\n      <SkeletonButton variant=\"sm\" />\n    </div>\n  </div>\n);\n\nexport { \n  Skeleton,\n  SkeletonText,\n  SkeletonAvatar,\n  SkeletonButton,\n  SkeletonCard\n}; \n","// import useAuthStore from \"@stores/AuthStore\";\nimport axios, { InternalAxiosRequestConfig } from 'axios';\n\nconst baseURL = process.env.NEXT_PUBLIC_API_URL;\n\n// axios 설정 타입 확장\ninterface CustomAxiosRequestConfig extends InternalAxiosRequestConfig {\n  metadata?: {\n    skipLoader?: boolean;\n    loaderText?: string;\n    useMiniLoader?: boolean; // 작은 로더 사용 여부\n  };\n}\n\n// 토큰은 시큐어 쿠키에 저장되어있다고 가정하여 withCredentials 옵션을 추가함\nexport const axiosInstance = axios.create({\n  baseURL,\n  timeout: 60 * 60 * 1000,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n  withCredentials: true,\n});\n\n// API 로딩 상태 관리를 위한 글로벌 함수들\nlet globalShowLoader: ((text?: string) => void) | null = null;\nlet globalHideLoader: (() => void) | null = null;\nlet globalSetLoaderText: ((text: string) => void) | null = null;\nlet globalShowMiniLoader: ((text?: string) => void) | null = null;\nlet globalHideMiniLoader: (() => void) | null = null;\nlet globalSetMiniLoaderText: ((text: string) => void) | null = null;\nlet activeRequestsCount = 0;\nlet activeMiniRequestsCount = 0;\n\n// 로더 함수들을 설정하는 함수 (클라이언트 사이드에서 호출)\nexport const setGlobalLoaderFunctions = (\n  showLoader: (text?: string) => void,\n  hideLoader: () => void,\n  setLoaderText: (text: string) => void,\n  showMiniLoader?: (text?: string) => void,\n  hideMiniLoader?: () => void,\n  setMiniLoaderText?: (text: string) => void\n) => {\n  globalShowLoader = showLoader;\n  globalHideLoader = hideLoader;\n  globalSetLoaderText = setLoaderText;\n  globalShowMiniLoader = showMiniLoader || null;\n  globalHideMiniLoader = hideMiniLoader || null;\n  globalSetMiniLoaderText = setMiniLoaderText || null;\n};\n\n// 요청 인터셉터 추가 - FormData 감지 및 로더 표시 + Authorization 헤더 추가\naxiosInstance.interceptors.request.use(async (config: CustomAxiosRequestConfig) => {\n  // API 로더 비활성화 옵션이 없는 경우에만 로더 표시\n  if (!config.metadata?.skipLoader) {\n    const useMiniLoader = config.metadata?.useMiniLoader;\n    const loaderText = config.metadata?.loaderText || (useMiniLoader ? '처리중...' : '요청중입니다..');\n    \n    if (useMiniLoader && globalShowMiniLoader) {\n      // 작은 로더 사용\n      if (activeMiniRequestsCount === 0) {\n        globalShowMiniLoader(loaderText);\n      }\n      activeMiniRequestsCount++;\n    } else if (!useMiniLoader && globalShowLoader) {\n      // 전체 화면 로더 사용\n      if (activeRequestsCount === 0) {\n        globalShowLoader(loaderText);\n      }\n      activeRequestsCount++;\n    }\n  }\n\n  // FormData인 경우 Content-Type 헤더를 삭제하여 브라우저가 자동으로 설정하도록 함\n  if (config.data instanceof FormData) {\n    if (config.headers) {\n      delete config.headers['Content-Type'];\n    }\n  }\n\n  // 클라이언트 사이드에서 토큰 유효성 검증 후 Authorization 헤더에 추가\n  if (typeof window !== 'undefined') {\n    try {\n      // 쿠키에서 세션 정보 읽기\n      const sessionCookie = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('sb-access-token='))\n        ?.split('=')[1];\n\n      if (sessionCookie) {\n        // URL 디코딩 후 JSON 파싱\n        const decodedSession = decodeURIComponent(sessionCookie);\n        const sessionData = JSON.parse(decodedSession);\n\n        // access_token 추출\n        const accessToken = sessionData?.access_token;\n\n        if (accessToken) {\n          // 토큰 만료 검증 (동적 import로 순환 참조 방지)\n          const { decodeJWTPayload, isTokenExpired, removeExpiredTokenFromCookie } = await import('../utils/jwtUtil');\n          const payload = decodeJWTPayload(accessToken);\n          \n          if (payload && !isTokenExpired(payload)) {\n            // 유효한 토큰인 경우에만 헤더 설정\n            if (config.headers) {\n              config.headers.Authorization = `Bearer ${accessToken}`;\n            }\n          } else {\n            // 만료되거나 유효하지 않은 토큰 제거\n            console.log('🗑️ axios 인터셉터: 만료된 토큰 감지, 쿠키에서 제거');\n            removeExpiredTokenFromCookie();\n          }\n        }\n      }\n    } catch (error) {\n      // 에러 발생 시 만료된 토큰 정리 (안전장치)\n      try {\n        const { removeExpiredTokenFromCookie } = await import('../utils/jwtUtil');\n        removeExpiredTokenFromCookie();\n      } catch (importError) {\n        console.error('JWT 유틸리티 import 실패:', importError);\n      }\n    }\n  }\n\n  return config;\n});\n\n// 응답 인터셉터 - 로더 숨김 및 에러 처리\naxiosInstance.interceptors.response.use(\n  async response => {\n    // 로더 카운트 감소 및 숨김\n    const config = response.config as CustomAxiosRequestConfig;\n    if (!config.metadata?.skipLoader) {\n      const useMiniLoader = config.metadata?.useMiniLoader;\n      \n      if (useMiniLoader && globalHideMiniLoader) {\n        // 작은 로더 숨김\n        activeMiniRequestsCount = Math.max(0, activeMiniRequestsCount - 1);\n        if (activeMiniRequestsCount === 0) {\n          globalHideMiniLoader();\n        }\n      } else if (!useMiniLoader && globalHideLoader) {\n        // 전체 화면 로더 숨김\n        activeRequestsCount = Math.max(0, activeRequestsCount - 1);\n        if (activeRequestsCount === 0) {\n          globalHideLoader();\n        }\n      }\n    }\n\n    // 응답 성공이지만 인증 관련 에러인 경우 체크 (successOrNot: \"N\"인 경우)\n    if (response.data?.successOrNot === 'N') {\n      const statusCode = response.data?.statusCode;\n      const errorMessage = response.data?.message || response.data?.data;\n\n      // 서버에서 명확한 인증 관련 에러를 반환한 경우만 처리\n      if (\n        statusCode === 'FORBIDDEN' &&\n        typeof errorMessage === 'string' &&\n        (errorMessage.includes('해당 게시글에 접근하려면 로그인이 필요') ||\n          errorMessage.includes('로그인이 필요한 게시글') ||\n          errorMessage.includes('로그인이 필요한 게시판'))\n      ) {\n        // 실제 세션 상태를 확인 후 이벤트 발생\n        const { clientSupabase } = await import('./Supabase/client');\n        const {\n          data: { session },\n        } = await clientSupabase.auth.getSession();\n\n        if (!session || !session.access_token) {\n          // 세션이 정말 없는 경우에만 이벤트 발생\n          const event = new CustomEvent('auth-error', {\n            detail: {\n              type: 'AUTH_REQUIRED',\n              message: errorMessage,\n            },\n          });\n          window.dispatchEvent(event);\n        }\n      }\n    }\n\n    return response;\n  },\n  async error => {\n    // 에러 시에도 로더 숨김\n    const config = error.config as CustomAxiosRequestConfig;\n    if (!config?.metadata?.skipLoader) {\n      const useMiniLoader = config?.metadata?.useMiniLoader;\n      \n      if (useMiniLoader && globalHideMiniLoader) {\n        // 작은 로더 숨김\n        activeMiniRequestsCount = Math.max(0, activeMiniRequestsCount - 1);\n        if (activeMiniRequestsCount === 0) {\n          globalHideMiniLoader();\n        }\n      } else if (!useMiniLoader && globalHideLoader) {\n        // 전체 화면 로더 숨김\n        activeRequestsCount = Math.max(0, activeRequestsCount - 1);\n        if (activeRequestsCount === 0) {\n          globalHideLoader();\n        }\n      }\n    }\n\n    // 401/403 에러 시 토큰 갱신 후 재요청 시도\n    if (\n      (error.response?.status === 401 || error.response?.status === 403) &&\n      !error.config._retried\n    ) {\n      try {\n        console.log('🔄 axios: 401/403 에러 감지, 토큰 갱신 시도');\n\n        // 클라이언트 수파베이스 세션 확인 및 갱신\n        const { clientSupabase } = await import('./Supabase/client');\n        const {\n          data: { session },\n          error: sessionError,\n        } = await clientSupabase.auth.getSession();\n\n        if (sessionError || !session) {\n          console.error('❌ axios: 세션 확인 실패 또는 세션 없음');\n          throw new Error('세션이 유효하지 않습니다.');\n        }\n\n        // 토큰 갱신 시도\n        const { data: refreshData, error: refreshError } =\n          await clientSupabase.auth.refreshSession();\n\n        if (refreshError || !refreshData.session) {\n          console.error('❌ axios: 토큰 갱신 실패');\n          throw new Error('토큰 갱신에 실패했습니다.');\n        }\n\n        console.log('✅ axios: 토큰 갱신 성공');\n\n        // 갱신된 토큰으로 원래 요청 재시도\n        const originalConfig = error.config;\n        originalConfig._retried = true; // 무한 루프 방지\n        originalConfig.headers.Authorization = `Bearer ${refreshData.session.access_token}`;\n\n        console.log('🔄 axios: 갱신된 토큰으로 요청 재시도');\n        return axiosInstance(originalConfig);\n      } catch (refreshError) {\n        console.error('❌ axios: 토큰 갱신 과정에서 오류:', refreshError);\n\n        // 갱신 실패 시 로그아웃 처리\n        const { clientSupabase } = await import('./Supabase/client');\n        await clientSupabase.auth.signOut();\n\n        const event = new CustomEvent('auth-error', {\n          detail: { type: 'TOKEN_INVALID' },\n        });\n        window.dispatchEvent(event);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// 로더 텍스트를 동적으로 변경하는 함수\nexport const setApiLoaderText = (text: string) => {\n  if (globalSetLoaderText) {\n    globalSetLoaderText(text);\n  }\n};\n\n// 커스텀 로더 텍스트로 API 요청을 수행하는 헬퍼 함수\nexport const apiWithCustomLoader = <T = any>(\n  apiCall: () => Promise<T>,\n  loaderText: string\n): Promise<T> => {\n  // 요청 전에 로더 텍스트 설정\n  setApiLoaderText(loaderText);\n  return apiCall();\n};\n\nexport default axiosInstance;\n","import { ReactNode } from 'react';\n\nexport interface OnlyChildrenProps {\n  children: ReactNode;\n}\n\nexport interface UserInfo {\n  name: string;\n  email?: string;\n  profileImg?: string;\n}\n\nexport enum CommonConstants {\n  SESSION_NAME = 'SESSION_NAME', // 성공\n  YES_FLAG = 'Y', // 예\n  NO_FLAG = 'N', // 아니오\n  NA = 'NA', // 미지정\n}\n\nexport enum CommonStatus {\n  SUCCESS = 200, // 성공\n  BAD_REQUEST = 400, // 잘못된 요청\n  FAIL = 400, // 실패\n  UNAUTHORIZED = 401, // 인증 오류\n  FORBIDDEN = 403, // 권한 오류\n  NOT_FOUND = 404, // 존재하지 않음\n  INTERNAL_SERVER_ERROR = 500, // 서버 오류\n  BAD_GATEWAY = 502, // 게이트웨이 오류\n  SERVICE_UNAVAILABLE = 503, // 서비스 불가\n  GATEWAY_TIMEOUT = 504, // 게이트웨이 타임아웃\n}\n\nexport interface CommonResponse<T> {\n  successOrNot: string;\n  statusCode: CommonStatus;\n  status?: number;\n  message?: string;\n  data: T | null;\n}\n\nexport interface LevelInfo {\n  level: number;\n  required_points: number;\n}\n\nexport interface Pagination {\n  currentPage: number;\n  totalPages: number;\n  totalItems: number;\n  itemsPerPage: number;\n  hasNextPage: boolean;\n  hasPrevPage: boolean;\n}\n","import axiosInstance from \"../config/axios\";\nimport { CommonResponse, CommonStatus } from \"../types/common\";\nimport { AxiosResponse, AxiosError } from \"axios\";\n\n/**\n * HTTP Method types for API requests\n */\nexport type HttpMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\n\n/**\n * Request options for API calls\n */\nexport interface RequestOptions {\n  headers?: Record<string, string>;\n  params?: Record<string, any>;\n  timeout?: number;\n  skipLoader?: boolean;\n  useMiniLoader?: boolean;\n  loaderText?: string;\n}\n\n/**\n * Base API Service Class\n * Provides standardized HTTP methods with global loading indicator integration\n * and consistent error handling following CommonResponse<T> pattern\n */\nexport class BaseService<T = any> {\n  protected baseUrl: string;\n  protected defaultHeaders: Record<string, string>;\n\n  constructor(baseUrl: string = '', defaultHeaders: Record<string, string> = {}) {\n    this.baseUrl = baseUrl;\n    this.defaultHeaders = {\n      'Content-Type': 'application/json',\n      ...defaultHeaders,\n    };\n  }\n\n  /**\n   * Handle API errors and transform them to CommonResponse format\n   */\n  protected handleError<R>(error: any): CommonResponse<R> {\n    if (error instanceof AxiosError) {\n      const status = error.response?.status || CommonStatus.INTERNAL_SERVER_ERROR;\n      const message = error.response?.data?.message || error.message || 'An error occurred';\n      \n      return {\n        successOrNot: 'N',\n        statusCode: status,\n        message,\n        data: null,\n      };\n    }\n\n    return {\n      successOrNot: 'N',\n      statusCode: CommonStatus.INTERNAL_SERVER_ERROR,\n      message: error.message || 'Unknown error occurred',\n      data: null,\n    };\n  }\n\n  /**\n   * Build complete endpoint URL\n   */\n  protected buildUrl(endpoint: string): string {\n    if (endpoint.startsWith('http')) {\n      return endpoint;\n    }\n    return `${this.baseUrl}${endpoint.startsWith('/') ? endpoint : `/${endpoint}`}`;\n  }\n\n  /**\n   * Prepare request config with options\n   */\n  protected prepareConfig(options?: RequestOptions) {\n    const config: any = {\n      headers: {\n        ...this.defaultHeaders,\n        ...options?.headers,\n      },\n      params: options?.params,\n      timeout: options?.timeout,\n    };\n\n    // Add metadata for loader control\n    if (options?.skipLoader || options?.useMiniLoader || options?.loaderText) {\n      config.metadata = {\n        skipLoader: options.skipLoader,\n        useMiniLoader: options.useMiniLoader,\n        loaderText: options.loaderText,\n      };\n    }\n\n    return config;\n  }\n\n  // Standard HTTP methods with global loader\n  public async get<R = T>(endpoint: string, options?: RequestOptions): Promise<CommonResponse<R>> {\n    try {\n      const url = this.buildUrl(endpoint);\n      const config = this.prepareConfig(options);\n      \n      const response: AxiosResponse<CommonResponse<R>> = await axiosInstance.get(url, config);\n      return response.data;\n    } catch (error) {\n      return this.handleError<R>(error);\n    }\n  }\n\n  public async post<R = T, D = any>(\n    endpoint: string, \n    data?: D, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    try {\n      const url = this.buildUrl(endpoint);\n      const config = this.prepareConfig(options);\n      \n      const response: AxiosResponse<CommonResponse<R>> = await axiosInstance.post(url, data, config);\n      return response.data;\n    } catch (error) {\n      return this.handleError<R>(error);\n    }\n  }\n\n  public async put<R = T, D = any>(\n    endpoint: string, \n    data: D, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    try {\n      const url = this.buildUrl(endpoint);\n      const config = this.prepareConfig(options);\n      \n      const response: AxiosResponse<CommonResponse<R>> = await axiosInstance.put(url, data, config);\n      return response.data;\n    } catch (error) {\n      return this.handleError<R>(error);\n    }\n  }\n\n  public async patch<R = T, D = any>(\n    endpoint: string, \n    data: D, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    try {\n      const url = this.buildUrl(endpoint);\n      const config = this.prepareConfig(options);\n      \n      const response: AxiosResponse<CommonResponse<R>> = await axiosInstance.patch(url, data, config);\n      return response.data;\n    } catch (error) {\n      return this.handleError<R>(error);\n    }\n  }\n\n  public async delete<R = T>(endpoint: string, options?: RequestOptions): Promise<CommonResponse<R>> {\n    try {\n      const url = this.buildUrl(endpoint);\n      const config = this.prepareConfig(options);\n      \n      const response: AxiosResponse<CommonResponse<R>> = await axiosInstance.delete(url, config);\n      return response.data;\n    } catch (error) {\n      return this.handleError<R>(error);\n    }\n  }\n\n  // Silent methods (bypass global loader)\n  public async getSilent<R = T>(endpoint: string, options?: RequestOptions): Promise<CommonResponse<R>> {\n    return this.get<R>(endpoint, { ...options, skipLoader: true });\n  }\n\n  public async postSilent<R = T, D = any>(\n    endpoint: string, \n    data?: D, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    return this.post<R, D>(endpoint, data, { ...options, skipLoader: true });\n  }\n\n  public async putSilent<R = T, D = any>(\n    endpoint: string, \n    data: D, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    return this.put<R, D>(endpoint, data, { ...options, skipLoader: true });\n  }\n\n  public async patchSilent<R = T, D = any>(\n    endpoint: string, \n    data: D, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    return this.patch<R, D>(endpoint, data, { ...options, skipLoader: true });\n  }\n\n  public async deleteSilent<R = T>(endpoint: string, options?: RequestOptions): Promise<CommonResponse<R>> {\n    return this.delete<R>(endpoint, { ...options, skipLoader: true });\n  }\n\n  // Mini loader methods (use mini loader instead of global loader)\n  public async getMini<R = T>(\n    endpoint: string, \n    text?: string, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    return this.get<R>(endpoint, { ...options, useMiniLoader: true, loaderText: text });\n  }\n\n  public async postMini<R = T, D = any>(\n    endpoint: string, \n    data?: D, \n    text?: string, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    return this.post<R, D>(endpoint, data, { ...options, useMiniLoader: true, loaderText: text });\n  }\n\n  public async putMini<R = T, D = any>(\n    endpoint: string, \n    data: D, \n    text?: string, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    return this.put<R, D>(endpoint, data, { ...options, useMiniLoader: true, loaderText: text });\n  }\n\n  public async patchMini<R = T, D = any>(\n    endpoint: string, \n    data: D, \n    text?: string, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    return this.patch<R, D>(endpoint, data, { ...options, useMiniLoader: true, loaderText: text });\n  }\n\n  public async deleteMini<R = T>(\n    endpoint: string, \n    text?: string, \n    options?: RequestOptions\n  ): Promise<CommonResponse<R>> {\n    return this.delete<R>(endpoint, { ...options, useMiniLoader: true, loaderText: text });\n  }\n}\n\n// Legacy support - functional interface (deprecated, use BaseService class instead)\nconst baseService = {\n  async get<T>(endpoint: string): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.get<T>(endpoint);\n  },\n\n  async post<T, D>(endpoint: string, data: D): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.post<T, D>(endpoint, data);\n  },\n\n  async put<T, D>(endpoint: string, data: D): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.put<T, D>(endpoint, data);\n  },\n\n  async patch<T, D>(endpoint: string, data: D): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.patch<T, D>(endpoint, data);\n  },\n\n  async delete<T>(endpoint: string): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.delete<T>(endpoint);\n  },\n\n  // Silent methods\n  async getSilent<T>(endpoint: string): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.getSilent<T>(endpoint);\n  },\n\n  async postSilent<T, D>(endpoint: string, data: D): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.postSilent<T, D>(endpoint, data);\n  },\n\n  async putSilent<T, D>(endpoint: string, data: D): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.putSilent<T, D>(endpoint, data);\n  },\n\n  async deleteSilent<T>(endpoint: string): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.deleteSilent<T>(endpoint);\n  },\n\n  // Mini loader methods\n  async getMini<T>(endpoint: string, text?: string): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.getMini<T>(endpoint, text);\n  },\n\n  async postMini<T, D>(endpoint: string, data: D, text?: string): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.postMini<T, D>(endpoint, data, text);\n  },\n\n  async putMini<T, D>(endpoint: string, data: D, text?: string): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.putMini<T, D>(endpoint, data, text);\n  },\n\n  async patchMini<T, D>(endpoint: string, data: D, text?: string): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.patchMini<T, D>(endpoint, data, text);\n  },\n\n  async deleteMini<T>(endpoint: string, text?: string): Promise<CommonResponse<T>> {\n    const service = new BaseService();\n    return service.deleteMini<T>(endpoint, text);\n  },\n};\n\nexport { baseService };\nexport default BaseService;\n","import BaseService, { baseService } from './baseService';\nimport type { CommonResponse } from '../types/common';\nimport type { User } from '../types/User';\n\n/**\n * User service interfaces and types\n */\nexport interface UserServiceOptions {\n  baseUrl?: string;\n  defaultHeaders?: Record<string, string>;\n}\n\nexport interface UserPermission {\n  level: number;\n  isAdmin: boolean;\n  permissions: string[];\n}\n\nexport interface UserUpdateData {\n  profileImage?: string;\n  nickname?: string;\n  email?: string;\n  bio?: string;\n}\n\nexport interface UserSearchOptions {\n  nickname?: string;\n  needPoint?: boolean;\n  includePermissions?: boolean;\n}\n\n/**\n * User Service Class\n * Handles all user-related API operations with consistent error handling\n * and global loading integration\n */\nexport class UserService extends BaseService<User> {\n  constructor(options?: UserServiceOptions) {\n    super(options?.baseUrl || '/api/user', options?.defaultHeaders);\n  }\n\n  /**\n   * Get current user's information\n   */\n  async getMyInfo(): Promise<CommonResponse<User>> {\n    return this.getMini<User>('/me', '사용자 정보 확인중...');\n  }\n\n  /**\n   * Get current user's permissions\n   * @deprecated Use getMyInfo() instead as it includes permission information\n   */\n  async getMyPermission(): Promise<CommonResponse<UserPermission>> {\n    return this.get<UserPermission>('/me/permission');\n  }\n\n  /**\n   * Get current user's point balance\n   */\n  async getMyPoint(): Promise<CommonResponse<number>> {\n    return this.getMini<number>('/me/point', '포인트 조회중...');\n  }\n\n  /**\n   * Get realtime user information (for live updates)\n   */\n  async getRealtimeUser(): Promise<CommonResponse<string>> {\n    return this.getSilent<string>('/realtime');\n  }\n\n  /**\n   * Get current user's ID\n   */\n  async getUserId(): Promise<CommonResponse<string>> {\n    return this.get<string>('/id');\n  }\n\n  /**\n   * Get current user's UUID\n   */\n  async getUserUuid(): Promise<CommonResponse<string>> {\n    return this.get<string>('/uuid');\n  }\n\n  /**\n   * Update user profile information\n   */\n  async updateUserProfile(data: UserUpdateData): Promise<CommonResponse<User>> {\n    return this.patch<User, UserUpdateData>('/profile', data);\n  }\n\n  /**\n   * Refresh current user information (bypasses cache)\n   */\n  async refreshMyInfo(): Promise<CommonResponse<User>> {\n    return this.get<User>('/me', { headers: { 'Cache-Control': 'no-cache' } });\n  }\n\n  /**\n   * Get user information by search criteria\n   */\n  async getUserInfo(options: UserSearchOptions = {}): Promise<CommonResponse<User>> {\n    const params: Record<string, string> = {};\n    \n    if (options.nickname) {\n      params.nickname = options.nickname;\n    }\n    if (options.needPoint) {\n      params.needPoint = 'true';\n    }\n    if (options.includePermissions) {\n      params.includePermissions = 'true';\n    }\n\n    return this.getMini<User>('/', '사용자 정보 조회중...', { params });\n  }\n\n  /**\n   * Check if user ID already exists\n   */\n  async checkUserIdExist(userId: string): Promise<CommonResponse<boolean>> {\n    return this.post<boolean, { userId: string }>('/check/id', { userId });\n  }\n\n  /**\n   * Check if nickname already exists\n   */\n  async checkNicknameExist(nickname: string): Promise<CommonResponse<boolean>> {\n    return this.post<boolean, { nickname: string }>('/check/nickname', { nickname });\n  }\n\n  /**\n   * Get user by ID\n   */\n  async getUserById(userId: string): Promise<CommonResponse<User>> {\n    return this.get<User>(`/${userId}`);\n  }\n\n  /**\n   * Get users by IDs (batch operation)\n   */\n  async getUsersByIds(userIds: string[]): Promise<CommonResponse<User[]>> {\n    return this.post<User[], { userIds: string[] }>('/batch', { userIds });\n  }\n\n  /**\n   * Search users by keyword\n   */\n  async searchUsers(\n    keyword: string, \n    page: number = 1, \n    pageSize: number = 10\n  ): Promise<CommonResponse<{ users: User[]; totalCount: number }>> {\n    return this.get<{ users: User[]; totalCount: number }>('/search', {\n      params: { keyword, page, pageSize }\n    });\n  }\n\n  /**\n   * Update user level (admin only)\n   */\n  async updateUserLevel(userId: string, level: number): Promise<CommonResponse<User>> {\n    return this.patch<User, { level: number }>(`/${userId}/level`, { level });\n  }\n\n  /**\n   * Ban/Unban user (admin only)\n   */\n  async updateUserBanStatus(\n    userId: string, \n    isBanned: boolean, \n    reason?: string\n  ): Promise<CommonResponse<User>> {\n    return this.patch<User, { isBanned: boolean; reason?: string }>(\n      `/${userId}/ban-status`, \n      { isBanned, reason }\n    );\n  }\n}\n\n// Legacy support - functional interface (deprecated, use UserService class instead)\nconst userService = {\n  getMyInfo(): Promise<CommonResponse<User>> {\n    const service = new UserService();\n    return service.getMyInfo();\n  },\n  \n  /**\n   * @deprecated Use getMyInfo() instead as it includes permission information\n   */\n  getMyPermission(): Promise<CommonResponse<UserPermission>> {\n    const service = new UserService();\n    return service.getMyPermission();\n  },\n  \n  getMyPoint(): Promise<CommonResponse<number>> {\n    const service = new UserService();\n    return service.getMyPoint();\n  },\n  \n  getRealtimeUser(): Promise<CommonResponse<string>> {\n    const service = new UserService();\n    return service.getRealtimeUser();\n  },\n  \n  getUserId(): Promise<CommonResponse<string>> {\n    const service = new UserService();\n    return service.getUserId();\n  },\n  \n  getUserUuid(): Promise<CommonResponse<string>> {\n    const service = new UserService();\n    return service.getUserUuid();\n  },\n  \n  updateUserProfile(profileImage: string): Promise<CommonResponse<User>> {\n    const service = new UserService();\n    return service.updateUserProfile({ profileImage });\n  },\n  \n  refreshMyInfo(): Promise<CommonResponse<User>> {\n    const service = new UserService();\n    return service.refreshMyInfo();\n  },\n  \n  getUserInfo(\n    nickname?: string,\n    needPoint: boolean = false\n  ): Promise<CommonResponse<User>> {\n    const service = new UserService();\n    return service.getUserInfo({ nickname, needPoint });\n  },\n  \n  checkUserIdExist(userId: string): Promise<CommonResponse<boolean>> {\n    const service = new UserService();\n    return service.checkUserIdExist(userId);\n  },\n  \n  checkNicknameExist(nickname: string): Promise<CommonResponse<boolean>> {\n    const service = new UserService();\n    return service.checkNicknameExist(nickname);\n  },\n};\n\nexport { userService };\nexport default UserService;\n","import BaseService, { baseService } from './baseService';\nimport type { CommonResponse, Pagination } from '../types/common';\nimport type { SearchType, SortBy } from '../types/board';\nimport type { FileAttachment, GalleryListItem, Post, PostBookmark, PostDetail } from '../types/post';\n\n/**\n * Post service interfaces and types\n */\nexport interface PostServiceOptions {\n  baseUrl?: string;\n  defaultHeaders?: Record<string, string>;\n}\n\nexport interface PostListOptions {\n  boardId: number;\n  page: number;\n  pageSize?: number;\n  sortBy?: SortBy;\n  searchType?: SearchType;\n  searchText?: string;\n  categoryId?: string | number | null;\n  needNotice?: boolean;\n  status?: 'published' | 'draft' | 'deleted';\n  writerId?: number;\n}\n\nexport interface PostCreateData {\n  title: string;\n  content: string;\n  files?: File[];\n  boardId: number;\n  attachments?: FileAttachment[];\n  downloadPoint?: number;\n  metadata?: {\n    thumbnail?: string | null;\n    [key: string]: string | null;\n  };\n  categoryId?: number | null;\n  isNotice?: boolean;\n  hasFiles?: boolean;\n}\n\nexport interface PostUpdateData {\n  title?: string;\n  content?: string;\n  files?: File[];\n  attachments?: FileAttachment[];\n  downloadPoint?: number;\n  metadata?: {\n    thumbnail?: string | null;\n    [key: string]: string | null;\n  };\n  categoryId?: number | null;\n  isNotice?: boolean;\n}\n\nexport interface PostDownloadHistory {\n  expires_at: string;\n  download_urls: FileAttachment[];\n  message: string;\n  point_deducted: number;\n  success: boolean;\n}\n\nexport interface DraftPostRequest {\n  title: string;\n  content: string;\n  boardId: number;\n  categoryId?: number;\n}\n\nexport interface DraftPostResponse {\n  id: number;\n  title: string;\n  content: string;\n  status: 'DRAFT';\n  createdAt: string;\n}\n\nexport interface AsyncUploadConfig {\n  needWatermark?: boolean;\n  watermarkPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  watermarkOpacity?: number;\n}\n\nexport interface UploadStartResponse {\n  success: boolean;\n  data: {\n    uploadId: string;\n    postId: number;\n    totalFiles: number;\n    estimatedDuration: number;\n  };\n  message: string;\n}\n\nexport interface UploadProgressResponse {\n  success: boolean;\n  data: {\n    postId: number;\n    overallProgress: number;\n    status: 'processing' | 'completed' | 'failed';\n    totalFiles: number;\n    completedFiles: number;\n    files: FileAttachment[];\n  };\n  message: string;\n}\n\n/**\n * Post Service Class\n * Handles all post-related API operations including CRUD operations,\n * file uploads, async media processing, and bookmark management\n */\nexport class PostService extends BaseService<Post> {\n  constructor(options?: PostServiceOptions) {\n    super(options?.baseUrl || '/api/post', options?.defaultHeaders);\n  }\n\n  /**\n   * Get post list with pagination and search options\n   */\n  async getPostList(options: PostListOptions): Promise<CommonResponse<Post>> {\n    const params: Record<string, string> = {\n      boardId: options.boardId.toString(),\n      page: options.page.toString(),\n      pageSize: (options.pageSize || 10).toString(),\n      sortBy: options.sortBy || 'latest',\n      searchType: options.searchType || 'title',\n      searchText: options.searchText || '',\n      needNotice: (options.needNotice !== false).toString(),\n    };\n\n    if (options.categoryId !== undefined && options.categoryId !== null && options.categoryId !== '') {\n      params.categoryId = options.categoryId.toString();\n    }\n\n    if (options.status) {\n      params.status = options.status;\n    }\n\n    if (options.writerId) {\n      params.writerId = options.writerId.toString();\n    }\n\n    return this.getMini<Post>('/', '게시글 목록 로딩중...', { params });\n  }\n\n  /**\n   * Get post by ID\n   */\n  async getPostById(postId: number): Promise<CommonResponse<PostDetail>> {\n    return this.get<PostDetail>(`/${postId}`);\n  }\n\n  /**\n   * Create new post (synchronous)\n   */\n  async createPost(data: PostCreateData): Promise<CommonResponse<PostDetail>> {\n    const formData = new FormData();\n    \n    // Basic post data\n    formData.append('title', data.title);\n    formData.append('content', data.content);\n    formData.append('boardId', data.boardId.toString());\n    formData.append('isNotice', (data.isNotice || false).toString());\n    formData.append('hasFiles', (data.hasFiles || false).toString());\n\n    // Optional fields\n    if (data.categoryId !== null && data.categoryId !== undefined) {\n      formData.append('categoryId', data.categoryId.toString());\n    }\n    \n    if (data.downloadPoint !== undefined && data.downloadPoint !== null) {\n      formData.append('downloadPoint', data.downloadPoint.toString());\n    }\n\n    // Attachments and metadata\n    if (data.attachments && data.attachments.length > 0) {\n      formData.append('attachments', JSON.stringify(data.attachments));\n    }\n\n    if (data.metadata) {\n      formData.append('metadata', JSON.stringify(data.metadata));\n    }\n\n    // Files\n    if (data.files && data.files.length > 0) {\n      data.files.forEach(file => {\n        formData.append('files', file);\n      });\n    }\n\n    return this.postMini<PostDetail, FormData>(\n      `/${data.boardId}`,\n      formData,\n      '게시글 등록중...'\n    );\n  }\n\n  /**\n   * Update existing post\n   */\n  async updatePost(postId: number, data: PostUpdateData): Promise<CommonResponse<PostDetail>> {\n    return this.putMini<PostDetail, PostUpdateData>(\n      `/${postId}`,\n      data,\n      '게시글 수정중...'\n    );\n  }\n\n  /**\n   * Delete post\n   */\n  async deletePost(postId: number): Promise<CommonResponse<PostDetail>> {\n    return this.deleteMini<PostDetail>(`/${postId}`, '게시글 삭제중...');\n  }\n\n  /**\n   * React to post (like/dislike)\n   */\n  async reactToPost(\n    postId: number,\n    reactionType: 'like' | 'dislike'\n  ): Promise<CommonResponse<PostDetail>> {\n    const reactionText = reactionType === 'like' ? '추천 처리중...' : '비추천 처리중...';\n    \n    return this.postMini<PostDetail, { reactionType: string }>(\n      `/${postId}/reaction`,\n      { reactionType },\n      reactionText\n    );\n  }\n\n  /**\n   * Purchase post files\n   */\n  async purchaseFiles(postId: number): Promise<CommonResponse<PostDownloadHistory>> {\n    return this.postMini<PostDownloadHistory, object>(\n      `/${postId}/purchase`,\n      {},\n      '파일 구매 처리중...'\n    );\n  }\n\n  /**\n   * Add post to bookmarks\n   */\n  async bookmarkPost(postId: number): Promise<CommonResponse<PostBookmark>> {\n    return this.postMini<PostBookmark, object>(\n      `/${postId}/bookmark`,\n      {},\n      '북마크 처리중...'\n    );\n  }\n\n  /**\n   * Remove post from bookmarks\n   */\n  async removeBookmark(postId: number): Promise<CommonResponse<boolean>> {\n    return this.deleteMini<boolean>(`/${postId}/bookmark`, '북마크 삭제중...');\n  }\n\n  /**\n   * Get user's bookmarked posts\n   */\n  async getBookmarkedPosts(): Promise<CommonResponse<GalleryListItem[]>> {\n    return this.getMini<GalleryListItem[]>('/bookmarks', '북마크된 게시글 불러오는 중...');\n  }\n\n  /**\n   * Move post to different board\n   */\n  async movePost(postId: number, boardId: number): Promise<CommonResponse<PostDetail>> {\n    return this.patchMini<PostDetail, { board_id: number }>(\n      `/${postId}`,\n      { board_id: boardId },\n      '게시글 이동중...'\n    );\n  }\n\n  // Draft and Async Upload Methods\n\n  /**\n   * Create draft post\n   */\n  async createDraftPost(data: DraftPostRequest): Promise<CommonResponse<DraftPostResponse>> {\n    return this.postMini<DraftPostResponse, DraftPostRequest>(\n      '/draft',\n      data,\n      '게시글 초안 생성중...'\n    );\n  }\n\n  /**\n   * Publish draft post\n   */\n  async publishPost(postId: number): Promise<CommonResponse<void>> {\n    return this.putMini<void, object>(`/${postId}/publish`, {}, '게시글 발행중...');\n  }\n\n  /**\n   * Start async file upload for post\n   */\n  async startAsyncFileUpload(\n    postId: number,\n    files: File[],\n    config?: AsyncUploadConfig\n  ): Promise<CommonResponse<UploadStartResponse['data']>> {\n    const formData = new FormData();\n\n    // Upload configuration\n    formData.append('postId', postId.toString());\n    formData.append('needWatermark', (config?.needWatermark !== false).toString());\n    formData.append('watermarkPosition', config?.watermarkPosition || 'bottom-right');\n    formData.append('watermarkOpacity', (config?.watermarkOpacity || 0.7).toString());\n\n    // Add files\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n\n    const response = await this.postMini<UploadStartResponse, FormData>(\n      '/upload-async',\n      formData,\n      '파일 업로드 시작중...'\n    );\n\n    if (response.data && !response.data.success) {\n      throw new Error(response.data.message);\n    }\n\n    return {\n      ...response,\n      data: response.data?.data || null,\n    };\n  }\n\n  /**\n   * Get async upload progress\n   */\n  async getUploadProgress(postId: number): Promise<CommonResponse<UploadProgressResponse['data']>> {\n    const response = await this.getSilent<UploadProgressResponse>(`/upload-progress/${postId}`);\n\n    if (response.data && !response.data.success) {\n      throw new Error(response.data.message || '진행도 조회에 실패했습니다');\n    }\n\n    return {\n      ...response,\n      data: response.data?.data || null,\n    };\n  }\n\n  /**\n   * Retry failed file uploads\n   */\n  async retryFailedFiles(postId: number, failedFileUuids: string[]): Promise<CommonResponse<void>> {\n    return this.postMini<void, { failedFileUuids: string[] }>(\n      `/retry-upload/${postId}`,\n      { failedFileUuids },\n      '실패한 파일 재업로드 중...'\n    );\n  }\n\n  /**\n   * Cancel async upload\n   */\n  async cancelUpload(postId: number): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>(`/cancel-upload/${postId}`, '업로드 취소중...');\n  }\n\n  /**\n   * Create post with async file upload workflow\n   */\n  async createPostAsync(data: PostCreateData): Promise<CommonResponse<DraftPostResponse>> {\n    // 1. Create draft post first\n    const draftResponse = await this.createDraftPost({\n      title: data.title,\n      content: data.content,\n      boardId: data.boardId,\n      categoryId: data.categoryId || undefined,\n    });\n\n    if (draftResponse.successOrNot !== 'Y' || !draftResponse.data) {\n      return draftResponse;\n    }\n\n    // 2. Start async upload if files exist\n    if (data.files && data.files.length > 0) {\n      await this.startAsyncFileUpload(draftResponse.data.id, data.files);\n    } else {\n      // Publish immediately if no files\n      await this.publishPost(draftResponse.data.id);\n    }\n\n    return draftResponse;\n  }\n\n  /**\n   * Get draft posts\n   */\n  async getDraftPosts(options: Partial<PostListOptions> = {}): Promise<CommonResponse<Post>> {\n    const params: Record<string, string> = {\n      status: 'draft',\n      page: (options.page || 1).toString(),\n      pageSize: (options.pageSize || 10).toString(),\n      sortBy: options.sortBy || 'latest',\n    };\n\n    if (options.writerId) {\n      params.writerId = options.writerId.toString();\n    }\n\n    return this.getSilent<Post>('/', { params });\n  }\n\n  /**\n   * Search posts across multiple boards\n   */\n  async searchPosts(\n    keyword: string,\n    page: number = 1,\n    pageSize: number = 10,\n    boardIds?: number[]\n  ): Promise<CommonResponse<{ posts: Post[]; totalCount: number }>> {\n    const params: Record<string, string> = {\n      keyword,\n      page: page.toString(),\n      pageSize: pageSize.toString(),\n    };\n\n    if (boardIds && boardIds.length > 0) {\n      params.boardIds = boardIds.join(',');\n    }\n\n    return this.get<{ posts: Post[]; totalCount: number }>('/search', { params });\n  }\n\n  /**\n   * Get post statistics (admin only)\n   */\n  async getPostStats(boardId?: number): Promise<CommonResponse<{\n    totalPosts: number;\n    totalViews: number;\n    totalComments: number;\n    totalLikes: number;\n  }>> {\n    const params = boardId ? { boardId: boardId.toString() } : {};\n    return this.get<any>('/stats', { params });\n  }\n}\n\n// Legacy support - functional interface (deprecated, use PostService class instead)\nconst postService = {\n  getPost(options: PostListOptions): Promise<CommonResponse<Post>> {\n    const service = new PostService();\n    return service.getPostList(options);\n  },\n\n  createPost(data: PostCreateData): Promise<CommonResponse<PostDetail>> {\n    const service = new PostService();\n    return service.createPost(data);\n  },\n\n  reactionPost(postId: number, reactionType: 'like' | 'dislike'): Promise<CommonResponse<PostDetail>> {\n    const service = new PostService();\n    return service.reactToPost(postId, reactionType);\n  },\n\n  deletePost(postId: number): Promise<CommonResponse<PostDetail>> {\n    const service = new PostService();\n    return service.deletePost(postId);\n  },\n\n  updatePost(postId: number, data: PostUpdateData): Promise<CommonResponse<PostDetail>> {\n    const service = new PostService();\n    return service.updatePost(postId, data);\n  },\n\n  purchaseFiles(postId: number): Promise<CommonResponse<PostDownloadHistory>> {\n    const service = new PostService();\n    return service.purchaseFiles(postId);\n  },\n\n  bookmarkPost(postId: number): Promise<CommonResponse<PostBookmark>> {\n    const service = new PostService();\n    return service.bookmarkPost(postId);\n  },\n\n  deleteBookmarkPost(postId: number): Promise<CommonResponse<boolean>> {\n    const service = new PostService();\n    return service.removeBookmark(postId);\n  },\n\n  getBookmarkPosts(): Promise<CommonResponse<GalleryListItem[]>> {\n    const service = new PostService();\n    return service.getBookmarkedPosts();\n  },\n\n  movePost(postId: number, boardId: number): Promise<CommonResponse<PostDetail>> {\n    const service = new PostService();\n    return service.movePost(postId, boardId);\n  },\n\n  // Draft methods\n  createDraftPost(data: DraftPostRequest): Promise<CommonResponse<DraftPostResponse>> {\n    const service = new PostService();\n    return service.createDraftPost(data);\n  },\n\n  publishPost(postId: number): Promise<CommonResponse<void>> {\n    const service = new PostService();\n    return service.publishPost(postId);\n  },\n\n  getDraftPosts(options: Partial<PostListOptions> = {}): Promise<CommonResponse<Post>> {\n    const service = new PostService();\n    return service.getDraftPosts(options);\n  },\n\n  // Async upload methods\n  startAsyncFileUpload(\n    postId: number,\n    files: File[],\n    config?: AsyncUploadConfig\n  ): Promise<CommonResponse<UploadStartResponse['data']>> {\n    const service = new PostService();\n    return service.startAsyncFileUpload(postId, files, config);\n  },\n\n  getUploadProgress(postId: number): Promise<CommonResponse<UploadProgressResponse['data']>> {\n    const service = new PostService();\n    return service.getUploadProgress(postId);\n  },\n\n  retryFailedFiles(postId: number, failedFileUuids: string[]): Promise<CommonResponse<void>> {\n    const service = new PostService();\n    return service.retryFailedFiles(postId, failedFileUuids);\n  },\n\n  cancelUpload(postId: number): Promise<CommonResponse<void>> {\n    const service = new PostService();\n    return service.cancelUpload(postId);\n  },\n\n  createPostAsync(data: PostCreateData): Promise<CommonResponse<DraftPostResponse>> {\n    const service = new PostService();\n    return service.createPostAsync(data);\n  },\n};\n\nexport { postService };\nexport default PostService;\n","import BaseService, { baseService } from './baseService';\nimport type { CommonResponse, Pagination } from '../types/common';\nimport type { Board, BoardCategory, SearchType, SortBy } from '../types/board';\n\n/**\n * Board service interfaces and types\n */\nexport interface BoardServiceOptions {\n  baseUrl?: string;\n  defaultHeaders?: Record<string, string>;\n}\n\nexport interface BoardListOptions {\n  page?: number;\n  pageSize?: number;\n  sortBy?: SortBy;\n  searchText?: string;\n  searchType?: SearchType;\n  isActive?: boolean;\n  categoryId?: number;\n}\n\nexport interface BoardCreateData {\n  name: string;\n  description?: string;\n  isActive?: boolean;\n  sortOrder?: number;\n  allowAnonymous?: boolean;\n  allowAttachment?: boolean;\n  requirePoints?: number;\n  categoryIds?: number[];\n  metadata?: {\n    icon?: string;\n    color?: string;\n    [key: string]: any;\n  };\n}\n\nexport interface BoardUpdateData {\n  name?: string;\n  description?: string;\n  isActive?: boolean;\n  sortOrder?: number;\n  allowAnonymous?: boolean;\n  allowAttachment?: boolean;\n  requirePoints?: number;\n  categoryIds?: number[];\n  metadata?: {\n    icon?: string;\n    color?: string;\n    [key: string]: any;\n  };\n}\n\nexport interface BoardCategoryCreateData {\n  name: string;\n  description?: string;\n  color?: string;\n  sortOrder?: number;\n  isActive?: boolean;\n}\n\nexport interface BoardStats {\n  totalPosts: number;\n  totalComments: number;\n  totalViews: number;\n  activeUsers: number;\n  lastActivity: string;\n}\n\n/**\n * Board Service Class\n * Handles all board-related API operations including board management,\n * categories, permissions, and statistics\n */\nexport class BoardService extends BaseService<Board> {\n  constructor(options?: BoardServiceOptions) {\n    super(options?.baseUrl || '/api/boards', options?.defaultHeaders);\n  }\n\n  /**\n   * Get list of all boards\n   */\n  async getBoards(options: BoardListOptions = {}): Promise<CommonResponse<Board[]>> {\n    const params: Record<string, string> = {};\n\n    if (options.page) {\n      params.page = options.page.toString();\n    }\n    if (options.pageSize) {\n      params.pageSize = options.pageSize.toString();\n    }\n    if (options.sortBy) {\n      params.sortBy = options.sortBy;\n    }\n    if (options.searchText) {\n      params.searchText = options.searchText;\n    }\n    if (options.searchType) {\n      params.searchType = options.searchType;\n    }\n    if (options.isActive !== undefined) {\n      params.isActive = options.isActive.toString();\n    }\n    if (options.categoryId) {\n      params.categoryId = options.categoryId.toString();\n    }\n\n    return this.getMini<Board[]>('/', '게시판 목록 로딩중...', { params });\n  }\n\n  /**\n   * Get board by ID\n   */\n  async getBoard(boardId: number): Promise<CommonResponse<Board>> {\n    return this.getMini<Board>(`/${boardId}`, '게시판 정보 로딩중...');\n  }\n\n  /**\n   * Create new board (admin only)\n   */\n  async createBoard(data: BoardCreateData): Promise<CommonResponse<Board>> {\n    return this.postMini<Board, BoardCreateData>('/', data, '게시판 생성중...');\n  }\n\n  /**\n   * Update board (admin only)\n   */\n  async updateBoard(boardId: number, data: BoardUpdateData): Promise<CommonResponse<Board>> {\n    return this.putMini<Board, BoardUpdateData>(`/${boardId}`, data, '게시판 수정중...');\n  }\n\n  /**\n   * Delete board (admin only)\n   */\n  async deleteBoard(boardId: number): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>(`/${boardId}`, '게시판 삭제중...');\n  }\n\n  /**\n   * Get board categories\n   */\n  async getBoardCategories(boardId: number): Promise<CommonResponse<BoardCategory[]>> {\n    return this.getMini<BoardCategory[]>(`/${boardId}/categories`, '카테고리 로딩중...');\n  }\n\n  /**\n   * Create board category (admin only)\n   */\n  async createBoardCategory(\n    boardId: number, \n    data: BoardCategoryCreateData\n  ): Promise<CommonResponse<BoardCategory>> {\n    return this.postMini<BoardCategory, BoardCategoryCreateData>(\n      `/${boardId}/categories`,\n      data,\n      '카테고리 생성중...'\n    );\n  }\n\n  /**\n   * Update board category (admin only)\n   */\n  async updateBoardCategory(\n    boardId: number,\n    categoryId: number,\n    data: Partial<BoardCategoryCreateData>\n  ): Promise<CommonResponse<BoardCategory>> {\n    return this.putMini<BoardCategory, Partial<BoardCategoryCreateData>>(\n      `/${boardId}/categories/${categoryId}`,\n      data,\n      '카테고리 수정중...'\n    );\n  }\n\n  /**\n   * Delete board category (admin only)\n   */\n  async deleteBoardCategory(boardId: number, categoryId: number): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>(`/${boardId}/categories/${categoryId}`, '카테고리 삭제중...');\n  }\n\n  /**\n   * Get board statistics\n   */\n  async getBoardStats(boardId: number): Promise<CommonResponse<BoardStats>> {\n    return this.getSilent<BoardStats>(`/${boardId}/stats`);\n  }\n\n  /**\n   * Search boards by keyword\n   */\n  async searchBoards(\n    keyword: string,\n    page: number = 1,\n    pageSize: number = 10\n  ): Promise<CommonResponse<{ boards: Board[]; totalCount: number }>> {\n    return this.get<{ boards: Board[]; totalCount: number }>('/search', {\n      params: { keyword, page: page.toString(), pageSize: pageSize.toString() }\n    });\n  }\n\n  /**\n   * Get popular boards\n   */\n  async getPopularBoards(limit: number = 10): Promise<CommonResponse<Board[]>> {\n    return this.getSilent<Board[]>('/popular', {\n      params: { limit: limit.toString() }\n    });\n  }\n\n  /**\n   * Get recently active boards\n   */\n  async getRecentlyActiveBoards(limit: number = 10): Promise<CommonResponse<Board[]>> {\n    return this.getSilent<Board[]>('/recent-activity', {\n      params: { limit: limit.toString() }\n    });\n  }\n\n  /**\n   * Get user's favorite boards\n   */\n  async getFavoriteBoards(): Promise<CommonResponse<Board[]>> {\n    return this.getMini<Board[]>('/favorites', '즐겨찾기 게시판 로딩중...');\n  }\n\n  /**\n   * Add board to favorites\n   */\n  async addToFavorites(boardId: number): Promise<CommonResponse<void>> {\n    return this.postMini<void, object>(`/${boardId}/favorite`, {}, '즐겨찾기 추가중...');\n  }\n\n  /**\n   * Remove board from favorites\n   */\n  async removeFromFavorites(boardId: number): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>(`/${boardId}/favorite`, '즐겨찾기 제거중...');\n  }\n\n  /**\n   * Get board permissions for current user\n   */\n  async getBoardPermissions(boardId: number): Promise<CommonResponse<{\n    canRead: boolean;\n    canWrite: boolean;\n    canComment: boolean;\n    canModerate: boolean;\n    requiredLevel: number;\n  }>> {\n    return this.getSilent<any>(`/${boardId}/permissions`);\n  }\n\n  /**\n   * Update board permissions (admin only)\n   */\n  async updateBoardPermissions(\n    boardId: number,\n    permissions: {\n      readLevel?: number;\n      writeLevel?: number;\n      commentLevel?: number;\n      allowAnonymous?: boolean;\n    }\n  ): Promise<CommonResponse<void>> {\n    return this.patchMini<void, typeof permissions>(\n      `/${boardId}/permissions`,\n      permissions,\n      '권한 설정 업데이트 중...'\n    );\n  }\n\n  /**\n   * Get board moderators\n   */\n  async getBoardModerators(boardId: number): Promise<CommonResponse<{\n    id: string;\n    nickname: string;\n    profileImage?: string;\n    level: number;\n  }[]>> {\n    return this.get<any>(`/${boardId}/moderators`);\n  }\n\n  /**\n   * Add board moderator (admin only)\n   */\n  async addBoardModerator(boardId: number, userId: string): Promise<CommonResponse<void>> {\n    return this.postMini<void, { userId: string }>(\n      `/${boardId}/moderators`,\n      { userId },\n      '모더레이터 추가중...'\n    );\n  }\n\n  /**\n   * Remove board moderator (admin only)\n   */\n  async removeBoardModerator(boardId: number, userId: string): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>(`/${boardId}/moderators/${userId}`, '모더레이터 제거중...');\n  }\n\n  /**\n   * Report board content or issue\n   */\n  async reportBoard(\n    boardId: number,\n    reason: string,\n    description?: string\n  ): Promise<CommonResponse<void>> {\n    return this.postMini<void, { reason: string; description?: string }>(\n      `/${boardId}/report`,\n      { reason, description },\n      '신고 접수중...'\n    );\n  }\n\n  /**\n   * Get board activity feed\n   */\n  async getBoardActivity(\n    boardId: number,\n    page: number = 1,\n    pageSize: number = 20\n  ): Promise<CommonResponse<{\n    activities: Array<{\n      type: 'post' | 'comment' | 'like' | 'share';\n      postId?: number;\n      userId: string;\n      userName: string;\n      timestamp: string;\n      title?: string;\n      content?: string;\n    }>;\n    totalCount: number;\n  }>> {\n    return this.get<any>(`/${boardId}/activity`, {\n      params: { page: page.toString(), pageSize: pageSize.toString() }\n    });\n  }\n}\n\n// Legacy support - functional interface (deprecated, use BoardService class instead)\nconst boardService = {\n  getBoards(): Promise<CommonResponse<Board[]>> {\n    const service = new BoardService();\n    return service.getBoards();\n  },\n\n  getBoard(boardId: number): Promise<CommonResponse<Board>> {\n    const service = new BoardService();\n    return service.getBoard(boardId);\n  },\n\n  getBoardCategories(boardId: number): Promise<CommonResponse<BoardCategory[]>> {\n    const service = new BoardService();\n    return service.getBoardCategories(boardId);\n  },\n};\n\nexport { boardService };\nexport default BoardService;\n","import BaseService from './baseService';\nimport type { CommonResponse } from '../types/common';\nimport type { User } from '../types/User';\n\n/**\n * Authentication service interfaces and types\n */\nexport interface AuthServiceOptions {\n  baseUrl?: string;\n  defaultHeaders?: Record<string, string>;\n}\n\nexport interface LoginCredentials {\n  userId: string;\n  password: string;\n  rememberMe?: boolean;\n}\n\nexport interface RegisterData {\n  userId: string;\n  password: string;\n  passwordConfirm: string;\n  nickname: string;\n  email?: string;\n  agreeToTerms: boolean;\n  agreeToPrivacy: boolean;\n  agreeToMarketing?: boolean;\n}\n\nexport interface AuthTokens {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n  tokenType: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  tokens: AuthTokens;\n  isFirstLogin?: boolean;\n  requiredActions?: string[];\n}\n\nexport interface PasswordResetData {\n  email?: string;\n  userId?: string;\n}\n\nexport interface PasswordChangeData {\n  currentPassword: string;\n  newPassword: string;\n  newPasswordConfirm: string;\n}\n\nexport interface SessionInfo {\n  isValid: boolean;\n  user?: User;\n  expiresAt?: string;\n  permissions?: string[];\n  level?: number;\n  isAdmin?: boolean;\n}\n\n/**\n * Authentication Service Class\n * Handles all authentication-related operations including login, logout,\n * registration, password management, and session validation\n */\nexport class AuthService extends BaseService {\n  constructor(options?: AuthServiceOptions) {\n    super(options?.baseUrl || '/api/auth', options?.defaultHeaders);\n  }\n\n  /**\n   * User login\n   */\n  async login(credentials: LoginCredentials): Promise<CommonResponse<AuthResponse>> {\n    return this.postMini<AuthResponse, LoginCredentials>(\n      '/login',\n      credentials,\n      '로그인 중...'\n    );\n  }\n\n  /**\n   * User logout\n   */\n  async logout(): Promise<CommonResponse<void>> {\n    return this.postMini<void, object>('/logout', {}, '로그아웃 중...');\n  }\n\n  /**\n   * User registration\n   */\n  async register(data: RegisterData): Promise<CommonResponse<AuthResponse>> {\n    return this.postMini<AuthResponse, RegisterData>(\n      '/register',\n      data,\n      '회원가입 처리 중...'\n    );\n  }\n\n  /**\n   * Refresh access token\n   */\n  async refreshToken(refreshToken: string): Promise<CommonResponse<AuthTokens>> {\n    return this.postSilent<AuthTokens, { refreshToken: string }>(\n      '/refresh',\n      { refreshToken }\n    );\n  }\n\n  /**\n   * Validate current session\n   */\n  async validateSession(): Promise<CommonResponse<SessionInfo>> {\n    return this.getSilent<SessionInfo>('/validate');\n  }\n\n  /**\n   * Get current user info (from token)\n   */\n  async getCurrentUser(): Promise<CommonResponse<User>> {\n    return this.getMini<User>('/me', '사용자 정보 확인 중...');\n  }\n\n  /**\n   * Send password reset email\n   */\n  async requestPasswordReset(data: PasswordResetData): Promise<CommonResponse<void>> {\n    return this.postMini<void, PasswordResetData>(\n      '/password-reset/request',\n      data,\n      '비밀번호 재설정 요청 중...'\n    );\n  }\n\n  /**\n   * Reset password with token\n   */\n  async resetPassword(\n    token: string, \n    newPassword: string,\n    newPasswordConfirm: string\n  ): Promise<CommonResponse<void>> {\n    return this.postMini<void, { \n      token: string; \n      newPassword: string; \n      newPasswordConfirm: string; \n    }>(\n      '/password-reset/confirm',\n      { token, newPassword, newPasswordConfirm },\n      '비밀번호 재설정 중...'\n    );\n  }\n\n  /**\n   * Change password (authenticated user)\n   */\n  async changePassword(data: PasswordChangeData): Promise<CommonResponse<void>> {\n    return this.putMini<void, PasswordChangeData>(\n      '/password',\n      data,\n      '비밀번호 변경 중...'\n    );\n  }\n\n  /**\n   * Send email verification\n   */\n  async sendEmailVerification(email?: string): Promise<CommonResponse<void>> {\n    return this.postMini<void, { email?: string }>(\n      '/verify-email/send',\n      { email },\n      '인증 메일 발송 중...'\n    );\n  }\n\n  /**\n   * Verify email with token\n   */\n  async verifyEmail(token: string): Promise<CommonResponse<void>> {\n    return this.postMini<void, { token: string }>(\n      '/verify-email/confirm',\n      { token },\n      '이메일 인증 중...'\n    );\n  }\n\n  /**\n   * Check if user ID is available\n   */\n  async checkUserIdAvailability(userId: string): Promise<CommonResponse<{ available: boolean }>> {\n    return this.get<{ available: boolean }>('/check/userid', {\n      params: { userId }\n    });\n  }\n\n  /**\n   * Check if nickname is available\n   */\n  async checkNicknameAvailability(nickname: string): Promise<CommonResponse<{ available: boolean }>> {\n    return this.get<{ available: boolean }>('/check/nickname', {\n      params: { nickname }\n    });\n  }\n\n  /**\n   * Check if email is available\n   */\n  async checkEmailAvailability(email: string): Promise<CommonResponse<{ available: boolean }>> {\n    return this.get<{ available: boolean }>('/check/email', {\n      params: { email }\n    });\n  }\n\n  /**\n   * Get user sessions (for security management)\n   */\n  async getUserSessions(): Promise<CommonResponse<Array<{\n    id: string;\n    deviceInfo: string;\n    ipAddress: string;\n    lastActivity: string;\n    isCurrent: boolean;\n  }>>> {\n    return this.get<any>('/sessions');\n  }\n\n  /**\n   * Revoke specific session\n   */\n  async revokeSession(sessionId: string): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>(`/sessions/${sessionId}`, '세션 해제 중...');\n  }\n\n  /**\n   * Revoke all sessions except current\n   */\n  async revokeAllSessions(): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>('/sessions/all', '모든 세션 해제 중...');\n  }\n\n  /**\n   * Enable two-factor authentication\n   */\n  async enable2FA(): Promise<CommonResponse<{\n    qrCodeUrl: string;\n    backupCodes: string[];\n    secret: string;\n  }>> {\n    return this.postMini<any, object>('/2fa/enable', {}, '2FA 설정 중...');\n  }\n\n  /**\n   * Verify and confirm two-factor authentication\n   */\n  async confirm2FA(code: string): Promise<CommonResponse<void>> {\n    return this.postMini<void, { code: string }>(\n      '/2fa/confirm',\n      { code },\n      '2FA 인증 중...'\n    );\n  }\n\n  /**\n   * Disable two-factor authentication\n   */\n  async disable2FA(password: string): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>('/2fa/disable', '2FA 해제 중...');\n  }\n\n  /**\n   * Verify 2FA code during login\n   */\n  async verify2FACode(code: string): Promise<CommonResponse<AuthResponse>> {\n    return this.postMini<AuthResponse, { code: string }>(\n      '/2fa/verify',\n      { code },\n      '2FA 코드 확인 중...'\n    );\n  }\n}\n\n// Legacy support - functional interface (deprecated, use AuthService class instead)\nconst authService = {\n  login(credentials: LoginCredentials): Promise<CommonResponse<AuthResponse>> {\n    const service = new AuthService();\n    return service.login(credentials);\n  },\n\n  logout(): Promise<CommonResponse<void>> {\n    const service = new AuthService();\n    return service.logout();\n  },\n\n  register(data: RegisterData): Promise<CommonResponse<AuthResponse>> {\n    const service = new AuthService();\n    return service.register(data);\n  },\n\n  refreshToken(refreshToken: string): Promise<CommonResponse<AuthTokens>> {\n    const service = new AuthService();\n    return service.refreshToken(refreshToken);\n  },\n\n  validateSession(): Promise<CommonResponse<SessionInfo>> {\n    const service = new AuthService();\n    return service.validateSession();\n  },\n\n  getCurrentUser(): Promise<CommonResponse<User>> {\n    const service = new AuthService();\n    return service.getCurrentUser();\n  },\n\n  requestPasswordReset(data: PasswordResetData): Promise<CommonResponse<void>> {\n    const service = new AuthService();\n    return service.requestPasswordReset(data);\n  },\n\n  resetPassword(\n    token: string, \n    newPassword: string,\n    newPasswordConfirm: string\n  ): Promise<CommonResponse<void>> {\n    const service = new AuthService();\n    return service.resetPassword(token, newPassword, newPasswordConfirm);\n  },\n\n  changePassword(data: PasswordChangeData): Promise<CommonResponse<void>> {\n    const service = new AuthService();\n    return service.changePassword(data);\n  },\n\n  sendEmailVerification(email?: string): Promise<CommonResponse<void>> {\n    const service = new AuthService();\n    return service.sendEmailVerification(email);\n  },\n\n  verifyEmail(token: string): Promise<CommonResponse<void>> {\n    const service = new AuthService();\n    return service.verifyEmail(token);\n  },\n\n  checkUserIdAvailability(userId: string): Promise<CommonResponse<{ available: boolean }>> {\n    const service = new AuthService();\n    return service.checkUserIdAvailability(userId);\n  },\n\n  checkNicknameAvailability(nickname: string): Promise<CommonResponse<{ available: boolean }>> {\n    const service = new AuthService();\n    return service.checkNicknameAvailability(nickname);\n  },\n\n  checkEmailAvailability(email: string): Promise<CommonResponse<{ available: boolean }>> {\n    const service = new AuthService();\n    return service.checkEmailAvailability(email);\n  },\n};\n\nexport { authService };\nexport default AuthService;","import BaseService from './baseService';\nimport type { CommonResponse } from '../types/common';\nimport type { User } from '../types/User';\n\n/**\n * Permission service interfaces and types\n */\nexport interface PermissionServiceOptions {\n  baseUrl?: string;\n  defaultHeaders?: Record<string, string>;\n}\n\nexport interface PermissionCheck {\n  resource: string;\n  action: string;\n  context?: Record<string, any>;\n}\n\nexport interface PermissionResult {\n  allowed: boolean;\n  reason?: string;\n  requiredLevel?: number;\n  requiredPermissions?: string[];\n}\n\nexport interface UserPermissions {\n  level: number;\n  isAdmin: boolean;\n  permissions: string[];\n  roles: string[];\n  restrictions?: string[];\n}\n\nexport interface LevelInfo {\n  level: number;\n  name: string;\n  description: string;\n  requiredPoints: number;\n  permissions: string[];\n  benefits: string[];\n  color?: string;\n  icon?: string;\n}\n\nexport interface RoleInfo {\n  id: string;\n  name: string;\n  description: string;\n  permissions: string[];\n  level: number;\n  isSystem: boolean;\n}\n\nexport interface PermissionGrant {\n  userId: string;\n  permission: string;\n  context?: Record<string, any>;\n  expiresAt?: string;\n  grantedBy: string;\n  reason?: string;\n}\n\n/**\n * Permission Service Class\n * Handles all permission and authorization operations including\n * level management, role assignments, and access control\n */\nexport class PermissionService extends BaseService {\n  constructor(options?: PermissionServiceOptions) {\n    super(options?.baseUrl || '/api/permissions', options?.defaultHeaders);\n  }\n\n  /**\n   * Check if user has specific permission\n   */\n  async checkPermission(check: PermissionCheck): Promise<CommonResponse<PermissionResult>> {\n    return this.getSilent<PermissionResult>('/check', {\n      params: {\n        resource: check.resource,\n        action: check.action,\n        context: check.context ? JSON.stringify(check.context) : undefined\n      }\n    });\n  }\n\n  /**\n   * Check multiple permissions at once\n   */\n  async checkPermissions(\n    checks: PermissionCheck[]\n  ): Promise<CommonResponse<Record<string, PermissionResult>>> {\n    return this.postSilent<Record<string, PermissionResult>, { checks: PermissionCheck[] }>(\n      '/check-multiple',\n      { checks }\n    );\n  }\n\n  /**\n   * Get current user's permissions\n   */\n  async getMyPermissions(): Promise<CommonResponse<UserPermissions>> {\n    return this.getMini<UserPermissions>('/me', '권한 정보 조회 중...');\n  }\n\n  /**\n   * Get user's permissions by ID (admin only)\n   */\n  async getUserPermissions(userId: string): Promise<CommonResponse<UserPermissions>> {\n    return this.get<UserPermissions>(`/users/${userId}`);\n  }\n\n  /**\n   * Get all available permission levels\n   */\n  async getLevels(): Promise<CommonResponse<LevelInfo[]>> {\n    return this.getSilent<LevelInfo[]>('/levels');\n  }\n\n  /**\n   * Get specific level information\n   */\n  async getLevel(level: number): Promise<CommonResponse<LevelInfo>> {\n    return this.get<LevelInfo>(`/levels/${level}`);\n  }\n\n  /**\n   * Update user level (admin only)\n   */\n  async updateUserLevel(userId: string, level: number, reason?: string): Promise<CommonResponse<void>> {\n    return this.patchMini<void, { level: number; reason?: string }>(\n      `/users/${userId}/level`,\n      { level, reason },\n      '사용자 레벨 변경 중...'\n    );\n  }\n\n  /**\n   * Get all available roles\n   */\n  async getRoles(): Promise<CommonResponse<RoleInfo[]>> {\n    return this.get<RoleInfo[]>('/roles');\n  }\n\n  /**\n   * Get specific role information\n   */\n  async getRole(roleId: string): Promise<CommonResponse<RoleInfo>> {\n    return this.get<RoleInfo>(`/roles/${roleId}`);\n  }\n\n  /**\n   * Create new role (admin only)\n   */\n  async createRole(role: Omit<RoleInfo, 'id' | 'isSystem'>): Promise<CommonResponse<RoleInfo>> {\n    return this.postMini<RoleInfo, typeof role>(\n      '/roles',\n      role,\n      '역할 생성 중...'\n    );\n  }\n\n  /**\n   * Update role (admin only)\n   */\n  async updateRole(\n    roleId: string, \n    updates: Partial<Omit<RoleInfo, 'id' | 'isSystem'>>\n  ): Promise<CommonResponse<RoleInfo>> {\n    return this.putMini<RoleInfo, typeof updates>(\n      `/roles/${roleId}`,\n      updates,\n      '역할 수정 중...'\n    );\n  }\n\n  /**\n   * Delete role (admin only)\n   */\n  async deleteRole(roleId: string): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>(`/roles/${roleId}`, '역할 삭제 중...');\n  }\n\n  /**\n   * Assign role to user (admin only)\n   */\n  async assignRole(userId: string, roleId: string, reason?: string): Promise<CommonResponse<void>> {\n    return this.postMini<void, { roleId: string; reason?: string }>(\n      `/users/${userId}/roles`,\n      { roleId, reason },\n      '역할 할당 중...'\n    );\n  }\n\n  /**\n   * Remove role from user (admin only)\n   */\n  async removeRole(userId: string, roleId: string, reason?: string): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>(\n      `/users/${userId}/roles/${roleId}`,\n      '역할 제거 중...'\n    );\n  }\n\n  /**\n   * Grant specific permission to user (admin only)\n   */\n  async grantPermission(grant: PermissionGrant): Promise<CommonResponse<void>> {\n    return this.postMini<void, PermissionGrant>(\n      '/grants',\n      grant,\n      '권한 부여 중...'\n    );\n  }\n\n  /**\n   * Revoke specific permission from user (admin only)\n   */\n  async revokePermission(\n    userId: string, \n    permission: string,\n    context?: Record<string, any>,\n    reason?: string\n  ): Promise<CommonResponse<void>> {\n    return this.deleteMini<void>(\n      `/grants/${userId}/${permission}`,\n      '권한 회수 중...'\n    );\n  }\n\n  /**\n   * Get user's permission grants\n   */\n  async getUserGrants(userId: string): Promise<CommonResponse<PermissionGrant[]>> {\n    return this.get<PermissionGrant[]>(`/grants/users/${userId}`);\n  }\n\n  /**\n   * Get permission grant history for user\n   */\n  async getPermissionHistory(\n    userId: string,\n    page: number = 1,\n    pageSize: number = 20\n  ): Promise<CommonResponse<{\n    history: Array<{\n      id: string;\n      action: 'grant' | 'revoke' | 'level_change' | 'role_assign' | 'role_remove';\n      permission?: string;\n      role?: string;\n      level?: number;\n      grantedBy: string;\n      reason?: string;\n      timestamp: string;\n    }>;\n    totalCount: number;\n  }>> {\n    return this.get<any>(`/history/${userId}`, {\n      params: { page: page.toString(), pageSize: pageSize.toString() }\n    });\n  }\n\n  /**\n   * Check if user can access specific board\n   */\n  async checkBoardAccess(\n    boardId: number,\n    action: 'read' | 'write' | 'comment' | 'moderate' = 'read'\n  ): Promise<CommonResponse<PermissionResult>> {\n    return this.checkPermission({\n      resource: 'board',\n      action,\n      context: { boardId }\n    });\n  }\n\n  /**\n   * Check if user can access specific post\n   */\n  async checkPostAccess(\n    postId: number,\n    action: 'read' | 'edit' | 'delete' | 'comment' = 'read'\n  ): Promise<CommonResponse<PermissionResult>> {\n    return this.checkPermission({\n      resource: 'post',\n      action,\n      context: { postId }\n    });\n  }\n\n  /**\n   * Check admin permissions\n   */\n  async checkAdminAccess(\n    section: 'users' | 'boards' | 'posts' | 'system' | 'reports' = 'system'\n  ): Promise<CommonResponse<PermissionResult>> {\n    return this.checkPermission({\n      resource: 'admin',\n      action: 'access',\n      context: { section }\n    });\n  }\n\n  /**\n   * Get user level benefits and progression info\n   */\n  async getLevelProgression(userId?: string): Promise<CommonResponse<{\n    currentLevel: LevelInfo;\n    nextLevel?: LevelInfo;\n    progress: {\n      currentPoints: number;\n      pointsToNext: number;\n      progressPercentage: number;\n    };\n    achievements: Array<{\n      id: string;\n      name: string;\n      description: string;\n      unlockedAt: string;\n      level: number;\n    }>;\n  }>> {\n    const endpoint = userId ? `/progression/${userId}` : '/progression/me';\n    return this.getMini<any>(endpoint, '레벨 정보 조회 중...');\n  }\n\n  /**\n   * Ban or unban user (admin only)\n   */\n  async updateUserBanStatus(\n    userId: string,\n    banned: boolean,\n    reason?: string,\n    duration?: number\n  ): Promise<CommonResponse<void>> {\n    return this.patchMini<void, {\n      banned: boolean;\n      reason?: string;\n      duration?: number;\n    }>(\n      `/users/${userId}/ban`,\n      { banned, reason, duration },\n      banned ? '사용자 제재 중...' : '사용자 제재 해제 중...'\n    );\n  }\n\n  /**\n   * Get user's restriction status\n   */\n  async getUserRestrictions(userId: string): Promise<CommonResponse<{\n    isBanned: boolean;\n    bannedUntil?: string;\n    banReason?: string;\n    restrictions: Array<{\n      type: string;\n      reason: string;\n      expiresAt?: string;\n    }>;\n  }>> {\n    return this.get<any>(`/users/${userId}/restrictions`);\n  }\n}\n\n// Legacy support - functional interface (deprecated, use PermissionService class instead)\nconst permissionService = {\n  checkPermission(check: PermissionCheck): Promise<CommonResponse<PermissionResult>> {\n    const service = new PermissionService();\n    return service.checkPermission(check);\n  },\n\n  getMyPermissions(): Promise<CommonResponse<UserPermissions>> {\n    const service = new PermissionService();\n    return service.getMyPermissions();\n  },\n\n  getLevels(): Promise<CommonResponse<LevelInfo[]>> {\n    const service = new PermissionService();\n    return service.getLevels();\n  },\n\n  checkBoardAccess(\n    boardId: number,\n    action: 'read' | 'write' | 'comment' | 'moderate' = 'read'\n  ): Promise<CommonResponse<PermissionResult>> {\n    const service = new PermissionService();\n    return service.checkBoardAccess(boardId, action);\n  },\n\n  checkAdminAccess(\n    section: 'users' | 'boards' | 'posts' | 'system' | 'reports' = 'system'\n  ): Promise<CommonResponse<PermissionResult>> {\n    const service = new PermissionService();\n    return service.checkAdminAccess(section);\n  },\n};\n\nexport { permissionService };\nexport default PermissionService;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/use-sync-external-store-with-selector.production.js');\n} else {\n  module.exports = require('./cjs/use-sync-external-store-with-selector.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = React.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","/**\n * @license React\n * use-sync-external-store-with-selector.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useSyncExternalStore = React.useSyncExternalStore,\n      useRef = React.useRef,\n      useEffect = React.useEffect,\n      useMemo = React.useMemo,\n      useDebugValue = React.useDebugValue;\n    exports.useSyncExternalStoreWithSelector = function (\n      subscribe,\n      getSnapshot,\n      getServerSnapshot,\n      selector,\n      isEqual\n    ) {\n      var instRef = useRef(null);\n      if (null === instRef.current) {\n        var inst = { hasValue: !1, value: null };\n        instRef.current = inst;\n      } else inst = instRef.current;\n      instRef = useMemo(\n        function () {\n          function memoizedSelector(nextSnapshot) {\n            if (!hasMemo) {\n              hasMemo = !0;\n              memoizedSnapshot = nextSnapshot;\n              nextSnapshot = selector(nextSnapshot);\n              if (void 0 !== isEqual && inst.hasValue) {\n                var currentSelection = inst.value;\n                if (isEqual(currentSelection, nextSnapshot))\n                  return (memoizedSelection = currentSelection);\n              }\n              return (memoizedSelection = nextSnapshot);\n            }\n            currentSelection = memoizedSelection;\n            if (objectIs(memoizedSnapshot, nextSnapshot))\n              return currentSelection;\n            var nextSelection = selector(nextSnapshot);\n            if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n              return (memoizedSnapshot = nextSnapshot), currentSelection;\n            memoizedSnapshot = nextSnapshot;\n            return (memoizedSelection = nextSelection);\n          }\n          var hasMemo = !1,\n            memoizedSnapshot,\n            memoizedSelection,\n            maybeGetServerSnapshot =\n              void 0 === getServerSnapshot ? null : getServerSnapshot;\n          return [\n            function () {\n              return memoizedSelector(getSnapshot());\n            },\n            null === maybeGetServerSnapshot\n              ? void 0\n              : function () {\n                  return memoizedSelector(maybeGetServerSnapshot());\n                }\n          ];\n        },\n        [getSnapshot, getServerSnapshot, selector, isEqual]\n      );\n      var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n      useEffect(\n        function () {\n          inst.hasValue = !0;\n          inst.value = value;\n        },\n        [value]\n      );\n      useDebugValue(value);\n      return value;\n    };\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n","// src/utils/react.ts\nimport * as React from \"react\";\n\n// src/utils/react-is.ts\nvar IS_REACT_19 = /* @__PURE__ */ React.version.startsWith(\"19\");\nvar REACT_ELEMENT_TYPE = /* @__PURE__ */ Symbol.for(\n  IS_REACT_19 ? \"react.transitional.element\" : \"react.element\"\n);\nvar REACT_PORTAL_TYPE = /* @__PURE__ */ Symbol.for(\"react.portal\");\nvar REACT_FRAGMENT_TYPE = /* @__PURE__ */ Symbol.for(\"react.fragment\");\nvar REACT_STRICT_MODE_TYPE = /* @__PURE__ */ Symbol.for(\"react.strict_mode\");\nvar REACT_PROFILER_TYPE = /* @__PURE__ */ Symbol.for(\"react.profiler\");\nvar REACT_CONSUMER_TYPE = /* @__PURE__ */ Symbol.for(\"react.consumer\");\nvar REACT_CONTEXT_TYPE = /* @__PURE__ */ Symbol.for(\"react.context\");\nvar REACT_FORWARD_REF_TYPE = /* @__PURE__ */ Symbol.for(\"react.forward_ref\");\nvar REACT_SUSPENSE_TYPE = /* @__PURE__ */ Symbol.for(\"react.suspense\");\nvar REACT_SUSPENSE_LIST_TYPE = /* @__PURE__ */ Symbol.for(\n  \"react.suspense_list\"\n);\nvar REACT_MEMO_TYPE = /* @__PURE__ */ Symbol.for(\"react.memo\");\nvar REACT_LAZY_TYPE = /* @__PURE__ */ Symbol.for(\"react.lazy\");\nvar REACT_OFFSCREEN_TYPE = /* @__PURE__ */ Symbol.for(\"react.offscreen\");\nvar REACT_CLIENT_REFERENCE = /* @__PURE__ */ Symbol.for(\n  \"react.client.reference\"\n);\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nfunction isValidElementType(type) {\n  return typeof type === \"string\" || typeof type === \"function\" || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || typeof type === \"object\" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE || type.getModuleId !== void 0) ? true : false;\n}\nfunction typeOf(object) {\n  if (typeof object === \"object\" && object !== null) {\n    const { $$typeof } = object;\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        switch (object = object.type, object) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return object;\n          default:\n            switch (object = object && object.$$typeof, object) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n                return object;\n              case REACT_CONSUMER_TYPE:\n                return object;\n              default:\n                return $$typeof;\n            }\n        }\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n}\nfunction isContextConsumer(object) {\n  return IS_REACT_19 ? typeOf(object) === REACT_CONSUMER_TYPE : typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\n\n// src/utils/warning.ts\nfunction warning(message) {\n  if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n    console.error(message);\n  }\n  try {\n    throw new Error(message);\n  } catch (e) {\n  }\n}\n\n// src/connect/verifySubselectors.ts\nfunction verify(selector, methodName) {\n  if (!selector) {\n    throw new Error(`Unexpected value for ${methodName} in connect.`);\n  } else if (methodName === \"mapStateToProps\" || methodName === \"mapDispatchToProps\") {\n    if (!Object.prototype.hasOwnProperty.call(selector, \"dependsOnOwnProps\")) {\n      warning(\n        `The selector for ${methodName} of connect did not specify a value for dependsOnOwnProps.`\n      );\n    }\n  }\n}\nfunction verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps) {\n  verify(mapStateToProps, \"mapStateToProps\");\n  verify(mapDispatchToProps, \"mapDispatchToProps\");\n  verify(mergeProps, \"mergeProps\");\n}\n\n// src/connect/selectorFactory.ts\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, {\n  areStatesEqual,\n  areOwnPropsEqual,\n  areStatePropsEqual\n}) {\n  let hasRunAtLeastOnce = false;\n  let state;\n  let ownProps;\n  let stateProps;\n  let dispatchProps;\n  let mergedProps;\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps)\n      dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps)\n      stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps)\n      dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n  function handleNewState() {\n    const nextStateProps = mapStateToProps(state, ownProps);\n    const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged)\n      mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    const stateChanged = !areStatesEqual(\n      nextState,\n      state,\n      nextOwnProps,\n      ownProps\n    );\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n}\nfunction finalPropsSelectorFactory(dispatch, {\n  initMapStateToProps,\n  initMapDispatchToProps,\n  initMergeProps,\n  ...options\n}) {\n  const mapStateToProps = initMapStateToProps(dispatch, options);\n  const mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  const mergeProps = initMergeProps(dispatch, options);\n  if (process.env.NODE_ENV !== \"production\") {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps);\n  }\n  return pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n\n// src/utils/bindActionCreators.ts\nfunction bindActionCreators(actionCreators, dispatch) {\n  const boundActionCreators = {};\n  for (const key in actionCreators) {\n    const actionCreator = actionCreators[key];\n    if (typeof actionCreator === \"function\") {\n      boundActionCreators[key] = (...args) => dispatch(actionCreator(...args));\n    }\n  }\n  return boundActionCreators;\n}\n\n// src/utils/isPlainObject.ts\nfunction isPlainObject(obj) {\n  if (typeof obj !== \"object\" || obj === null) return false;\n  const proto = Object.getPrototypeOf(obj);\n  if (proto === null) return true;\n  let baseProto = proto;\n  while (Object.getPrototypeOf(baseProto) !== null) {\n    baseProto = Object.getPrototypeOf(baseProto);\n  }\n  return proto === baseProto;\n}\n\n// src/utils/verifyPlainObject.ts\nfunction verifyPlainObject(value, displayName, methodName) {\n  if (!isPlainObject(value)) {\n    warning(\n      `${methodName}() in ${displayName} must return a plain object. Instead received ${value}.`\n    );\n  }\n}\n\n// src/connect/wrapMapToProps.ts\nfunction wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch) {\n    const constant = getConstant(dispatch);\n    function constantSelector() {\n      return constant;\n    }\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n}\nfunction getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n}\nfunction wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, { displayName }) {\n    const proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch, void 0);\n    };\n    proxy.dependsOnOwnProps = true;\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      let props = proxy(stateOrDispatch, ownProps);\n      if (typeof props === \"function\") {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n      if (process.env.NODE_ENV !== \"production\")\n        verifyPlainObject(props, displayName, methodName);\n      return props;\n    };\n    return proxy;\n  };\n}\n\n// src/connect/invalidArgFactory.ts\nfunction createInvalidArgFactory(arg, name) {\n  return (dispatch, options) => {\n    throw new Error(\n      `Invalid value of type ${typeof arg} for ${name} argument when connecting component ${options.wrappedComponentName}.`\n    );\n  };\n}\n\n// src/connect/mapDispatchToProps.ts\nfunction mapDispatchToPropsFactory(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === \"object\" ? wrapMapToPropsConstant(\n    (dispatch) => (\n      // @ts-ignore\n      bindActionCreators(mapDispatchToProps, dispatch)\n    )\n  ) : !mapDispatchToProps ? wrapMapToPropsConstant((dispatch) => ({\n    dispatch\n  })) : typeof mapDispatchToProps === \"function\" ? (\n    // @ts-ignore\n    wrapMapToPropsFunc(mapDispatchToProps, \"mapDispatchToProps\")\n  ) : createInvalidArgFactory(mapDispatchToProps, \"mapDispatchToProps\");\n}\n\n// src/connect/mapStateToProps.ts\nfunction mapStateToPropsFactory(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(() => ({})) : typeof mapStateToProps === \"function\" ? (\n    // @ts-ignore\n    wrapMapToPropsFunc(mapStateToProps, \"mapStateToProps\")\n  ) : createInvalidArgFactory(mapStateToProps, \"mapStateToProps\");\n}\n\n// src/connect/mergeProps.ts\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return { ...ownProps, ...stateProps, ...dispatchProps };\n}\nfunction wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, { displayName, areMergedPropsEqual }) {\n    let hasRunOnce = false;\n    let mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n      if (hasRunOnce) {\n        if (!areMergedPropsEqual(nextMergedProps, mergedProps))\n          mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== \"production\")\n          verifyPlainObject(mergedProps, displayName, \"mergeProps\");\n      }\n      return mergedProps;\n    };\n  };\n}\nfunction mergePropsFactory(mergeProps) {\n  return !mergeProps ? () => defaultMergeProps : typeof mergeProps === \"function\" ? wrapMergePropsFunc(mergeProps) : createInvalidArgFactory(mergeProps, \"mergeProps\");\n}\n\n// src/utils/batch.ts\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\n// src/utils/Subscription.ts\nfunction createListenerCollection() {\n  let first = null;\n  let last = null;\n  return {\n    clear() {\n      first = null;\n      last = null;\n    },\n    notify() {\n      defaultNoopBatch(() => {\n        let listener = first;\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n    get() {\n      const listeners = [];\n      let listener = first;\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n      return listeners;\n    },\n    subscribe(callback) {\n      let isSubscribed = true;\n      const listener = last = {\n        callback,\n        next: null,\n        prev: last\n      };\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n  };\n}\nvar nullListeners = {\n  notify() {\n  },\n  get: () => []\n};\nfunction createSubscription(store, parentSub) {\n  let unsubscribe;\n  let listeners = nullListeners;\n  let subscriptionsAmount = 0;\n  let selfSubscribed = false;\n  function addNestedSub(listener) {\n    trySubscribe();\n    const cleanupListener = listeners.subscribe(listener);\n    let removed = false;\n    return () => {\n      if (!removed) {\n        removed = true;\n        cleanupListener();\n        tryUnsubscribe();\n      }\n    };\n  }\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n  function isSubscribed() {\n    return selfSubscribed;\n  }\n  function trySubscribe() {\n    subscriptionsAmount++;\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n  function tryUnsubscribe() {\n    subscriptionsAmount--;\n    if (unsubscribe && subscriptionsAmount === 0) {\n      unsubscribe();\n      unsubscribe = void 0;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n  function trySubscribeSelf() {\n    if (!selfSubscribed) {\n      selfSubscribed = true;\n      trySubscribe();\n    }\n  }\n  function tryUnsubscribeSelf() {\n    if (selfSubscribed) {\n      selfSubscribed = false;\n      tryUnsubscribe();\n    }\n  }\n  const subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe: trySubscribeSelf,\n    tryUnsubscribe: tryUnsubscribeSelf,\n    getListeners: () => listeners\n  };\n  return subscription;\n}\n\n// src/utils/useIsomorphicLayoutEffect.ts\nvar canUseDOM = () => !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nvar isDOM = /* @__PURE__ */ canUseDOM();\nvar isRunningInReactNative = () => typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\nvar isReactNative = /* @__PURE__ */ isRunningInReactNative();\nvar getUseIsomorphicLayoutEffect = () => isDOM || isReactNative ? React.useLayoutEffect : React.useEffect;\nvar useIsomorphicLayoutEffect = /* @__PURE__ */ getUseIsomorphicLayoutEffect();\n\n// src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// src/utils/hoistStatics.ts\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  $$typeof: true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  $$typeof: true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {\n  [ForwardRef]: FORWARD_REF_STATICS,\n  [Memo]: MEMO_STATICS\n};\nfunction getStatics(component) {\n  if (isMemo(component)) {\n    return MEMO_STATICS;\n  }\n  return TYPE_STATICS[component[\"$$typeof\"]] || REACT_STATICS;\n}\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent) {\n  if (typeof sourceComponent !== \"string\") {\n    if (objectPrototype) {\n      const inheritedComponent = getPrototypeOf(sourceComponent);\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent);\n      }\n    }\n    let keys = getOwnPropertyNames(sourceComponent);\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n    const targetStatics = getStatics(targetComponent);\n    const sourceStatics = getStatics(sourceComponent);\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (!KNOWN_STATICS[key] && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        const descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n        try {\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {\n        }\n      }\n    }\n  }\n  return targetComponent;\n}\n\n// src/components/Context.ts\nvar ContextKey = /* @__PURE__ */ Symbol.for(`react-redux-context`);\nvar gT = typeof globalThis !== \"undefined\" ? globalThis : (\n  /* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */\n  {}\n);\nfunction getContext() {\n  if (!React.createContext) return {};\n  const contextMap = gT[ContextKey] ??= /* @__PURE__ */ new Map();\n  let realContext = contextMap.get(React.createContext);\n  if (!realContext) {\n    realContext = React.createContext(\n      null\n    );\n    if (process.env.NODE_ENV !== \"production\") {\n      realContext.displayName = \"ReactRedux\";\n    }\n    contextMap.set(React.createContext, realContext);\n  }\n  return realContext;\n}\nvar ReactReduxContext = /* @__PURE__ */ getContext();\n\n// src/components/connect.tsx\nvar NO_SUBSCRIPTION_ARRAY = [null, null];\nvar stringifyComponent = (Comp) => {\n  try {\n    return JSON.stringify(Comp);\n  } catch (err) {\n    return String(Comp);\n  }\n};\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies);\n}\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs) {\n  lastWrapperProps.current = wrapperProps;\n  renderIsScheduled.current = false;\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null;\n    notifyNestedSubs();\n  }\n}\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, additionalSubscribeListener) {\n  if (!shouldHandleStateChanges) return () => {\n  };\n  let didUnsubscribe = false;\n  let lastThrownError = null;\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      return;\n    }\n    const latestStoreState = store.getState();\n    let newChildProps, error;\n    try {\n      newChildProps = childPropsSelector(\n        latestStoreState,\n        lastWrapperProps.current\n      );\n    } catch (e) {\n      error = e;\n      lastThrownError = e;\n    }\n    if (!error) {\n      lastThrownError = null;\n    }\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs();\n      }\n    } else {\n      lastChildProps.current = newChildProps;\n      childPropsFromStoreUpdate.current = newChildProps;\n      renderIsScheduled.current = true;\n      additionalSubscribeListener();\n    }\n  };\n  subscription.onStateChange = checkForUpdates;\n  subscription.trySubscribe();\n  checkForUpdates();\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true;\n    subscription.tryUnsubscribe();\n    subscription.onStateChange = null;\n    if (lastThrownError) {\n      throw lastThrownError;\n    }\n  };\n  return unsubscribeWrapper;\n}\nfunction strictEqual(a, b) {\n  return a === b;\n}\nvar hasWarnedAboutDeprecatedPureOption = false;\nfunction connect(mapStateToProps, mapDispatchToProps, mergeProps, {\n  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n  // @ts-ignore\n  pure,\n  areStatesEqual = strictEqual,\n  areOwnPropsEqual = shallowEqual,\n  areStatePropsEqual = shallowEqual,\n  areMergedPropsEqual = shallowEqual,\n  // use React's forwardRef to expose a ref of the wrapped component\n  forwardRef = false,\n  // the context consumer to use\n  context = ReactReduxContext\n} = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (pure !== void 0 && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true;\n      warning(\n        'The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component'\n      );\n    }\n  }\n  const Context = context;\n  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps);\n  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);\n  const initMergeProps = mergePropsFactory(mergeProps);\n  const shouldHandleStateChanges = Boolean(mapStateToProps);\n  const wrapWithConnect = (WrappedComponent) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      const isValid = /* @__PURE__ */ isValidElementType(WrappedComponent);\n      if (!isValid)\n        throw new Error(\n          `You must pass a component to the function returned by connect. Instead received ${stringifyComponent(\n            WrappedComponent\n          )}`\n        );\n    }\n    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n    const displayName = `Connect(${wrappedComponentName})`;\n    const selectorFactoryOptions = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual\n    };\n    function ConnectFunction(props) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] = React.useMemo(() => {\n        const { reactReduxForwardedRef: reactReduxForwardedRef2, ...wrapperProps2 } = props;\n        return [props.context, reactReduxForwardedRef2, wrapperProps2];\n      }, [props]);\n      const ContextToUse = React.useMemo(() => {\n        let ResultContext = Context;\n        if (propsContext?.Consumer) {\n          if (process.env.NODE_ENV !== \"production\") {\n            const isValid = /* @__PURE__ */ isContextConsumer(\n              // @ts-ignore\n              /* @__PURE__ */ React.createElement(propsContext.Consumer, null)\n            );\n            if (!isValid) {\n              throw new Error(\n                \"You must pass a valid React context consumer as `props.context`\"\n              );\n            }\n            ResultContext = propsContext;\n          }\n        }\n        return ResultContext;\n      }, [propsContext, Context]);\n      const contextValue = React.useContext(ContextToUse);\n      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n      if (process.env.NODE_ENV !== \"production\" && !didStoreComeFromProps && !didStoreComeFromContext) {\n        throw new Error(\n          `Could not find \"store\" in the context of \"${displayName}\". Either wrap the root component in a <Provider>, or pass a custom React context provider to <Provider> and the corresponding React context consumer to ${displayName} in connect options.`\n        );\n      }\n      const store = didStoreComeFromProps ? props.store : contextValue.store;\n      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;\n      const childPropsSelector = React.useMemo(() => {\n        return finalPropsSelectorFactory(store.dispatch, selectorFactoryOptions);\n      }, [store]);\n      const [subscription, notifyNestedSubs] = React.useMemo(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY;\n        const subscription2 = createSubscription(\n          store,\n          didStoreComeFromProps ? void 0 : contextValue.subscription\n        );\n        const notifyNestedSubs2 = subscription2.notifyNestedSubs.bind(subscription2);\n        return [subscription2, notifyNestedSubs2];\n      }, [store, didStoreComeFromProps, contextValue]);\n      const overriddenContextValue = React.useMemo(() => {\n        if (didStoreComeFromProps) {\n          return contextValue;\n        }\n        return {\n          ...contextValue,\n          subscription\n        };\n      }, [didStoreComeFromProps, contextValue, subscription]);\n      const lastChildProps = React.useRef(void 0);\n      const lastWrapperProps = React.useRef(wrapperProps);\n      const childPropsFromStoreUpdate = React.useRef(void 0);\n      const renderIsScheduled = React.useRef(false);\n      const isMounted = React.useRef(false);\n      const latestSubscriptionCallbackError = React.useRef(\n        void 0\n      );\n      useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n          isMounted.current = false;\n        };\n      }, []);\n      const actualChildPropsSelector = React.useMemo(() => {\n        const selector = () => {\n          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n            return childPropsFromStoreUpdate.current;\n          }\n          return childPropsSelector(store.getState(), wrapperProps);\n        };\n        return selector;\n      }, [store, wrapperProps]);\n      const subscribeForReact = React.useMemo(() => {\n        const subscribe = (reactListener) => {\n          if (!subscription) {\n            return () => {\n            };\n          }\n          return subscribeUpdates(\n            shouldHandleStateChanges,\n            store,\n            subscription,\n            // @ts-ignore\n            childPropsSelector,\n            lastWrapperProps,\n            lastChildProps,\n            renderIsScheduled,\n            isMounted,\n            childPropsFromStoreUpdate,\n            notifyNestedSubs,\n            reactListener\n          );\n        };\n        return subscribe;\n      }, [subscription]);\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [\n        lastWrapperProps,\n        lastChildProps,\n        renderIsScheduled,\n        wrapperProps,\n        childPropsFromStoreUpdate,\n        notifyNestedSubs\n      ]);\n      let actualChildProps;\n      try {\n        actualChildProps = React.useSyncExternalStore(\n          // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n          subscribeForReact,\n          // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n          // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n          actualChildPropsSelector,\n          getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector\n        );\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          ;\n          err.message += `\nThe error may be correlated with this previous error:\n${latestSubscriptionCallbackError.current.stack}\n\n`;\n        }\n        throw err;\n      }\n      useIsomorphicLayoutEffect(() => {\n        latestSubscriptionCallbackError.current = void 0;\n        childPropsFromStoreUpdate.current = void 0;\n        lastChildProps.current = actualChildProps;\n      });\n      const renderedWrappedComponent = React.useMemo(() => {\n        return (\n          // @ts-ignore\n          /* @__PURE__ */ React.createElement(\n            WrappedComponent,\n            {\n              ...actualChildProps,\n              ref: reactReduxForwardedRef\n            }\n          )\n        );\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]);\n      const renderedChild = React.useMemo(() => {\n        if (shouldHandleStateChanges) {\n          return /* @__PURE__ */ React.createElement(ContextToUse.Provider, { value: overriddenContextValue }, renderedWrappedComponent);\n        }\n        return renderedWrappedComponent;\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);\n      return renderedChild;\n    }\n    const _Connect = React.memo(ConnectFunction);\n    const Connect = _Connect;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = ConnectFunction.displayName = displayName;\n    if (forwardRef) {\n      const _forwarded = React.forwardRef(\n        function forwardConnectRef(props, ref) {\n          return /* @__PURE__ */ React.createElement(Connect, { ...props, reactReduxForwardedRef: ref });\n        }\n      );\n      const forwarded = _forwarded;\n      forwarded.displayName = displayName;\n      forwarded.WrappedComponent = WrappedComponent;\n      return /* @__PURE__ */ hoistNonReactStatics(forwarded, WrappedComponent);\n    }\n    return /* @__PURE__ */ hoistNonReactStatics(Connect, WrappedComponent);\n  };\n  return wrapWithConnect;\n}\nvar connect_default = connect;\n\n// src/components/Provider.tsx\nfunction Provider(providerProps) {\n  const { children, context, serverState, store } = providerProps;\n  const contextValue = React.useMemo(() => {\n    const subscription = createSubscription(store);\n    const baseContextValue = {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : void 0\n    };\n    if (process.env.NODE_ENV === \"production\") {\n      return baseContextValue;\n    } else {\n      const { identityFunctionCheck = \"once\", stabilityCheck = \"once\" } = providerProps;\n      return /* @__PURE__ */ Object.assign(baseContextValue, {\n        stabilityCheck,\n        identityFunctionCheck\n      });\n    }\n  }, [store, serverState]);\n  const previousState = React.useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const { subscription } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = void 0;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext;\n  return /* @__PURE__ */ React.createElement(Context.Provider, { value: contextValue }, children);\n}\nvar Provider_default = Provider;\n\n// src/hooks/useReduxContext.ts\nfunction createReduxContextHook(context = ReactReduxContext) {\n  return function useReduxContext2() {\n    const contextValue = React.useContext(context);\n    if (process.env.NODE_ENV !== \"production\" && !contextValue) {\n      throw new Error(\n        \"could not find react-redux context value; please ensure the component is wrapped in a <Provider>\"\n      );\n    }\n    return contextValue;\n  };\n}\nvar useReduxContext = /* @__PURE__ */ createReduxContextHook();\n\n// src/hooks/useStore.ts\nfunction createStoreHook(context = ReactReduxContext) {\n  const useReduxContext2 = context === ReactReduxContext ? useReduxContext : (\n    // @ts-ignore\n    createReduxContextHook(context)\n  );\n  const useStore2 = () => {\n    const { store } = useReduxContext2();\n    return store;\n  };\n  Object.assign(useStore2, {\n    withTypes: () => useStore2\n  });\n  return useStore2;\n}\nvar useStore = /* @__PURE__ */ createStoreHook();\n\n// src/hooks/useDispatch.ts\nfunction createDispatchHook(context = ReactReduxContext) {\n  const useStore2 = context === ReactReduxContext ? useStore : createStoreHook(context);\n  const useDispatch2 = () => {\n    const store = useStore2();\n    return store.dispatch;\n  };\n  Object.assign(useDispatch2, {\n    withTypes: () => useDispatch2\n  });\n  return useDispatch2;\n}\nvar useDispatch = /* @__PURE__ */ createDispatchHook();\n\n// src/hooks/useSelector.ts\nimport { useSyncExternalStoreWithSelector } from \"use-sync-external-store/with-selector.js\";\nvar refEquality = (a, b) => a === b;\nfunction createSelectorHook(context = ReactReduxContext) {\n  const useReduxContext2 = context === ReactReduxContext ? useReduxContext : createReduxContextHook(context);\n  const useSelector2 = (selector, equalityFnOrOptions = {}) => {\n    const { equalityFn = refEquality } = typeof equalityFnOrOptions === \"function\" ? { equalityFn: equalityFnOrOptions } : equalityFnOrOptions;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`);\n      }\n      if (typeof selector !== \"function\") {\n        throw new Error(`You must pass a function as a selector to useSelector`);\n      }\n      if (typeof equalityFn !== \"function\") {\n        throw new Error(\n          `You must pass a function as an equality function to useSelector`\n        );\n      }\n    }\n    const reduxContext = useReduxContext2();\n    const { store, subscription, getServerState } = reduxContext;\n    const firstRun = React.useRef(true);\n    const wrappedSelector = React.useCallback(\n      {\n        [selector.name](state) {\n          const selected = selector(state);\n          if (process.env.NODE_ENV !== \"production\") {\n            const { devModeChecks = {} } = typeof equalityFnOrOptions === \"function\" ? {} : equalityFnOrOptions;\n            const { identityFunctionCheck, stabilityCheck } = reduxContext;\n            const {\n              identityFunctionCheck: finalIdentityFunctionCheck,\n              stabilityCheck: finalStabilityCheck\n            } = {\n              stabilityCheck,\n              identityFunctionCheck,\n              ...devModeChecks\n            };\n            if (finalStabilityCheck === \"always\" || finalStabilityCheck === \"once\" && firstRun.current) {\n              const toCompare = selector(state);\n              if (!equalityFn(selected, toCompare)) {\n                let stack = void 0;\n                try {\n                  throw new Error();\n                } catch (e) {\n                  ;\n                  ({ stack } = e);\n                }\n                console.warn(\n                  \"Selector \" + (selector.name || \"unknown\") + \" returned a different result when called with the same parameters. This can lead to unnecessary rerenders.\\nSelectors that return a new reference (such as an object or an array) should be memoized: https://redux.js.org/usage/deriving-data-selectors#optimizing-selectors-with-memoization\",\n                  {\n                    state,\n                    selected,\n                    selected2: toCompare,\n                    stack\n                  }\n                );\n              }\n            }\n            if (finalIdentityFunctionCheck === \"always\" || finalIdentityFunctionCheck === \"once\" && firstRun.current) {\n              if (selected === state) {\n                let stack = void 0;\n                try {\n                  throw new Error();\n                } catch (e) {\n                  ;\n                  ({ stack } = e);\n                }\n                console.warn(\n                  \"Selector \" + (selector.name || \"unknown\") + \" returned the root state when called. This can lead to unnecessary rerenders.\\nSelectors that return the entire state are almost certainly a mistake, as they will cause a rerender whenever *anything* in state changes.\",\n                  { stack }\n                );\n              }\n            }\n            if (firstRun.current) firstRun.current = false;\n          }\n          return selected;\n        }\n      }[selector.name],\n      [selector]\n    );\n    const selectedState = useSyncExternalStoreWithSelector(\n      subscription.addNestedSub,\n      store.getState,\n      getServerState || store.getState,\n      wrappedSelector,\n      equalityFn\n    );\n    React.useDebugValue(selectedState);\n    return selectedState;\n  };\n  Object.assign(useSelector2, {\n    withTypes: () => useSelector2\n  });\n  return useSelector2;\n}\nvar useSelector = /* @__PURE__ */ createSelectorHook();\n\n// src/exports.ts\nvar batch = defaultNoopBatch;\nexport {\n  Provider_default as Provider,\n  ReactReduxContext,\n  batch,\n  connect_default as connect,\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useStore\n};\n//# sourceMappingURL=react-redux.mjs.map","\"use client\";\nimport { updateDeviceTypeFromWidth } from \"@redux/Features/App/appSlice\";\nimport { RootState } from \"@redux/stores\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const useDeviceType = () => {\n  const dispatch = useDispatch();\n  const deviceType = useSelector((state: RootState) => state.app.deviceType);\n\n  useEffect(() => {\n    // 초기 디바이스 타입 설정\n    const updateDeviceType = () => {\n      dispatch(updateDeviceTypeFromWidth(window.innerWidth));\n    };\n\n    // 초기 설정\n    updateDeviceType();\n\n    // 리사이즈 이벤트 리스너 추가\n    window.addEventListener(\"resize\", updateDeviceType);\n\n    // 클린업\n    return () => {\n      window.removeEventListener(\"resize\", updateDeviceType);\n    };\n  }, [dispatch]);\n\n  // 편의 함수들\n  const isMobile = deviceType === \"mobile\";\n  const isTablet = deviceType === \"tablet\";\n  const isDesktop = deviceType === \"desktop\";\n  const isMobileOrTablet = deviceType === \"mobile\" || deviceType === \"tablet\";\n\n  return {\n    deviceType,\n    isMobile,\n    isTablet,\n    isDesktop,\n    isMobileOrTablet,\n  };\n}; ","import {\n  hideAllLoaders,\n  hideLoading,\n  hideMiniLoading,\n  selectUIState,\n  setLoadingText,\n  setMiniLoadingText,\n  showLoading,\n  showMiniLoading\n} from \"@redux/Features/UI/uiSlice\";\nimport { useCallback } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"./index\";\n\nexport const useGlobalLoader = () => {\n  const dispatch = useAppDispatch();\n  const { isAutoTransitioned } = useAppSelector(selectUIState);\n\n  // 기본 로더 (미니로더 사용) - 게시글 작성 외 모든 상황에서 사용\n  const showLoader = useCallback((text?: string) => {\n    dispatch(showMiniLoading(text));\n  }, [dispatch]);\n\n  const hideLoader = useCallback(() => {\n    dispatch(hideMiniLoading());\n  }, [dispatch]);\n\n  const setLoaderText = useCallback((text?: string) => {\n    dispatch(setMiniLoadingText(text));\n  }, [dispatch]);\n\n  const withLoader = useCallback(\n    async <T>(asyncFn: () => Promise<T>): Promise<T> => {\n      try {\n        showLoader();\n        const result = await asyncFn();\n        return result;\n      } finally {\n        hideLoader();\n      }\n    },\n    [showLoader, hideLoader]\n  );\n\n  // 게시글 작성용 풀스크린 로더\n  const showPostLoader = useCallback((text?: string) => {\n    dispatch(showLoading(text));\n  }, [dispatch]);\n\n  const hidePostLoader = useCallback(() => {\n    // 자동 전환된 경우 모든 로더를 종료\n    if (isAutoTransitioned) {\n      dispatch(hideAllLoaders());\n    } else {\n      dispatch(hideLoading());\n    }\n  }, [dispatch, isAutoTransitioned]);\n\n  const setPostLoaderText = useCallback((text?: string) => {\n    dispatch(setLoadingText(text));\n  }, [dispatch]);\n\n  const withPostLoader = useCallback(\n    async <T>(asyncFn: () => Promise<T>): Promise<T> => {\n      try {\n        showPostLoader();\n        const result = await asyncFn();\n        return result;\n      } finally {\n        hidePostLoader();\n      }\n    },\n    [showPostLoader, hidePostLoader]\n  );\n\n  // Mini 로더 관련 함수들 (직접 사용할 때)\n  const showMiniLoader = useCallback((text?: string) => {\n    dispatch(showMiniLoading(text));\n  }, [dispatch]);\n\n  const hideMiniLoader = useCallback(() => {\n    dispatch(hideMiniLoading());\n  }, [dispatch]);\n\n  const setMiniLoaderText = useCallback((text?: string) => {\n    dispatch(setMiniLoadingText(text));\n  }, [dispatch]);\n\n  const withMiniLoader = useCallback(\n    async <T>(asyncFn: () => Promise<T>): Promise<T> => {\n      try {\n        showMiniLoader();\n        const result = await asyncFn();\n        return result;\n      } finally {\n        hideMiniLoader();\n      }\n    },\n    [showMiniLoader, hideMiniLoader]\n  );\n\n  return {\n    // 기본 로더 (이제 미니로더 사용) - 게시글 작성 외 모든 상황\n    showLoader,\n    hideLoader,\n    withLoader,\n    setLoaderText,\n    \n    // 게시글 작성용 풀스크린 로더\n    showPostLoader,\n    hidePostLoader,\n    withPostLoader,\n    setPostLoaderText,\n    \n    // 직접 미니 로더 제어\n    showMiniLoader,\n    hideMiniLoader,\n    withMiniLoader,\n    setMiniLoaderText,\n  };\n}; ","'use client';\n\nimport { useAppDispatch, useAppSelector } from '@hooks/common';\nimport { showToast } from '@redux/Features/Toast/toastSlice';\nimport { selectUserInfo } from '@redux/Features/User/userSlice';\nimport { getUserLevel, hasLevelPermission, isAdmin } from '@util/authUtil';\nimport { getCurrentUserFromToken } from '@util/jwtUtil';\nimport { useCallback, useEffect, useState } from 'react';\n\nexport const usePermission = () => {\n  const dispatch = useAppDispatch();\n  const userInfo = useAppSelector(selectUserInfo);\n  const reduxUser = userInfo?.userInfo;\n  const [jwtUser, setJwtUser] = useState<any>(null);\n\n  // 현재 사용자: Redux 사용자 정보를 우선하되, 없으면 JWT 정보 사용 (극히 예외적 상황)\n  const currentUser = reduxUser || jwtUser;\n  const userLevel = getUserLevel(currentUser);\n  const adminStatus = isAdmin(currentUser);\n  const isLoggedIn = userInfo?.isLoggedIn || !!jwtUser;\n\n  // JWT 토큰에서 사용자 정보 가져오기 (Redux에 정보가 없을 때만 대비용)\n  useEffect(() => {\n    const getJwtUser = async () => {\n      // Redux에 사용자 정보가 이미 있으면 JWT 조회 생략\n      if (reduxUser) {\n        setJwtUser(null);\n        return;\n      }\n\n      try {\n        const tokenUser = await getCurrentUserFromToken();\n        setJwtUser(tokenUser);\n      } catch (error) {\n        // JWT 토큰이 없거나 유효하지 않은 경우\n        setJwtUser(null);\n      }\n    };\n\n    getJwtUser();\n  }, [reduxUser]);\n\n  // 권한 체크 함수 - Redux store 정보 우선 사용 (동기 처리)\n  const checkPermission = useCallback(\n    (requiredLevel?: number) => {\n      if (requiredLevel === undefined) return true;\n\n      // Redux store의 사용자 정보가 있으면 우선 사용 (이것이 일반적인 경우)\n      if (reduxUser) {\n        return hasLevelPermission(reduxUser, requiredLevel);\n      }\n\n      // Redux에 정보가 없는 예외적 상황에서만 JWT 사용\n      if (jwtUser) {\n        console.warn(\n          'Redux store에 사용자 정보가 없어 JWT 토큰 정보를 사용합니다.'\n        );\n        return hasLevelPermission(jwtUser, requiredLevel);\n      }\n\n      // 사용자 정보가 전혀 없는 경우\n      return requiredLevel === 0;\n    },\n    [reduxUser, jwtUser]\n  );\n\n  // 권한이 없는 경우 토스트 메시지 표시\n  const showAccessDeniedToast = useCallback(() => {\n    dispatch(\n      showToast({\n        title: '접근 권한이 없습니다.',\n        content: '해당 메뉴에 접근할 권한이 없습니다.',\n        headerTextColor: 'text-red-500',\n      })\n    );\n  }, [dispatch]);\n\n  return {\n    checkPermission,\n    showAccessDeniedToast,\n    userLevel,\n    isAdmin: adminStatus,\n    isLoggedIn,\n    currentUser,\n  };\n};\n","\"use client\";\nimport { useRouter as useNextRouter, usePathname } from \"next/navigation\";\nimport { useCallback, useEffect } from \"react\";\nimport { useGlobalLoader } from \"./useGlobalLoader\";\n\nexport const useRouterWithLoader = () => {\n  const router = useNextRouter();\n  const pathname = usePathname();\n  const { showMiniLoader, hideMiniLoader } = useGlobalLoader();\n\n  // 페이지 이동 완료 시 로더 숨기기\n  useEffect(() => {\n    // pathname이 변경되면 로더를 숨김\n    hideMiniLoader();\n  }, [pathname, hideMiniLoader]);\n\n  // 경로 비교 및 외부 도메인 체크 함수\n  const shouldShowLoader = useCallback((href: string): boolean => {\n    try {\n      let targetPath: string;\n      let isExternalDomain = false;\n\n      // 절대 URL인 경우\n      if (href.startsWith('http')) {\n        const targetUrl = new URL(href);\n        const currentDomain = window.location.hostname;\n        \n        // 외부 도메인인지 확인\n        isExternalDomain = targetUrl.hostname !== currentDomain;\n        targetPath = targetUrl.pathname;\n      } \n      // 상대 URL인 경우\n      else {\n        targetPath = href.split('?')[0].split('#')[0]; // 쿼리파라미터와 해시 제거\n      }\n      \n      // 외부 도메인이거나 현재 경로와 같은 경우 로더 표시하지 않음\n      if (isExternalDomain || targetPath === pathname) {\n        return false;\n      }\n      \n      return true;\n    } catch {\n      // URL 파싱 실패 시 - 외부 링크가 아닌 경우에만 로더 표시\n      return !href.startsWith('http');\n    }\n  }, [pathname]);\n\n  // router.push를 래핑하여 필요한 경우에만 로더를 표시\n  const push = useCallback(\n    (href: string, options?: { scroll?: boolean }) => {\n      if (shouldShowLoader(href)) {\n        showMiniLoader(\"페이지를 이동하는 중입니다.\");\n      }\n      return router.push(href, options);\n    },\n    [router, showMiniLoader, shouldShowLoader]\n  );\n\n  // router.replace를 래핑하여 필요한 경우에만 로더를 표시\n  const replace = useCallback(\n    (href: string, options?: { scroll?: boolean }) => {\n      if (shouldShowLoader(href)) {\n        showMiniLoader(\"페이지를 이동하는 중입니다.\");\n      }\n      return router.replace(href, options);\n    },\n    [router, showMiniLoader, shouldShowLoader]\n  );\n\n  // 다른 router 메서드들은 그대로 전달\n  return {\n    ...router,\n    push,\n    replace,\n  };\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport type { AppDispatch, RootState } from \"@redux/stores\";\nimport userService from \"@services/userService\";\nimport { debounce, throttle } from \"lodash\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n// import { geohashForLocation } from 'geofire-common';\n// import Geocode from '@config/Geocode';\n// import type { GeoLocation } from '@model/Shop';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const useDebounce = (lazyFn: any) => {\n  return debounce(lazyFn, 200);\n};\n\nexport const useThrottle = (lazyFn: (...args: unknown[]) => void) => {\n  return throttle(lazyFn, 200);\n};\n\nexport const useImageUpload = () => {\n  const uploadPreviewImage = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    lazyFn?: ({\n      file,\n      result,\n    }: {\n      file: File;\n      result: string | ArrayBuffer | null;\n    }) => void\n  ) => {\n    if (e.currentTarget.files) {\n      const file = e.currentTarget.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        const { result } = reader;\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        lazyFn && lazyFn({ file, result });\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return { uploadPreviewImage };\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const getRealtimeUser = async (): Promise<string> => {\n  const res = await userService.getRealtimeUser();\n\n  if (res.successOrNot === \"N\") {\n    return \"0\";\n  }\n  return res.data || \"0\";\n};\n\nexport { useDeviceType } from \"./useDeviceType\";\nexport { useGlobalLoader } from './useGlobalLoader';\nexport { useGlobalPopup } from './useGlobalPopup';\nexport { useNavigation } from './useNavigation';\nexport { usePermission } from './usePermission';\nexport { useRouterWithLoader } from './useRouterWithLoader';\nexport { useSafeGlobalLoader } from './useSafeGlobalLoader';\n\n","\"use client\";\n\nimport { useAppDispatch, useAppSelector } from \"@hooks/common\";\nimport { useGlobalLoader } from \"@hooks/common/useGlobalLoader\";\nimport { useRouterWithLoader } from \"@hooks/common/useRouterWithLoader\";\nimport { showToast } from \"@redux/Features/Toast/toastSlice\";\nimport type { LoginFormData } from \"@redux/Features/User/userSlice\";\nimport { autoLogin, login, logout, selectUserInfo } from \"@redux/Features/User/userSlice\";\nimport { useCallback } from \"react\";\n\nexport const useAuth = () => {\n  const dispatch = useAppDispatch();\n  const userState = useAppSelector(selectUserInfo);\n  const { withLoader, showLoader, hideLoader } = useGlobalLoader();\n  const router = useRouterWithLoader();\n\n  // 로딩과 함께 로그인 처리\n  const loginWithLoader = useCallback(async (loginData: LoginFormData) => {\n    return withLoader(async () => {\n      const result = await dispatch(login(loginData));\n      \n      if (login.fulfilled.match(result)) {\n        dispatch(showToast({\n          title: \"로그인 성공\",\n          content: `환영합니다, ${result.payload.nickname}님!`,\n          headerTextColor: \"text-green-500\",\n        }));\n        return { success: true, user: result.payload };\n      } else {\n        const errorMessage = result.payload?.result || \"로그인에 실패했습니다.\";\n        dispatch(showToast({\n          title: \"로그인 실패\",\n          content: errorMessage,\n          headerTextColor: \"text-red-500\",\n        }));\n        return { success: false, error: errorMessage };\n      }\n    });\n  }, [dispatch, withLoader]);\n\n  // 로딩과 함께 로그아웃 처리\n  const logoutWithLoader = useCallback(async () => {\n    return withLoader(async () => {\n      const result = await dispatch(logout());\n      \n      if (logout.fulfilled.match(result)) {\n        dispatch(showToast({\n          title: \"로그아웃 완료\",\n          content: \"안전하게 로그아웃되었습니다.\",\n          headerTextColor: \"text-blue-500\",\n        }));\n        \n        // 메인 페이지로 이동\n        router.push(\"/\");\n        return { success: true };\n      } else {\n        const errorMessage = result.payload?.result || \"로그아웃에 실패했습니다.\";\n        dispatch(showToast({\n          title: \"로그아웃 실패\",\n          content: errorMessage,\n          headerTextColor: \"text-red-500\",\n        }));\n        return { success: false, error: errorMessage };\n      }\n    });\n  }, [dispatch, withLoader, router]);\n\n  // 자동 로그인 (초기화 시)\n  const initializeAuth = useCallback(async () => {\n    try {\n      showLoader(\"인증 정보를 확인하는 중입니다...\");\n      const result = await dispatch(autoLogin());\n      \n      if (autoLogin.fulfilled.match(result)) {\n        // console.log(\"자동 로그인 성공:\", result.payload.nickname);\n        return { success: true, user: result.payload };\n      } else {\n        // console.log(\"자동 로그인 실패 또는 세션 없음\");\n        return { success: false, error: result.payload?.result };\n      }\n    } finally {\n      hideLoader();\n    }\n  }, [dispatch, showLoader, hideLoader]);\n\n  // 세션 상태 확인 (수동 호출용)\n  const checkSession = useCallback(async () => {\n    try {\n      const { getCurrentUserFromToken, isTokenExpired } = await import(\"@util/jwtUtil\");\n      const tokenPayload = await getCurrentUserFromToken();\n      \n      if (!tokenPayload) {\n        return { valid: false, reason: \"NO_TOKEN\" };\n      }\n      \n      if (isTokenExpired(tokenPayload)) {\n        return { valid: false, reason: \"EXPIRED\" };\n      }\n      \n      return { valid: true, user: tokenPayload };\n    } catch (error) {\n      console.error(\"세션 확인 실패:\", error);\n      return { valid: false, reason: \"ERROR\" };\n    }\n  }, []);\n\n  // 권한 체크와 함께 페이지 이동\n  const navigateWithAuth = useCallback(async (\n    path: string, \n    requiredLevel?: number,\n    adminOnly?: boolean\n  ) => {\n    const sessionCheck = await checkSession();\n    \n    if (!sessionCheck.valid) {\n      dispatch(showToast({\n        title: \"로그인 필요\",\n        content: \"로그인이 필요한 서비스입니다.\",\n        headerTextColor: \"text-orange-500\",\n      }));\n      return false;\n    }\n\n    // 권한 체크 로직 추가 가능\n    if (adminOnly && sessionCheck.user && !sessionCheck.user.is_admin) {\n      dispatch(showToast({\n        title: \"권한 부족\",\n        content: \"관리자만 접근할 수 있습니다.\",\n        headerTextColor: \"text-red-500\",\n      }));\n      return false;\n    }\n\n    router.push(path);\n    return true;\n  }, [checkSession, dispatch, router]);\n\n  return {\n    // 상태\n    userState,\n    isLoggedIn: userState.isLoggedIn,\n    user: userState.userInfo,\n    error: userState.error,\n    \n    // 액션들\n    loginWithLoader,\n    logoutWithLoader,\n    initializeAuth,\n    checkSession,\n    navigateWithAuth,\n    \n    // 편의 함수들\n    isAdmin: () => \n      (userState.userInfo?.permissionType === 'admin' || \n      userState.userInfo?.permissionType === 'super_admin') &&\n      (userState.userInfo?.level ?? 0) >= 99,\n    isUser: () => userState.isLoggedIn && userState.userInfo,\n  };\n}; ","'use client';\n\nimport { useAppSelector } from '@hooks/common';\nimport type { AuthErrorType } from '@organisms/AuthErrorHandler';\nimport { selectUserInfo } from '@redux/Features/User/userSlice';\nimport {\n  hasBoardPermission,\n  hasLevelPermission,\n  isAdmin,\n} from '@util/authUtil';\nimport { getCurrentUserFromToken, isTokenExpired } from '@util/jwtUtil';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nexport interface AuthGuardOptions {\n  requiredLevel?: number;\n  adminOnly?: boolean;\n  boardPermissions?: {\n    writeLevel?: number;\n    readLevel?: number;\n  };\n  redirectOnError?: string;\n  showToastOnError?: boolean;\n}\n\nexport interface AuthGuardResult {\n  isAuthenticated: boolean;\n  hasPermission: boolean;\n  isLoading: boolean;\n  user: any;\n  errorType: AuthErrorType | null;\n  checkPermissionAsync: () => Promise<boolean>;\n}\n\nexport const useAuthGuard = (\n  options: AuthGuardOptions = {}\n): AuthGuardResult => {\n  const userState = useAppSelector(selectUserInfo);\n  const { userInfo, isLoggedIn } = userState;\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorType, setErrorType] = useState<AuthErrorType | null>(null);\n  const [tokenUser, setTokenUser] = useState<any>(null);\n\n  // 무한 재실행 방지를 위한 ref\n  const isCheckingRef = useRef(false);\n  const lastTokenUserRef = useRef<string | null>(null);\n\n  // JWT 토큰 기반 인증 상태 확인 및 자동 정리\n  const checkTokenAuth = useCallback(async () => {\n    try {\n      // 토큰 유효성 검증 및 자동 정리 함수 사용\n      const { validateAndCleanToken } = await import('@util/jwtUtil');\n      const tokenPayload = await validateAndCleanToken();\n\n      if (!tokenPayload) {\n        setErrorType('LOGIN_REQUIRED');\n        return false;\n      }\n\n      // 토큰 사용자가 실제로 변경된 경우에만 상태 업데이트\n      const tokenUserString = JSON.stringify(tokenPayload);\n      if (lastTokenUserRef.current !== tokenUserString) {\n        lastTokenUserRef.current = tokenUserString;\n        setTokenUser(tokenPayload);\n      }\n\n      return true;\n    } catch (error) {\n      console.error('토큰 인증 확인 실패:', error);\n      setErrorType('TOKEN_INVALID');\n      \n      // 오류 시에도 만료된 토큰 정리\n      const { removeExpiredTokenFromCookie } = await import('@util/jwtUtil');\n      removeExpiredTokenFromCookie();\n      return false;\n    }\n  }, []);\n\n  // 권한 체크 로직 - Redux store 정보 우선 사용\n  const checkPermissions = useCallback(\n    (user: any) => {\n      // 관리자 전용 체크\n      if (options.adminOnly && !isAdmin(user)) {\n        setErrorType('ADMIN_ONLY');\n        return false;\n      }\n\n      // 레벨 권한 체크 - 동기 처리로 변경 (Redux store 정보 사용)\n      if (\n        options.requiredLevel !== undefined &&\n        !hasLevelPermission(user, options.requiredLevel)\n      ) {\n        setErrorType('INSUFFICIENT_PERMISSION');\n        return false;\n      }\n\n      // 게시판 권한 체크\n      if (options.boardPermissions) {\n        const writeLevel = options.boardPermissions.writeLevel;\n        const readLevel = options.boardPermissions.readLevel;\n\n        if (\n          writeLevel !== undefined &&\n          !hasBoardPermission(user, writeLevel, true)\n        ) {\n          setErrorType('INSUFFICIENT_PERMISSION');\n          return false;\n        }\n\n        if (\n          readLevel !== undefined &&\n          !hasBoardPermission(user, readLevel, true)\n        ) {\n          setErrorType('INSUFFICIENT_PERMISSION');\n          return false;\n        }\n      }\n\n      return true;\n    },\n    [options.adminOnly, options.requiredLevel, options.boardPermissions]\n  );\n\n  // 비동기 권한 체크 (수동 호출용) - 의존성 최소화\n  const checkPermissionAsync = useCallback(async (): Promise<boolean> => {\n    // 이미 체크 중이면 중복 실행 방지\n    if (isCheckingRef.current) {\n      return false;\n    }\n\n    isCheckingRef.current = true;\n    setIsLoading(true);\n    setErrorType(null);\n\n    try {\n      // 1. Redux store에 사용자 정보가 있으면 우선 사용\n      if (isLoggedIn && userInfo) {\n        const hasPermission = checkPermissions(userInfo);\n        return hasPermission;\n      }\n\n      // 2. Redux에 정보가 없는 경우에만 토큰 기반 인증 확인 (예외적 상황)\n      const isTokenValid = await checkTokenAuth();\n      if (!isTokenValid) {\n        return false;\n      }\n\n      // 3. 토큰 사용자 정보로 권한 체크 (극히 예외적 상황)\n      if (!tokenUser) {\n        setErrorType('LOGIN_REQUIRED');\n        return false;\n      }\n\n      console.warn(\n        'Redux store에 사용자 정보가 없어 JWT 토큰 정보로 권한 체크를 수행합니다.'\n      );\n      const hasPermission = checkPermissions(tokenUser);\n      return hasPermission;\n    } catch (error) {\n      console.error('권한 체크 실패:', error);\n      setErrorType('TOKEN_INVALID');\n      return false;\n    } finally {\n      setIsLoading(false);\n      isCheckingRef.current = false;\n    }\n  }, [checkTokenAuth, checkPermissions, isLoggedIn, userInfo, tokenUser]);\n\n  // 초기 권한 체크 (컴포넌트 마운트 시에만) - 의존성 제거\n  useEffect(() => {\n    checkPermissionAsync();\n  }, []); // 빈 의존성 배열로 한 번만 실행\n\n  // Redux 사용자 정보 변경 시 재체크 - 동기 처리로 변경\n  useEffect(() => {\n    if (isLoggedIn && userInfo && !isCheckingRef.current) {\n      const hasPermission = checkPermissions(userInfo);\n      if (!hasPermission) {\n        setIsLoading(false);\n      } else {\n        setIsLoading(false);\n        setErrorType(null);\n      }\n    }\n  }, [isLoggedIn, userInfo, checkPermissions]);\n\n  // Redux 정보를 우선하되, 없으면 토큰 사용자 정보 사용\n  const currentUser = userInfo || tokenUser;\n  const isAuthenticated = isLoggedIn && !!currentUser;\n  const hasPermission = isAuthenticated && !errorType;\n\n  return {\n    isAuthenticated,\n    hasPermission,\n    isLoading,\n    user: currentUser,\n    errorType,\n    checkPermissionAsync,\n  };\n};\n\n// 편의 Hook들\nexport const useAdminGuard = (options?: Omit<AuthGuardOptions, 'adminOnly'>) =>\n  useAuthGuard({ ...options, adminOnly: true });\n\nexport const useLevelGuard = (\n  requiredLevel: number,\n  options?: Omit<AuthGuardOptions, 'requiredLevel'>\n) => useAuthGuard({ ...options, requiredLevel });\n\nexport const useBoardWriteGuard = (\n  writeLevel: number,\n  options?: Omit<AuthGuardOptions, 'boardPermissions'>\n) =>\n  useAuthGuard({\n    ...options,\n    boardPermissions: { writeLevel },\n  });\n","import { CommonResponse } from \"../../types/common\";\nimport pointService from \"@services/pointService\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nexport const useUserPointQuery = (userId: string) => {\n  return useQuery({\n    queryKey: [\"userPoint\", userId],\n    queryFn: () => pointService.getUserPoint(userId),\n    staleTime: 1000 * 60 * 3, // 3분 동안 캐시 유지 (구매 내역은 변경될 수 있으므로 단축)\n    gcTime: 1000 * 60 * 60, // 1시간 동안 캐시 저장\n    retry: 3, // 실패 시 3번까지 재시도\n    select: (data: CommonResponse<number>) => {\n      if (data.successOrNot === \"Y\" && data.data) {\n        return data.data;\n      }\n      throw new Error(\"Failed to fetch user point\");\n    }\n  });\n};\n\nexport const useUserPointHistoryQuery = (userId: string) => {\n  return useQuery({\n    queryKey: [\"userPointHistory\", userId],\n    queryFn: () => pointService.getUserPointHistory(userId),\n  });\n};","import { SearchType, SortBy } from \"../../types/board\";\nimport type { CommonResponse } from \"../../types/common\";\nimport type { GalleryListItem, Post } from \"../../types/post\";\nimport postService from \"@services/postService\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { timeAgo } from \"@util/dateUtil\";\n\ninterface PostService {\n  boardId: number;\n  page: number;\n  pageSize?: number;\n  sortBy?: SortBy;\n  searchType?: SearchType;\n  searchText?: string;\n  categoryId?: string | number | null;\n}\n\nexport const usePostQuery = (\n  params: PostService,\n  options: { enabled: boolean }\n) =>\n  useQuery({\n    queryKey: [\"post\", params],\n    queryFn: () => postService.getPost(params),\n    staleTime: 10000, // 10초 동안 캐시 유지\n    gcTime: 1000 * 60 * 60 * 24, // 24시간 동안 캐시 저장\n    retry: 3, // 실패 시 3번까지 재시도\n    enabled: options?.enabled,\n    placeholderData: (prev) => prev,\n    refetchOnMount: false,\n    select: (data: CommonResponse<Post>) => {\n      if (data.successOrNot === \"N\") {\n        return {\n          data: {\n            items: [],\n            totalCount: 0,\n            notices: [],\n          },\n        };\n      }\n      if (!data.data) {\n        return {\n          data: {\n            items: [],\n            totalCount: 0,\n            notices: [],\n          },\n        };\n      }\n      return {\n        data: {\n          items: data.data.items.map((item) => ({\n            ...item,\n            created_at: timeAgo(item.created_at || new Date().toISOString()),\n          })),\n          totalCount: data.data.totalCount,\n          notices: data.data.notices,\n        },\n      };\n    },\n  });\n\nexport const usePostBookmarkQuery = () =>\n  useQuery({\n    queryKey: [\"postBookmark\"],\n    queryFn: () => postService.getBookmarkPosts(),\n    staleTime: 1000 * 30, // 30초 동안 캐시 유지\n    gcTime: 1000 * 60 * 60 * 24, // 24시간 동안 캐시 저장\n    retry: 3, // 실패 시 3번까지 재시도\n    select: (data: CommonResponse<GalleryListItem[]>) => {\n      if (data.successOrNot === \"N\") {\n        return {\n          data: [],\n        };\n      }\n      return data.data;\n    },\n  });\n\nexport const useDraftPostQuery = (\n  params: {\n    page?: number;\n    pageSize?: number;\n    sortBy?: SortBy;\n    writerId?: number;\n  } = {},\n  options: { enabled: boolean; enablePolling?: boolean } = { enabled: true, enablePolling: false }\n) =>\n  useQuery({\n    queryKey: [\"draftPost\", params],\n    queryFn: () => postService.getDraftPosts(params),\n    staleTime: 0, // 폴링 사용 시 캐시 비활성화\n    gcTime: 1000 * 60 * 5, // 5분 동안 캐시 저장\n    retry: 3, // 실패 시 3번까지 재시도\n    enabled: options?.enabled,\n    refetchInterval: (query) => {\n      // 폴링이 비활성화된 경우\n      if (!options?.enablePolling) return false;\n      \n      // 쿼리 결과를 확인하여 모든 업로드가 완료되었으면 폴링 중지\n      const result = query.state.data;\n      if (result && result.data && Array.isArray(result.data)) {\n        const allCompleted = result.data.every((post: any) => {\n          if (!post.attachments || post.attachments.length === 0) return true;\n          return post.attachments.every((attachment: any) => attachment.status === 'uploaded');\n        });\n        \n        if (allCompleted) {\n          console.log('✅ 모든 파일 업로드가 완료되어 폴링을 중지합니다.');\n          return false;\n        }\n      }\n      \n      return 2000; // 2초마다 폴링\n    },\n    refetchIntervalInBackground: false, // 백그라운드에서는 폴링 비활성화\n    select: (data: CommonResponse<Post>) => {\n      if (data.successOrNot === \"N\") {\n        return {\n          data: {\n            items: [],\n            totalCount: 0,\n            notices: [],\n          },\n        };\n      }\n      if (!data.data) {\n        return {\n          data: {\n            items: [],\n            totalCount: 0,\n            notices: [],\n          },\n        };\n      }\n      return {\n        data: {\n          items: data.data.items.map((item) => ({\n            ...item,\n            created_at: timeAgo(item.created_at || new Date().toISOString()),\n          })),\n          totalCount: data.data.totalCount,\n          notices: data.data.notices,\n        },\n      };\n    },\n  });","import type { CommonResponse } from \"../../types/common\";\nimport type { Board } from \"../../types/board\";\nimport boardService from \"@services/boardService\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nexport const useBoardQuery = (options: { enabled: boolean }) =>\n  useQuery<CommonResponse<Board[]>>({\n    queryKey: [\"boards\"],\n    queryFn: () => boardService.getBoards(),\n    staleTime: 1000 * 60 * 60, // 1시간 동안 캐시 유지\n    gcTime: 1000 * 60 * 60 * 24, // 24시간 동안 캐시 저장\n    retry: 3, // 실패 시 3번까지 재시도\n    enabled: options?.enabled,\n    select: (data: CommonResponse<Board[]>) => {\n      if (data.successOrNot === \"N\" || !data.data) {\n        return {\n          ...data,\n          data: [],\n        };\n      }\n      return data;\n    },\n  });\n\nexport const useSingleBoardQuery = (boardId: number, options?: { enabled?: boolean }) =>\n  useQuery<CommonResponse<Board>>({\n    queryKey: [\"board\", boardId],\n    queryFn: () => boardService.getBoard(boardId),\n    staleTime: 1000 * 60 * 60, // 1시간 동안 캐시 유지\n    gcTime: 1000 * 60 * 60 * 24, // 24시간 동안 캐시 저장\n    retry: 3, // 실패 시 3번까지 재시도\n    enabled: options?.enabled !== false && boardId > 0,\n    select: (data: CommonResponse<Board>) => {\n      if (data.successOrNot === \"N\" || !data.data) {\n        return {\n          ...data,\n          data: null,\n        };\n      }\n      return data;\n    },\n  });\n","import type { CommonResponse } from \"../../types/common\";\nimport commentService from \"@services/commentService\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { timeAgo } from \"@util/dateUtil\";\n\n// 댓글 조회를 위한 인터페이스\ninterface CommentQueryParams {\n  postId: number;\n  page: number;\n  pageSize?: number;\n}\n\n// 댓글 조회 훅\nexport const useCommentQuery = (\n  params: CommentQueryParams,\n  options?: { enabled?: boolean }\n) => {\n\n  \n  return useQuery({\n    queryKey: [\"comments\", params],\n    queryFn: () => {\n      return commentService.getComments(params);\n    },\n    staleTime: 1000 * 60 * 5, // 5분 동안 캐시 유지\n    gcTime: 1000 * 60 * 30, // 30분 동안 캐시 저장\n    retry: 2, // 실패 시 2번까지 재시도\n    enabled: options?.enabled ?? true,\n    select: (data: CommonResponse<any>) => {\n      \n      if (data.successOrNot === \"N\") {\n        return {\n          data: {\n            items: [],\n            totalCount: 0,\n          },\n        };\n      }\n      if (!data.data) {\n        return {\n          data: {\n            items: [],\n            totalCount: 0,\n          },\n        };\n      }\n      \n      const result = {\n        data: {\n          items: Array.isArray(data.data.items)\n            ? data.data.items.map((item: any) => ({\n                ...item,\n                created_at: timeAgo(item.created_at),\n              }))\n            : [],\n          totalCount: data.data.totalCount || 0,\n        },\n      };\n      \n      return result;\n    },\n  });\n};\n","// @semicolon/community-core v1.0.0\n// Community platform core components and utilities\n\n// =============================================================================\n// MAIN EXPORTS - Most commonly used items\n// =============================================================================\n\n// Essential Utilities (most frequently used)\nexport { formatNumberWithComma } from './utils/numberUtil';\nexport { formatDate, timeAgo } from './utils/dateUtil';\nexport { isAdmin } from './utils/authUtil';\n\n// Core Types (essential for TypeScript users)\nexport type { User } from './types/User';\nexport type { CommonResponse } from './types/common';\n\n// =============================================================================\n// CATEGORY EXPORTS - Organized by domain\n// =============================================================================\n\n// All utilities\nexport * as Utils from './utils';\n\n// All types (commented out due to build complexity)\n// export * as Types from './types';\n\n// Constants will be added in Phase 2\n// export * as Constants from './constants';\n\n// =============================================================================\n// INITIALIZATION\n// =============================================================================\n\n// Package initialization function\nexport { initializeCommunityCore } from './config/init';\n\n// Configuration utilities\nexport { getPackageConfig } from './config/init';\n\n// =============================================================================\n// COMPONENT EXPORTS - New design system components\n// =============================================================================\n\n// Essential components (Phase 1)\nexport { Button, Badge, Avatar } from './components/atoms';\nexport type { ButtonProps, BadgeProps, AvatarProps } from './components/atoms';\n\n// Phase 2.1 Form Components\nexport { \n  Input, \n  Select, \n  Checkbox, \n  Radio, \n  Switch, \n  TextArea \n} from './components/atoms';\nexport type { \n  InputProps, \n  SelectProps, \n  SelectOption,\n  CheckboxProps, \n  RadioProps, \n  SwitchProps, \n  TextAreaProps \n} from './components/atoms';\n\n// Phase 2.2 Loading & Feedback Components\nexport {\n  Skeleton,\n  SkeletonText,\n  SkeletonAvatar,\n  SkeletonButton,\n  SkeletonCard\n} from './components/atoms';\nexport type { SkeletonProps } from './components/atoms';\n\n// =============================================================================  \n// SERVICE LAYER EXPORTS - Phase 2 Complete\n// =============================================================================\n\n// Service Classes (Modern API)\nexport { \n  BaseService, \n  UserService, \n  PostService, \n  BoardService,\n  AuthService,\n  PermissionService\n} from './services';\n\n// Legacy Service Objects (backward compatibility)\nexport {\n  baseService,\n  userService, \n  postService,\n  boardService,\n  authService,\n  permissionService\n} from './services';\n\n// Service Types\nexport type {\n  RequestOptions,\n  HttpMethod,\n  UserServiceOptions,\n  UserPermission,\n  UserUpdateData,\n  UserSearchOptions,\n  PostServiceOptions,\n  PostListOptions,\n  PostCreateData,\n  PostUpdateData,\n  PostDownloadHistory,\n  DraftPostRequest,\n  DraftPostResponse,\n  AsyncUploadConfig,\n  UploadStartResponse,\n  UploadProgressResponse,\n  BoardServiceOptions,\n  BoardListOptions,\n  BoardCreateData,\n  BoardUpdateData,\n  BoardCategoryCreateData,\n  BoardStats,\n  AuthServiceOptions,\n  LoginCredentials,\n  RegisterData,\n  AuthTokens,\n  AuthResponse,\n  PasswordResetData,\n  PasswordChangeData,\n  SessionInfo,\n  PermissionServiceOptions,\n  PermissionCheck,\n  PermissionResult,\n  UserPermissions,\n  LevelInfo,\n  RoleInfo,\n  PermissionGrant\n} from './services';\n\n// =============================================================================\n// HOOKS LAYER EXPORTS - Phase 3 Complete ✅\n// =============================================================================\n\n// Authentication & State Management Hooks\nexport { useAuth } from './hooks/User/useAuth';\nexport { useGlobalLoader } from './hooks/common/useGlobalLoader';\nexport { usePermission } from './hooks/common/usePermission';\nexport { useAuthGuard } from './hooks/common/useAuthGuard';\n\n// React Query Data Fetching Hooks\nexport { useUserPointQuery, useUserPointHistoryQuery } from './hooks/queries/useUserQuery';\nexport { usePostQuery, usePostBookmarkQuery, useDraftPostQuery } from './hooks/queries/usePostQuery';\nexport { useBoardQuery } from './hooks/queries/useBoardQuery';\nexport { useCommentQuery } from './hooks/queries/useCommentQuery';\n\n// Common Utility Hooks\nexport { useDeviceType } from './hooks/common/useDeviceType';\nexport { useRouterWithLoader } from './hooks/common/useRouterWithLoader';\n\n// =============================================================================\n// DEVELOPMENT EXPORTS - Available but not prominently featured\n// =============================================================================\n\n// Full category exports (for advanced usage) - commented out to reduce build warnings\n// export * as Components from './components';  // All components (legacy + new)\n// export * as Hooks from './hooks';         // Phase 3\n// export * as Services from './services';   // Completed in Phase 2\n\n// =============================================================================\n// VERSION INFO\n// =============================================================================\nexport const VERSION = '1.3.0';\nexport const PACKAGE_NAME = '@team-semicolon/community-core';","import { AuthChangeEvent, createClient } from \"@supabase/supabase-js\";\n\nfunction createClientSupabase() {\n  const client = createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      auth: {\n        persistSession: true,\n        autoRefreshToken: true,\n        detectSessionInUrl: true,\n        storageKey: \"sb-access-token\",\n        storage: {\n          getItem: (key: string) => {\n            if (typeof window === \"undefined\") return null;\n\n            try {\n              const value = document.cookie\n                .split(\"; \")\n                .find((row) => row.startsWith(`${key}=`))\n                ?.split(\"=\")[1];\n\n              if (!value) {\n                return null;\n              }\n\n              const decodedValue = decodeURIComponent(value);\n              \n              // 토큰 유효성 검증 (만료된 토큰 자동 정리)\n              try {\n                const sessionData = JSON.parse(decodedValue);\n                if (sessionData?.access_token) {\n                  // 동적 import로 순환 참조 방지\n                  import('../../utils/jwtUtil').then(({ decodeJWTPayload, isTokenExpired, removeExpiredTokenFromCookie }) => {\n                    const payload = decodeJWTPayload(sessionData.access_token);\n                    if (payload && isTokenExpired(payload)) {\n                      console.log('🗑️ 클라이언트 Storage: 만료된 토큰 감지, 정리 중...');\n                      removeExpiredTokenFromCookie(key);\n                    }\n                  });\n                }\n              } catch (parseError) {\n                // JSON 파싱 실패 시 로그만 남기고 원본 반환\n                console.warn('클라이언트 Storage: 세션 데이터 파싱 실패:', parseError);\n              }\n              \n              return decodedValue;\n            } catch (error) {\n              console.error(\"❌ 클라이언트: 쿠키 읽기 실패:\", error);\n              return null;\n            }\n          },\n\n          setItem: (key: string, value: string) => {\n            if (typeof window === \"undefined\") return;\n\n            try {\n              // 세션 데이터 유효성 검사\n              const sessionData = JSON.parse(value);\n              if (!sessionData.access_token) {\n                // console.warn(\"⚠️  클라이언트: access_token이 없는 세션 데이터\");\n                return;\n              }\n\n              const encodedValue = encodeURIComponent(value);\n              \n              // 쿠키 설정 (30일 유효)\n              const expires = new Date();\n              expires.setDate(expires.getDate() + 30);\n              \n              document.cookie = `${key}=${encodedValue}; expires=${expires.toUTCString()}; path=/; SameSite=Lax; Secure`;\n              \n              // console.log(\"💾 클라이언트: 세션 정보 쿠키 저장 성공\");\n              // console.log(\"🔑 클라이언트: access_token 존재:\", !!sessionData.access_token);\n              // console.log(\"👤 클라이언트: 사용자 정보:\", sessionData.user?.email);\n            } catch (error) {\n              // console.error(\"❌ 클라이언트: 쿠키 저장 실패:\", error);\n            }\n          },\n\n          removeItem: (key: string) => {\n            if (typeof window === \"undefined\") return;\n\n            try {\n              document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n              // console.log(\"🗑️  클라이언트: 쿠키 삭제 완료\");\n            } catch (error) {\n              // console.error(\"❌ 클라이언트: 쿠키 삭제 실패:\", error);\n            }\n          },\n        },\n      },\n    }\n  );\n\n  // 세션 상태 변경 감지 및 처리\n  if (typeof window !== \"undefined\") {\n    let isHandlingSignOut = false;  // 로그아웃 처리 중복 방지 플래그\n\n    client.auth.onAuthStateChange((event: AuthChangeEvent, session) => {\n      // console.log(\"🔄 클라이언트: 인증 상태 변경:\", event);\n      \n      switch (event) {\n        case \"SIGNED_OUT\":\n          if (!isHandlingSignOut) {\n            isHandlingSignOut = true;\n            // 쿠키 및 로컬 상태 정리\n            client.auth.getSession().then(() => {\n              isHandlingSignOut = false;\n            });\n          }\n          break;\n          \n        case \"TOKEN_REFRESHED\":\n          if (session) {\n            // console.log(\"🔄 클라이언트: 토큰 갱신됨\");\n            // 필요한 경우 추가 처리\n          }\n          break;\n          \n        case \"USER_UPDATED\":\n          if (!session) {\n            // 세션이 없는 경우에만 로그아웃 처리\n            if (!isHandlingSignOut) {\n              isHandlingSignOut = true;\n              client.auth.signOut().then(() => {\n                isHandlingSignOut = false;\n              });\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  return client;\n}\n\nexport const clientSupabase = createClientSupabase();\n"],"names":["formatNumberWithComma","num","parts","toString","split","replace","length","join","str","parseFloat","formatDate","dateString","isSimple","date","Date","isNaN","getTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeAgo","now","Math","floor","DateUtil","toChar","input","format","map","yyyy","MM","dd","HH","mm","ss","Object","entries","reduce","result","key","value","isJWTPayload","user","sub","user_metadata","isUserObject","id","nickname","permissionType","checkIsAdmin","level","isAdmin","hasLevelPermission","requiredLevel","keys","console","warn","is_admin","isLoggedIn","IMAGE_SIZE","sm","md","lg","xl","xxl","transformSupabaseImageUrl","url","size","quality","includes","transformedUrl","width","validQuality","max","min","separator","error","generateImageSrcSet","sizes","forEach","supabaseImageLoader","src","normalizeImageSrc","resourceUrl","process","env","NEXT_PUBLIC_STORAGE_URL","startsWith","relativePath","optimizeImageSrc","normalizedSrc","undefined","isGifImage","lowerSrc","toLowerCase","endsWith","unoptimized","LevelUtil","calculateUserLevel","currentPoints","levelTable","sortedLevels","sort","a","b","userLevel","required_points","getLevelProgress","currentLevel","currentLevelPoints","nextLevel","nextLevelPoints","progressPercentage","pointsToNext","this","currentLevelInfo","find","nextLevelInfo","pointsNeededForNext","pointsEarnedInCurrentLevel","round","getNextLevelInfo","requiredPoint","levelUpPercentage","isMaxLevel","levelUpPercent","toCamelCase","_","letter","toUpperCase","toSnakeCase","keysToCamelCase","obj","Array","isArray","item","camelKey","keysToSnakeCase","snakeKey","addUrlParams","baseUrl","params","URL","window","location","origin","searchParams","URLSearchParams","search","set","pathname","Error","getPreviousUrlWithParams","storageKey","fallbackUrl","previousUrl","sessionStorage","getItem","decodeJWTPayload","token","payload","decodeURIComponent","atob","c","charCodeAt","slice","base64UrlDecode","JSON","parse","async","getCurrentUserFromToken","clientSupabase","Promise","resolve","then","client","data","session","auth","getSession","access_token","isTokenExpired","exp","getTokenTimeToExpiry","removeExpiredTokenFromCookie","cookieName","cookieString","document","cookie","row","decodedCookie","sessionData","accessToken","log","name","validateAndCleanToken","signOut","shouldRefreshToken","UploadErrorType","ERROR_MESSAGES","FILE_TOO_LARGE","UNSUPPORTED_FORMAT","PERMISSION_DENIED","NETWORK_ERROR","SERVER_ERROR","UPLOAD_TIMEOUT","QUOTA_EXCEEDED","INVALID_POST","files","startTime","totalFiles","completedFiles","filter","f","status","failedFiles","totalBytes","sum","fileSize","uploadedBytes","progress","retryCount","metrics","elapsed","uploadedMB","remaining","errorMessage","message","errorResponse","response","code","errorCode","context","errorInfo","stack","timestamp","toISOString","userAgent","navigator","NODE_ENV","group","groupEnd","globalConfig","initializeCommunityCore","config","development","getPackageConfig","freeze","Button","forwardRef","variant","loading","fullWidth","startIcon","endIcon","disabled","className","children","props","ref","buttonClasses","primary","secondary","outline","ghost","danger","Boolean","_jsxs","_jsx","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","displayName","Badge","rounded","dot","dotClasses","success","warning","info","badgeClasses","Avatar","square","alt","imageError","setImageError","useState","imageLoaded","setImageLoaded","baseClasses","xs","optimizedSrc","avatarClasses","onError","onLoad","part","charAt","getInitials","online","offline","away","busy","title","Input","label","helper","type","startAdornment","endAdornment","containerClassName","labelClassName","errorClassName","helperClassName","required","inputId","random","substr","inputClasses","trim","htmlFor","Select","options","onChange","placeholder","multiple","searchable","searchPlaceholder","showIcon","showDescription","maxHeight","noOptionsText","dropdownClassName","isOpen","setIsOpen","searchTerm","setSearchTerm","dropdownRef","useRef","selectId","selectedOption","useMemo","option","useEffect","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","selectClasses","role","tabIndex","onClick","strokeLinecap","strokeLinejoin","style","isSelected","handleOptionClick","description","Checkbox","checked","indeterminate","labelPosition","checkboxId","checkboxClasses","checkboxElement","labelElement","Radio","radioId","labelText","radioElement","Switch","onText","offText","switchId","currentSize","track","thumb","translate","text","trackClasses","thumbClasses","switchElement","TextArea","autoResize","minHeight","maxLength","showCount","countClassName","textareaId","textareaHeight","setTextareaHeight","handleAutoResize","useCallback","element","height","scrollHeight","newHeight","textareaClasses","currentLength","isOverLimit","Skeleton","animated","light","backgroundClass","combinedStyle","getDefaultStyles","rectangular","circular","SkeletonText","lines","from","index","SkeletonAvatar","SkeletonButton","buttonVariant","buttonSize","getButtonSize","SkeletonCard","baseURL","NEXT_PUBLIC_API_URL","axiosInstance","axios","create","timeout","headers","Accept","withCredentials","CommonConstants","CommonStatus","interceptors","request","use","metadata","skipLoader","FormData","sessionCookie","decodedSession","jwtUtil","Authorization","importError","successOrNot","statusCode","CustomEvent","detail","dispatchEvent","_retried","sessionError","refreshData","refreshError","refreshSession","originalConfig","reject","BaseService","constructor","defaultHeaders","handleError","AxiosError","INTERNAL_SERVER_ERROR","buildUrl","endpoint","prepareConfig","useMiniLoader","loaderText","get","post","put","patch","delete","getSilent","postSilent","putSilent","patchSilent","deleteSilent","getMini","postMini","putMini","patchMini","deleteMini","baseService","UserService","super","getMyInfo","getMyPermission","getMyPoint","getRealtimeUser","getUserId","getUserUuid","updateUserProfile","refreshMyInfo","getUserInfo","needPoint","includePermissions","checkUserIdExist","userId","checkNicknameExist","getUserById","getUsersByIds","userIds","searchUsers","keyword","page","pageSize","updateUserLevel","updateUserBanStatus","isBanned","reason","userService","profileImage","PostService","getPostList","boardId","sortBy","searchType","searchText","needNotice","categoryId","writerId","getPostById","postId","createPost","formData","append","content","isNotice","hasFiles","downloadPoint","attachments","stringify","file","updatePost","deletePost","reactToPost","reactionType","reactionText","purchaseFiles","bookmarkPost","removeBookmark","getBookmarkedPosts","movePost","board_id","createDraftPost","publishPost","startAsyncFileUpload","needWatermark","watermarkPosition","watermarkOpacity","getUploadProgress","retryFailedFiles","failedFileUuids","cancelUpload","createPostAsync","draftResponse","getDraftPosts","searchPosts","boardIds","getPostStats","postService","getPost","reactionPost","deleteBookmarkPost","getBookmarkPosts","BoardService","getBoards","isActive","getBoard","createBoard","updateBoard","deleteBoard","getBoardCategories","createBoardCategory","updateBoardCategory","deleteBoardCategory","getBoardStats","searchBoards","getPopularBoards","limit","getRecentlyActiveBoards","getFavoriteBoards","addToFavorites","removeFromFavorites","getBoardPermissions","updateBoardPermissions","permissions","getBoardModerators","addBoardModerator","removeBoardModerator","reportBoard","getBoardActivity","boardService","AuthService","login","credentials","logout","register","refreshToken","validateSession","getCurrentUser","requestPasswordReset","resetPassword","newPassword","newPasswordConfirm","changePassword","sendEmailVerification","email","verifyEmail","checkUserIdAvailability","checkNicknameAvailability","checkEmailAvailability","getUserSessions","revokeSession","sessionId","revokeAllSessions","enable2FA","confirm2FA","disable2FA","password","verify2FACode","authService","PermissionService","checkPermission","check","resource","action","checkPermissions","checks","getMyPermissions","getUserPermissions","getLevels","getLevel","getRoles","getRole","roleId","createRole","updateRole","updates","deleteRole","assignRole","removeRole","grantPermission","grant","revokePermission","permission","getUserGrants","getPermissionHistory","checkBoardAccess","checkPostAccess","checkAdminAccess","section","getLevelProgression","banned","duration","getUserRestrictions","permissionService","withSelectorModule","exports","React","require$$0","objectIs","is","x","y","useSyncExternalStore","useDebugValue","useSyncExternalStoreWithSelector_production","useSyncExternalStoreWithSelector","subscribe","getSnapshot","getServerSnapshot","selector","isEqual","instRef","inst","hasValue","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","useSyncExternalStoreWithSelector_development","registerInternalModuleStop","ContextKey","Symbol","for","gT","globalThis","getContext","createContext","contextMap","Map","realContext","ReactReduxContext","createReduxContextHook","contextValue","useContext","useReduxContext","createStoreHook","useReduxContext2","useStore2","store","assign","withTypes","useStore","createDispatchHook","useDispatch2","dispatch","useDispatch","refEquality","createSelectorHook","useSelector2","equalityFnOrOptions","equalityFn","reduxContext","subscription","getServerState","firstRun","wrappedSelector","state","selected","devModeChecks","identityFunctionCheck","stabilityCheck","finalIdentityFunctionCheck","finalStabilityCheck","toCompare","e","selected2","selectedState","addNestedSub","getState","useSelector","useDeviceType","deviceType","app","updateDeviceType","updateDeviceTypeFromWidth","innerWidth","isMobile","isTablet","isDesktop","isMobileOrTablet","useGlobalLoader","useAppDispatch","isAutoTransitioned","useAppSelector","selectUIState","showLoader","showMiniLoading","hideLoader","hideMiniLoading","setLoaderText","setMiniLoadingText","withLoader","asyncFn","showPostLoader","showLoading","hidePostLoader","hideAllLoaders","hideLoading","setPostLoaderText","setLoadingText","withPostLoader","showMiniLoader","hideMiniLoader","setMiniLoaderText","withMiniLoader","usePermission","userInfo","selectUserInfo","reduxUser","jwtUser","setJwtUser","currentUser","getUserLevel","adminStatus","tokenUser","getJwtUser","showAccessDeniedToast","showToast","headerTextColor","useRouterWithLoader","router","useNextRouter","usePathname","shouldShowLoader","href","targetPath","isExternalDomain","targetUrl","currentDomain","hostname","push","useAuth","userState","loginWithLoader","loginData","fulfilled","match","logoutWithLoader","initializeAuth","autoLogin","checkSession","import","tokenPayload","valid","navigateWithAuth","path","adminOnly","sessionCheck","isUser","useAuthGuard","isLoading","setIsLoading","errorType","setErrorType","setTokenUser","isCheckingRef","lastTokenUserRef","checkTokenAuth","tokenUserString","boardPermissions","writeLevel","readLevel","hasBoardPermission","checkPermissionAsync","isAuthenticated","hasPermission","useUserPointQuery","useQuery","queryKey","queryFn","pointService","getUserPoint","staleTime","gcTime","retry","select","useUserPointHistoryQuery","getUserPointHistory","usePostQuery","enabled","placeholderData","prev","refetchOnMount","items","totalCount","notices","created_at","usePostBookmarkQuery","useDraftPostQuery","enablePolling","refetchInterval","query","every","attachment","refetchIntervalInBackground","useBoardQuery","useCommentQuery","commentService","getComments","VERSION","PACKAGE_NAME","createClient","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","persistSession","autoRefreshToken","detectSessionInUrl","storage","decodedValue","parseError","setItem","encodedValue","encodeURIComponent","expires","setDate","toUTCString","removeItem","isHandlingSignOut","onAuthStateChange","createClientSupabase"],"mappings":"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","x_google_ignoreList":[28,29,30,31]}