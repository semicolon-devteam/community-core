name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches: ["임시로막음"]

jobs:
  ci:
    name: Build and push container image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
      image_tag: ${{ steps.set_tag.outputs.image_tag }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      # Tagging rule
      # [yy].[m].[d].[H][M].v[actions build number]
      - name: Set Tag for Build and Artifacts
        run: |
          echo "IMAGE_TAG=${{ github.event.repository.name }}.$(TZ=UTC-9 date +'%y%m%d.%H%M').$(printf 'v%03d' ${{github.run_number}})" >> $GITHUB_ENV

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.14

      - name: Install Node.js dependencies
        run: npm install --legacy-peer-deps

      - name: Run linters
        run: npm run lint

      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Build and push Container image
        uses: docker/build-push-action@v6.5.0
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          no-cache: true
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            CACHE_BUST=${{ github.run_number }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Add Git tag to source repository and setup output"
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git tag -a "${{ env.IMAGE_TAG }}" -m "Push tag ${{ env.IMAGE_TAG }}"
          git push origin "${{ env.IMAGE_TAG }}"

          echo "image_tag=$(echo ${{ env.IMAGE_TAG }})" >> $GITHUB_OUTPUT
        id: set_tag
